<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[The Eye of Data (@Buttonwood)]]></title>
  <subtitle><![CDATA[Float like a butterfly! Stand like a buttonwood!]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://buttonwood.bitbucket.org//"/>
  <updated>2014-07-28T14:55:36.210Z</updated>
  <id>http://buttonwood.bitbucket.org//</id>
  
  <author>
    <name><![CDATA[Buttonwood]]></name>
    <email><![CDATA[tanhao2013@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Sysbench for MySQL Testing]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/25/20140725-sysbench-mysql/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/25/20140725-sysbench-mysql/</id>
    <published>2014-07-25T15:51:00.000Z</published>
    <updated>2014-07-25T15:09:24.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_For_whole_testing_scripts">1. For whole testing scripts</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="code"><pre>host<span class="subst">=</span>localhost
port<span class="subst">=</span><span class="number">3306</span>
socket<span class="subst">=</span>/home/<span class="built_in">data</span>/mysql/mysql<span class="built_in">.</span>sock
user<span class="subst">=</span>root
password<span class="subst">=</span><span class="number">123456</span>

resultsdir<span class="subst">=</span><span class="built_in">.</span>/results<span class="attribute">-thread</span>

threads<span class="subst">=</span><span class="string">"8 16 32 64 128"</span>

sizes<span class="subst">=</span><span class="string">"1000000 5000000 10000000 15000000 20000000 25000000 30000000"</span>


printf <span class="string">"sizes,threads,transactions,trns p/s,deadlocks,dls p/s,read/write requests,r/w reqs p/s,min,avg,max,99 percentile \n"</span> <span class="subst">&gt;&gt;</span> stat<span class="built_in">.</span>txt

mkdir <span class="attribute">-p</span> <span class="variable">$resultsdir</span>

for <span class="keyword">thread</span> <span class="keyword">in</span> <span class="variable">$threads</span>;<span class="keyword">do</span>
    mkdir <span class="variable">$resultsdir</span>/<span class="keyword">thread</span><span class="subst">-</span><span class="variable">$thread</span>
    for size <span class="keyword">in</span> <span class="variable">$sizes</span>; <span class="keyword">do</span>
        sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-table</span><span class="attribute">-engine</span><span class="subst">=</span>innodb <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-size</span><span class="subst">=</span><span class="variable">$size</span>  <span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span><span class="variable">$socket</span> <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span><span class="variable">$user</span> <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span><span class="variable">$host</span> <span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="variable">$password</span> <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test<span class="variable">$size</span> prepare;
        sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-table</span><span class="attribute">-engine</span><span class="subst">=</span>innodb <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-size</span><span class="subst">=</span><span class="variable">$size</span> <span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span><span class="variable">$socket</span> <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span><span class="variable">$user</span> <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span><span class="variable">$host</span> <span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="variable">$password</span> <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test<span class="variable">$size</span>  <span class="subst">--</span><span class="keyword">max</span><span class="attribute">-requests</span><span class="subst">=</span><span class="number">1000</span> <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="variable">$thread</span> run <span class="subst">|</span> tee <span class="attribute">-a</span> <span class="variable">$resultsdir</span>/<span class="keyword">thread</span><span class="subst">-</span><span class="variable">$thread</span>/sysbench<span class="built_in">.</span><span class="variable">$thread.</span><span class="variable">$size.report</span>;
        sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span><span class="variable">$host</span>  <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span><span class="variable">$user</span> <span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="variable">$password</span> <span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span><span class="variable">$socket</span> <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test<span class="variable">$size</span>  cleanup;
        
        cat <span class="variable">$resultsdir</span>/<span class="keyword">thread</span><span class="subst">-</span><span class="variable">$thread</span>/sysbench<span class="built_in">.</span><span class="variable">$thread.</span><span class="variable">$size.report</span> <span class="subst">|</span> <span class="subst">\</span>
  		egrep <span class="string">" cat|threads:|transactions:|deadlocks|read/write|min:|avg:|max:|percentile:"</span> <span class="subst">|</span> <span class="subst">\</span>
	 	sed  <span class="attribute">-e</span> <span class="string">'1 s/Number of threads: //'</span> <span class="subst">|</span> <span class="subst">\</span>
	 	tr <span class="attribute">-d</span> <span class="string">"\n"</span> <span class="subst">|</span> <span class="subst">\</span>
	 	sed <span class="attribute">-e</span> <span class="string">'s/Number of threads: /\n/g'</span> <span class="subst">\</span>
	 	<span class="attribute">-e</span> <span class="string">'s/[A-Za-z\/]\{1,\}://g'</span> <span class="subst">\</span>
	 	<span class="attribute">-e</span> <span class="string">'s/read\/write//g'</span> <span class="subst">\</span>
	 	<span class="attribute">-e</span> <span class="string">'s/approx\.  95//g'</span> <span class="subst">\</span>
	 	<span class="attribute">-e</span> <span class="string">'s/per sec.)//g'</span> <span class="subst">\</span>
	 	<span class="attribute">-e</span> <span class="string">'s/ms//g'</span> <span class="subst">\</span>
	 	<span class="attribute">-e</span> <span class="string">'s/(//g'</span>  <span class="subst">\</span>
	 	<span class="attribute">-e</span> <span class="string">'s/  */,/g'</span> <span class="subst">|</span> awk <span class="attribute">-v</span> d<span class="subst">=</span><span class="variable">$size</span> <span class="string">'{$0=d","$0}1'</span> <span class="subst">&gt;&gt;</span> stat<span class="built_in">.</span>txt
    done
done
</pre></td></tr></table></figure>

<h3 id="2-_Results">2. Results</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="code"><pre>SIZES,THREADS,TRANSACTIONS,TRNS P/S,DEADLOCKS,DLS P/S,READ/WRITE REQUESTS,R/W REQS P/S,<span class="keyword">MIN</span>,AVG,<span class="keyword">MAX</span>,<span class="number">99</span> PERCENTILE
<span class="number">1000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">236.13</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4486.45</span>,<span class="number">7.16</span>,<span class="number">33.66</span>,<span class="number">118.17</span>,<span class="number">59.32</span>
<span class="number">5000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">265.81</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5050.47</span>,<span class="number">6.35</span>,<span class="number">29.99</span>,<span class="number">99.14</span>,<span class="number">46.96</span>
<span class="number">10000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">379.46</span>,<span class="number">127</span>,<span class="number">48.19</span>,<span class="number">21413</span>,<span class="number">8125.43</span>,<span class="number">3.54</span>,<span class="number">21.01</span>,<span class="number">306.08</span>,<span class="number">34.70</span>
<span class="number">15000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">202.33</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3844.31</span>,<span class="number">8.76</span>,<span class="number">39.36</span>,<span class="number">113.15</span>,<span class="number">62.77</span>
<span class="number">20000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">185.34</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3521.38</span>,<span class="number">10.48</span>,<span class="number">43.05</span>,<span class="number">111.56</span>,<span class="number">66.92</span>
<span class="number">25000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">171.11</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3251.01</span>,<span class="number">7.46</span>,<span class="number">46.69</span>,<span class="number">506.47</span>,<span class="number">74.60</span>
<span class="number">30000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">163.24</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3101.55</span>,<span class="number">14.49</span>,<span class="number">48.91</span>,<span class="number">504.90</span>,<span class="number">77.21</span>
<span class="number">1000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">288.82</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5487.51</span>,<span class="number">7.82</span>,<span class="number">54.95</span>,<span class="number">168.84</span>,<span class="number">89.33</span>
<span class="number">5000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">270.04</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5130.82</span>,<span class="number">19.13</span>,<span class="number">59.02</span>,<span class="number">323.48</span>,<span class="number">92.27</span>
<span class="number">10000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">231.99</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4407.90</span>,<span class="number">5.73</span>,<span class="number">68.45</span>,<span class="number">329.40</span>,<span class="number">112.02</span>
<span class="number">15000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">230.78</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4384.76</span>,<span class="number">8.29</span>,<span class="number">69.03</span>,<span class="number">233.97</span>,<span class="number">124.21</span>
<span class="number">20000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">170.32</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3236.17</span>,<span class="number">9.48</span>,<span class="number">93.60</span>,<span class="number">799.09</span>,<span class="number">158.71</span>
<span class="number">25000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">164.44</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3124.34</span>,<span class="number">5.68</span>,<span class="number">96.44</span>,<span class="number">633.64</span>,<span class="number">165.06</span>
<span class="number">30000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">174.87</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3322.48</span>,<span class="number">9.50</span>,<span class="number">90.89</span>,<span class="number">520.92</span>,<span class="number">151.65</span>
<span class="number">1000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">316.29</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">6009.43</span>,<span class="number">7.72</span>,<span class="number">99.23</span>,<span class="number">346.24</span>,<span class="number">172.95</span>
<span class="number">5000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">248.03</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4712.60</span>,<span class="number">23.21</span>,<span class="number">125.06</span>,<span class="number">383.60</span>,<span class="number">208.35</span>
<span class="number">10000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">229.40</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4358.52</span>,<span class="number">5.39</span>,<span class="number">138.82</span>,<span class="number">598.64</span>,<span class="number">350.74</span>
<span class="number">15000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">211.46</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4017.80</span>,<span class="number">13.27</span>,<span class="number">150.13</span>,<span class="number">501.56</span>,<span class="number">284.44</span>
<span class="number">20000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">198.36</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3768.77</span>,<span class="number">8.54</span>,<span class="number">159.58</span>,<span class="number">822.41</span>,<span class="number">252.87</span>
<span class="number">25000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">181.85</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3455.19</span>,<span class="number">21.85</span>,<span class="number">174.35</span>,<span class="number">891.91</span>,<span class="number">271.78</span>
<span class="number">30000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">156.00</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2964.03</span>,<span class="number">9.45</span>,<span class="number">204.21</span>,<span class="number">811.06</span>,<span class="number">339.07</span>
<span class="number">1000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">311.37</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5916.07</span>,<span class="number">19.86</span>,<span class="number">198.48</span>,<span class="number">562.27</span>,<span class="number">369.82</span>
<span class="number">5000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">287.12</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5455.27</span>,<span class="number">29.12</span>,<span class="number">216.80</span>,<span class="number">843.55</span>,<span class="number">338.67</span>
<span class="number">10000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">222.90</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4235.16</span>,<span class="number">13.82</span>,<span class="number">285.81</span>,<span class="number">975.70</span>,<span class="number">773.48</span>
<span class="number">15000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">193.57</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3677.74</span>,<span class="number">12.19</span>,<span class="number">327.30</span>,<span class="number">1143.78</span>,<span class="number">846.66</span>
<span class="number">20000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">170.73</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3243.88</span>,<span class="number">55.67</span>,<span class="number">370.57</span>,<span class="number">1217.91</span>,<span class="number">1092.95</span>
<span class="number">25000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">157.72</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2996.74</span>,<span class="number">11.59</span>,<span class="number">401.83</span>,<span class="number">1680.79</span>,<span class="number">1306.81</span>
<span class="number">30000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">158.19</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3005.66</span>,<span class="number">19.20</span>,<span class="number">401.41</span>,<span class="number">1304.60</span>,<span class="number">1107.11</span>
<span class="number">1000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">302.16</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5741.04</span>,<span class="number">52.05</span>,<span class="number">408.05</span>,<span class="number">1041.78</span>,<span class="number">772.32</span>
<span class="number">5000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">251.01</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4769.20</span>,<span class="number">26.99</span>,<span class="number">489.92</span>,<span class="number">1724.37</span>,<span class="number">781.39</span>
<span class="number">10000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">207.77</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3947.55</span>,<span class="number">102.64</span>,<span class="number">604.39</span>,<span class="number">1577.85</span>,<span class="number">1285.85</span>
<span class="number">15000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">149.60</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2842.35</span>,<span class="number">146.68</span>,<span class="number">841.09</span>,<span class="number">3348.05</span>,<span class="number">2764.42</span>
<span class="number">20000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">145.41</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2762.83</span>,<span class="number">132.31</span>,<span class="number">865.04</span>,<span class="number">3247.91</span>,<span class="number">2620.98</span>
<span class="number">25000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">139.95</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2658.97</span>,<span class="number">252.97</span>,<span class="number">896.25</span>,<span class="number">2942.05</span>,<span class="number">2773.54</span>
<span class="number">30000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">115.80</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2200.18</span>,<span class="number">221.51</span>,<span class="number">1089.31</span>,<span class="number">4408.08</span>,<span class="number">4141.01</span>
</pre></td></tr></table></figure>

<h3 id="3-_Visulization">3. Visulization</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="function"><span class="title">library</span><span class="params">(<span class="string">"ggplot2"</span>)</span>
<span class="title">df</span> &lt;- <span class="title">read</span>.<span class="title">csv</span><span class="params">(<span class="string">"C:\\Users\\tanhao\\Documents\\GitHub\\DM\\mysql\\work\\stat.csv"</span>,head=<span class="variable">TRUE</span>)</span>
<span class="title">ggplot</span><span class="params">(df, <span class="function_name">aes</span>(x = <span class="function_name">factor</span>(sizes), y = trns.p.s, fill=<span class="function_name">factor</span>(threads)))</span> + <span class="title">geom_bar</span><span class="params">(stat = <span class="string">"identity"</span>, position=<span class="string">"dodge"</span>)</span></span>
</pre></td></tr></table></figure>

<p><img src="https://cloud.githubusercontent.com/assets/1680943/3700027/1d8dea4a-13db-11e4-9043-31028496d885.png" alt="image"></p>
<p>以上数据为一台1核1G主机的性能测试结果.</p>
<p>欢迎参见<a href="https://github.com/iofdata/DM/issues/5" target="_blank" rel="external">Details</a></p>
]]></content>
    
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/tags/MySQL/"/>
    
      <category term="sysbench" scheme="http://buttonwood.bitbucket.org/tags/sysbench/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/categories/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sysbench testing]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/24/20140724-sysbench-testing/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/24/20140724-sysbench-testing/</id>
    <published>2014-07-24T15:51:00.000Z</published>
    <updated>2014-07-25T15:09:35.000Z</updated>
    <content type="html"><![CDATA[<h3 id="sysbench_测试">sysbench 测试</h3>
<h4 id="1_cpu_性能测试">1 cpu 性能测试</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">sysbench</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">test=cpu</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">cpu</span><span class="literal">-</span><span class="comment">max</span><span class="literal">-</span><span class="comment">prime=20000</span> <span class="comment">run</span>
</pre></td></tr></table></figure><br>cpu测试主要是进行素数的加法运算，在上面的例子中，<br>指定了最大的素数为 20000，自己可以根据机器cpu的性能来适当调整数值。<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">1</span>

Doing CPU performance benchmark

Threads started!

Done.

Maximum prime <span class="built_in">number</span> checked <span class="operator">in</span> CPU test: <span class="number">20000</span>


Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">30.5083</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">10000</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">30.5043</span>
    per-request statistics:
         <span class="built_in">min</span>:                                  <span class="number">2.83</span>ms
         <span class="built_in">avg</span>:                                  <span class="number">3.05</span>ms
         <span class="built_in">max</span>:                                  <span class="number">6.46</span>ms
         approx.  <span class="number">95</span> percentile:               <span class="number">3.48</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">10000.0000</span>/<span class="number">0.00</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">30.5043</span>/<span class="number">0.00</span>
</pre></td></tr></table></figure>

<h4 id="2_线程测试">2 线程测试</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>threads <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">64</span> <span class="subst">--</span><span class="keyword">thread</span><span class="attribute">-yields</span><span class="subst">=</span><span class="number">100</span> <span class="subst">--</span><span class="keyword">thread</span><span class="attribute">-locks</span><span class="subst">=</span><span class="number">2</span> run
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">64</span>

Doing thread subsystem performance test
Thread yields per test: <span class="number">100</span> Locks used: <span class="number">2</span>
Threads started!
Done.


Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">0.6215</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">10000</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">39.3849</span>
    per-request statistics:
         <span class="built_in">min</span>:                                  <span class="number">0.04</span>ms
         <span class="built_in">avg</span>:                                  <span class="number">3.94</span>ms
         <span class="built_in">max</span>:                                 <span class="number">85.26</span>ms
         approx.  <span class="number">95</span> percentile:              <span class="number">30.41</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">156.2500</span>/<span class="number">10.52</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">0.6154</span>/<span class="number">0.00</span>
</pre></td></tr></table></figure>

<h4 id="3_磁盘IO性能测试，随机读写和删除">3 磁盘IO性能测试，随机读写和删除</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>fileio <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">16</span> <span class="subst">--</span>file<span class="attribute">-total</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">3</span>G <span class="subst">--</span>file<span class="attribute">-test</span><span class="attribute">-mode</span><span class="subst">=</span>rndrw prepare
sysbench <span class="subst">--</span>test<span class="subst">=</span>fileio <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">16</span> <span class="subst">--</span>file<span class="attribute">-total</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">3</span>G <span class="subst">--</span>file<span class="attribute">-test</span><span class="attribute">-mode</span><span class="subst">=</span>rndrw run
sysbench <span class="subst">--</span>test<span class="subst">=</span>fileio <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">16</span> <span class="subst">--</span>file<span class="attribute">-total</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">3</span>G <span class="subst">--</span>file<span class="attribute">-test</span><span class="attribute">-mode</span><span class="subst">=</span>rndrw cleanup
</pre></td></tr></table></figure><br>上述参数指定了最大创建16个线程，创建的文件总大小为3G，文件读写模式为随机读。<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">64</span>

Doing thread subsystem performance test
Thread yields per test: <span class="number">100</span> Locks used: <span class="number">2</span>
Threads started!
Done.


Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">0.6215</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">10000</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">39.3849</span>
    per-request statistics:
         <span class="built_in">min</span>:                                  <span class="number">0.04</span>ms
         <span class="built_in">avg</span>:                                  <span class="number">3.94</span>ms
         <span class="built_in">max</span>:                                 <span class="number">85.26</span>ms
         approx.  <span class="number">95</span> percentile:              <span class="number">30.41</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">156.2500</span>/<span class="number">10.52</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">0.6154</span>/<span class="number">0.00</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">16</span>

Extra <span class="built_in">file</span> <span class="built_in">open</span> flags: <span class="number">0</span>
<span class="number">128</span> <span class="built_in">files</span>, <span class="number">24</span>Mb <span class="keyword">each</span>
<span class="number">3</span>Gb total <span class="built_in">file</span> size
Block size <span class="number">16</span>Kb
Number <span class="operator">of</span> <span class="built_in">random</span> requests <span class="keyword">for</span> <span class="built_in">random</span> IO: <span class="number">10000</span>
Read/Write ratio <span class="keyword">for</span> combined <span class="built_in">random</span> IO test: <span class="number">1.50</span>
Periodic FSYNC enabled, calling fsync() <span class="keyword">each</span> <span class="number">100</span> requests.
Calling fsync() <span class="keyword">at</span> <span class="operator">the</span> <span class="function"><span class="keyword">end</span> <span class="title">of</span> <span class="title">test</span>, <span class="title">Enabled</span>.</span>
Using synchronous I/O mode
Doing <span class="built_in">random</span> r/w test
Threads started!
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">3</span> pos: <span class="number">0</span> errno = <span class="number">0</span> (Q?)
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">3</span> pos: <span class="number">6340608</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">13</span> pos: <span class="number">16531456</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">48</span> pos: <span class="number">5537792</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">96</span> pos: <span class="number">8503296</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">26</span> pos: <span class="number">9568256</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">26</span> pos: <span class="number">15794176</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">127</span> pos: <span class="number">18300928</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">9</span> pos: <span class="number">21331968</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">119</span> pos: <span class="number">8421376</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">62</span> pos: <span class="number">17448960</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">87</span> pos: <span class="number">20398080</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">113</span> pos: <span class="number">13156352</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">20</span> pos: <span class="number">10649600</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">17</span> pos: <span class="number">9060352</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">16</span> pos: <span class="number">311296</span> errno = <span class="number">0</span> ()
Done.

Operations performed:  <span class="number">0</span> Read, <span class="number">0</span> Write, <span class="number">0</span> Other = <span class="number">0</span> Total
Read <span class="number">0</span>b  Written <span class="number">0</span>b  Total transferred <span class="number">0</span>b  (<span class="number">0</span>b/<span class="built_in">sec</span>)
    <span class="number">0.00</span> Requests/<span class="built_in">sec</span> executed

Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">0.0029</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">0</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">0.0000</span>
    per-request statistics:
         <span class="built_in">min</span>:                            <span class="number">18446744073709.55</span>ms
         <span class="built_in">avg</span>:                                  <span class="number">0.00</span>ms
         <span class="built_in">max</span>:                                  <span class="number">0.00</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">0.0000</span>/<span class="number">0.00</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">0.0000</span>/<span class="number">0.00</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Removing test <span class="built_in">files</span>...
</pre></td></tr></table></figure>

<h4 id="4_内存测试">4 内存测试</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>sysbench --test=<span class="keyword">memory</span> --<span class="keyword">memory</span>-block-<span class="keyword">size</span>=<span class="number">8</span>k --<span class="keyword">memory</span>-total-<span class="keyword">size</span>=<span class="number">4</span>G run
</pre></td></tr></table></figure><br>上述参数指定了本次测试整个过程是在内存中传输 4G 的数据量，每个 block 大小为 8K。<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="preprocessor"># 无结果,待更新!</span>
</pre></td></tr></table></figure>

<h4 id="5_mysql_性能测试">5 mysql 性能测试</h4>
<h5 id="5-1_prepare_data">5.1 prepare data</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-table</span><span class="attribute">-engine</span><span class="subst">=</span>innodb <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">1000000</span> <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span>/home/<span class="built_in">data</span>/mysql/mysql<span class="built_in">.</span>sock <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span>root <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span>localhost <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="number">123456</span> <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test prepare
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded system evaluation benchmark

No DB drivers specified, using mysql
Creating table <span class="string">'test'</span><span class="keyword">...</span>
Creating <span class="number">1000000</span> records <span class="keyword">in</span> table <span class="string">'test'</span><span class="keyword">...</span>
</pre></td></tr></table></figure>

<h5 id="5-2_run_test">5.2 run test</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-table</span><span class="attribute">-engine</span><span class="subst">=</span>innodb <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">1000000</span> <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span>/home/<span class="built_in">data</span>/mysql/mysql<span class="built_in">.</span>sock <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span>root <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span>localhost <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="number">123456</span> <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test <span class="subst">\</span>
<span class="subst">--</span><span class="keyword">max</span><span class="attribute">-requests</span><span class="subst">=</span><span class="number">1000</span> <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">100</span> run
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

No DB drivers specified, <span class="keyword">using</span> mysql
WARNING: Preparing <span class="operator">of</span> <span class="string">"BEGIN"</span> is unsupported, <span class="keyword">using</span> emulation
(<span class="keyword">last</span> message repeated <span class="number">99</span> times)
Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">100</span>

Doing OLTP test.
Running mixed OLTP test
Using Special distribution (<span class="number">12</span> iterations,  <span class="number">1</span> pct <span class="operator">of</span> values are returned <span class="operator">in</span> <span class="number">75</span> pct cases)
Using <span class="string">"BEGIN"</span> <span class="keyword">for</span> starting transactions
Using auto_inc <span class="command"><span class="keyword">on</span> <span class="title">the</span> <span class="title">id</span> <span class="title">column</span></span>
Maximum <span class="built_in">number</span> <span class="operator">of</span> requests <span class="keyword">for</span> OLTP test is limited <span class="built_in">to</span> <span class="number">1000</span>
Threads started!
Done.

OLTP test statistics:
    queries performed:
        <span class="built_in">read</span>:                            <span class="number">14000</span>
        <span class="built_in">write</span>:                           <span class="number">5000</span>
        other:                           <span class="number">2000</span>
        total:                           <span class="number">21000</span>
    transactions:                        <span class="number">1000</span>   (<span class="number">276.21</span> per <span class="built_in">sec</span>.)
    deadlocks:                           <span class="number">0</span>      (<span class="number">0.00</span> per <span class="built_in">sec</span>.)
    <span class="built_in">read</span>/<span class="built_in">write</span> requests:                 <span class="number">19000</span>  (<span class="number">5247.91</span> per <span class="built_in">sec</span>.)
    other operations:                    <span class="number">2000</span>   (<span class="number">552.41</span> per <span class="built_in">sec</span>.)

Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">3.6205</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">1000</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">356.3231</span>
    per-request statistics:
         <span class="built_in">min</span>:                                 <span class="number">55.01</span>ms
         <span class="built_in">avg</span>:                                <span class="number">356.32</span>ms
         <span class="built_in">max</span>:                               <span class="number">1223.34</span>ms
         approx.  <span class="number">95</span> percentile:             <span class="number">764.73</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">10.0000</span>/<span class="number">0.76</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">3.5632</span>/<span class="number">0.03</span>
</pre></td></tr></table></figure>

<h5 id="5-3_clean_data">5.3 clean data</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span>localhost  <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span>root  <span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="number">123456</span> <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span>/home/<span class="built_in">data</span>/mysql/mysql<span class="built_in">.</span>sock <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test cleanup
</pre></td></tr></table></figure>

<p>以上测试内容参考 <a href="http://imysql.cn/node/312" target="_blank" rel="external">MySQL 中文网</a>.</p>
<p>本文数据为一台1核1G主机的性能测试结果.</p>
<p>欢迎参见<a href="https://github.com/iofdata/DM/issues/5" target="_blank" rel="external">Details</a></p>
]]></content>
    
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/tags/MySQL/"/>
    
      <category term="sysbench" scheme="http://buttonwood.bitbucket.org/tags/sysbench/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/categories/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sysbench libtool error and mysql testing]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/22/20140722-sysbench-install/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/22/20140722-sysbench-install/</id>
    <published>2014-07-22T13:51:00.000Z</published>
    <updated>2014-07-25T15:15:52.000Z</updated>
    <content type="html"><![CDATA[<h3 id="sysbench_安装">sysbench 安装</h3>
<p><a href="http://blog.163.com/digoal@126/blog/static/16387704020134142151769/" target="_blank" rel="external">http://blog.163.com/digoal@126/blog/static/16387704020134142151769/</a></p>
<h4 id="1_找不到mysql的include和lib文件目录">1 找不到<code>mysql</code>的<code>include</code>和<code>lib</code>文件目录</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre>wget -c http://dev<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/get/Downloads/MySQL-<span class="number">5.6</span>/MySQL-devel-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>/from/http://mysql<span class="preprocessor">.spd</span><span class="preprocessor">.co</span><span class="preprocessor">.il</span>/
rpm -ivh MySQL-devel-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>

wget -c http://dev<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/get/Downloads/MySQL-<span class="number">5.6</span>/MySQL-shared-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>/from/http://mysql<span class="preprocessor">.spd</span><span class="preprocessor">.co</span><span class="preprocessor">.il</span>/
rpm -ivh MySQL-shared-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>

rpm -qa|grep MySQL
rpm -ql MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64

chkconfig --list|grep -i mysql

./configure --with-mysql-includes=/usr/include/mysql --with-mysql-libs=/usr/lib64/mysql/
make
make check
make install
</pre></td></tr></table></figure><br>可惜,仍然不能很好的结果问题,继续艰难摸索中.<br><br>#### 2 最终解决方案<br><br>##### 5-0 版本但是不能测试 <code>oltp</code><br><br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="label">http:</span>//www<span class="preprocessor">.lefred</span><span class="preprocessor">.be</span>/node/<span class="number">154</span>
rpm -ivh sysbench-<span class="number">0.5</span>-<span class="number">2.</span>el6_<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ql sysbench
</pre></td></tr></table></figure>

<h5 id="转回_4-10_版本_解决方案">转回 4.10 版本 解决方案</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
</pre></td><td class="code"><pre>#git clone https://github.com/nettedfish/sysbench_from_percona.git
yum -y install libtool
yum -y install automake*
rm -rf libtool
ln -s /usr/bin/libtool ./

./autogen.sh
./configure
make & make install
ln -s  /usr/local/bin/sysbench /usr/bin/
sysbench --test=oltp help

sysbench 0.4.10:  multi-threaded system evaluation benchmark

oltp options:
  -<span class="ruby">-oltp-test-mode=<span class="constant">STRING</span>         test type to use {simple,complex,nontrx,sp} [complex]
</span>  -<span class="ruby">-oltp-sp-name=<span class="constant">STRING</span>           name of store procedure to call <span class="keyword">in</span> <span class="constant">SP</span> test mode []
</span>  -<span class="ruby">-oltp-read-only=[on|off]       generate only <span class="string">'read'</span> queries (<span class="keyword">do</span> <span class="keyword">not</span> modify database) [off]
</span>  -<span class="ruby">-oltp-skip-trx=[on|off]        skip <span class="constant">BEGIN</span>/<span class="constant">COMMIT</span> statements [off]
</span>  -<span class="ruby">-oltp-range-size=<span class="constant">N</span>             range size <span class="keyword">for</span> range queries [<span class="number">100</span>]
</span>  -<span class="ruby">-oltp-point-selects=<span class="constant">N</span>          number of point selects [<span class="number">10</span>]
</span>  -<span class="ruby">-oltp-simple-ranges=<span class="constant">N</span>          number of simple ranges [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-sum-ranges=<span class="constant">N</span>             number of sum ranges [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-order-ranges=<span class="constant">N</span>           number of ordered ranges [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-distinct-ranges=<span class="constant">N</span>        number of distinct ranges [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-index-updates=<span class="constant">N</span>          number of index update [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-non-index-updates=<span class="constant">N</span>      number of non-index updates [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-nontrx-mode=<span class="constant">STRING</span>       mode <span class="keyword">for</span> non-transactional test {select, update_key, update_nokey, insert, delete} [select]
</span>  -<span class="ruby">-oltp-auto-inc=[on|off]        whether <span class="constant">AUTO_INCREMENT</span> (<span class="keyword">or</span> equivalent) should be used on id column [on]
</span>  -<span class="ruby">-oltp-connect-delay=<span class="constant">N</span>          time <span class="keyword">in</span> microseconds to sleep after connection to database [<span class="number">10000</span>]
</span>  -<span class="ruby">-oltp-user-delay-min=<span class="constant">N</span>         minimum time <span class="keyword">in</span> microseconds to sleep after each request [<span class="number">0</span>]
</span>  -<span class="ruby">-oltp-user-delay-max=<span class="constant">N</span>         maximum time <span class="keyword">in</span> microseconds to sleep after each request [<span class="number">0</span>]
</span>  -<span class="ruby">-oltp-table-name=<span class="constant">STRING</span>        name of test table [sbtest]
</span>  -<span class="ruby">-oltp-table-size=<span class="constant">N</span>             number of records <span class="keyword">in</span> test table [<span class="number">10000</span>]
</span>  -<span class="ruby">-oltp-dist-type=<span class="constant">STRING</span>         random numbers distribution {uniform,gaussian,special} [special]
</span>  -<span class="ruby">-oltp-dist-iter=<span class="constant">N</span>              number of iterations used <span class="keyword">for</span> numbers generation [<span class="number">12</span>]
</span>  -<span class="ruby">-oltp-dist-pct=<span class="constant">N</span>               percentage of values to be treated as <span class="string">'special'</span> (<span class="keyword">for</span> special distribution) [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-dist-res=<span class="constant">N</span>               percentage of <span class="string">'special'</span> values to use (<span class="keyword">for</span> special distribution) [<span class="number">75</span>]
</span>
General database options:

  -<span class="ruby">-db-driver=<span class="constant">STRING</span>  specifies database driver to use (<span class="string">'help'</span> to get list of available drivers)
</span>  -<span class="ruby">-db-ps-mode=<span class="constant">STRING</span> prepared statements usage mode {auto, disable} [auto]
</span>

Compiled-in database drivers:
  mysql - MySQL driver

mysql options:
  -<span class="ruby">-mysql-host=[<span class="constant">LIST</span>,...]       <span class="constant">MySQL</span> server host [localhost]
</span>  -<span class="ruby">-mysql-port=<span class="constant">N</span>                <span class="constant">MySQL</span> server port [<span class="number">3306</span>]
</span>  -<span class="ruby">-mysql-socket=<span class="constant">STRING</span>         <span class="constant">MySQL</span> socket
</span>  -<span class="ruby">-mysql-user=<span class="constant">STRING</span>           <span class="constant">MySQL</span> user [sbtest]
</span>  -<span class="ruby">-mysql-password=<span class="constant">STRING</span>       <span class="constant">MySQL</span> password []
</span>  -<span class="ruby">-mysql-db=<span class="constant">STRING</span>             <span class="constant">MySQL</span> database name [sbtest]
</span>  -<span class="ruby">-mysql-table-engine=<span class="constant">STRING</span>   storage engine to use <span class="keyword">for</span> the test table {myisam,innodb,bdb,heap,ndbcluster,federated} [innodb]
</span>  -<span class="ruby">-mysql-engine-trx=<span class="constant">STRING</span>     whether storage engine used is transactional <span class="keyword">or</span> <span class="keyword">not</span> {yes,no,auto} [auto]
</span>  -<span class="ruby">-mysql-ssl=[on|off]          use <span class="constant">SSL</span> connections, <span class="keyword">if</span> available <span class="keyword">in</span> the client library [off]
</span>  -<span class="ruby">-myisam-max-rows=<span class="constant">N</span>           max-rows parameter <span class="keyword">for</span> <span class="constant">MyISAM</span> tables [<span class="number">1000000</span>]
</span>  -<span class="ruby">-mysql-create-options=<span class="constant">STRING</span> additional options passed to <span class="constant">CREATE</span> <span class="constant">TABLE</span> []</span>
</pre></td></tr></table></figure>

<p>后续将继续关注数据测试结果.</p>
<h4 id="3_关于libtool错误的其它参考">3 关于<code>libtool</code>错误的其它参考</h4>
<p><a href="http://wenku.baidu.com/link?url=DGlHEoWxiLWq4829Qp_7ngYB9r3glfkk_JOHEVNDedUWDSWJxYRPiv55KWkhSPnkeKPXjn2O2N6n-Xgqi_j4c2j2GIRfqU66l2NlWZ0mHSK" target="_blank" rel="external">http://wenku.baidu.com/link?url=DGlHEoWxiLWq4829Qp_7ngYB9r3glfkk_JOHEVNDedUWDSWJxYRPiv55KWkhSPnkeKPXjn2O2N6n-Xgqi_j4c2j2GIRfqU66l2NlWZ0mHSK</a></p>
<h4 id="4_sysbench-4-12和dbt2官方测试源址">4  <code>sysbench-4.12</code>和<code>dbt2</code>官方测试源址</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>wget http://downloads<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/source/sysbench-<span class="number">0.4</span><span class="number">.12</span><span class="number">.5</span><span class="preprocessor">.tar</span><span class="preprocessor">.gz</span>
gunzip sysbench-<span class="number">0.4</span><span class="number">.12</span><span class="number">.5</span><span class="preprocessor">.tar</span><span class="preprocessor">.gz</span>
tar -xvf sysbench-<span class="number">0.4</span><span class="number">.12</span><span class="number">.5</span><span class="preprocessor">.tar</span>
cd sysbench-<span class="number">0.4</span><span class="number">.12</span><span class="number">.5</span>

wget http://downloads<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/source/dbt2-<span class="number">0.37</span><span class="number">.50</span><span class="number">.3</span><span class="preprocessor">.tar</span><span class="preprocessor">.gz</span>
</pre></td></tr></table></figure>

<p>欢迎参见<a href="https://github.com/iofdata/DM/issues/5" target="_blank" rel="external">Details</a></p>
]]></content>
    
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/tags/MySQL/"/>
    
      <category term="sysbench" scheme="http://buttonwood.bitbucket.org/tags/sysbench/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/categories/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[A First Glance at MySQL]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/22/20140722-mysql-install/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/22/20140722-mysql-install/</id>
    <published>2014-07-22T03:51:00.000Z</published>
    <updated>2014-07-25T15:09:58.000Z</updated>
    <content type="html"><![CDATA[<h3 id="A_安装MySQL">A 安装MySQL</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="code"><pre><span class="preprocessor">##wget http://192.168.2.2:8080/download/MySQL-client-5.6.19-1.el6.x86_64.rpm</span>
<span class="preprocessor">##wget http://192.168.2.2:8080/download/MySQL-server-5.6.19-1.el6.x86_64.rpm</span>
wget -c http://dev<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/get/Downloads/MySQL-<span class="number">5.6</span>/MySQL-*-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>/from/http://mysql<span class="preprocessor">.spd</span><span class="preprocessor">.co</span><span class="preprocessor">.il</span>/

rpm -ivg MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
<span class="preprocessor">## 报错</span>
<span class="preprocessor">## file /usr/share/mysql/czech/errmsg.sys from install of MySQL-server-5.6.19-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.71-1.el6.x86_64</span>

yum remove mysql-libs-<span class="number">5.1</span>.*
rpm -ivh MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ivg MySQL-client-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ivh MySQL-devle-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>

<span class="preprocessor">## check and start MySQL</span>
chkconfig | grep mysql
service mysql start

<span class="preprocessor">## 数据目录</span>
lsof|grep mysql
ll -rt /var/lib/mysql/

<span class="preprocessor">## mysql 配置文件</span>
ll -rt /usr/share/mysql/

<span class="preprocessor">## 相关程序命令</span>
which mysql
/usr/bin/mysql

<span class="preprocessor">## 启动脚本</span>
ll -rt /etc/rc<span class="preprocessor">.d</span>/init<span class="preprocessor">.d</span>/
</pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="B_切换mysql目录到_/home/data">B 切换mysql目录到 /home/data</h3>
<p>参见 <a href="http://database.51cto.com/art/200709/56715.htm" target="_blank" rel="external">http://database.51cto.com/art/200709/56715.htm</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="code"><pre><span class="preprocessor">#### 1 关掉mysql服务并创建备份目录</span>
<span class="title">mysqladmin</span> -u root -p shutdown
<span class="title">mkdir</span> /home/<span class="typedef"><span class="keyword">data</span></span>
<span class="title">cd</span> /home/<span class="typedef"><span class="keyword">data</span></span>

<span class="title">lsof</span>|grep mysql
<span class="preprocessor"># mysql 数据目录</span>
<span class="title">ll</span> -rt /var/lib/mysql
<span class="title">mv</span> /var/lib/mysql ./

<span class="preprocessor">#### 2 编辑MySQL的配置文件/etc/my.cnf</span>
<span class="title">find</span> / -name *.cnf -print
    /home/<span class="typedef"><span class="keyword">data</span>/mysql/auto.cnf</span>
    /usr/share/doc/<span class="type">MySQL</span>-server-<span class="number">5.6</span><span class="number">.19</span>/my-<span class="default"><span class="keyword">default</span>.cnf</span>
    /usr/share/mysql/my-<span class="default"><span class="keyword">default</span>.cnf</span>
    /usr/my.cnf
    /etc/pki/tls/openssl.cnf
<span class="title">cp</span>  /usr/my.cnf /etc/my.cnf
<span class="title">vi</span>   /etc/my.cnf
    #port    =   <span class="number">3306</span>
    socket  =   /home/<span class="typedef"><span class="keyword">data</span>/mysql/mysql.sock</span>
    # 注释掉最后一行

<span class="preprocessor">#### 3 修改MySQL启动脚本/etc/init.d/mysql</span>
<span class="title">vi</span>　/etc/init.d/mysql
    #datadir=/var/lib/mysql(注释此行)
    datadir=/home/<span class="typedef"><span class="keyword">data</span>/mysql <span class="container">(加上此行)</span></span>

<span class="preprocessor">#### 4 reboot</span>
/etc/init.d/mysql restart

<span class="preprocessor">#### 5 socket error 解决</span>
<span class="title">ln</span> -s  /home/<span class="typedef"><span class="keyword">data</span>/mysql/mysql.sock /var/lib/mysql/</span>
</pre></td></tr></table></figure>

<h3 id="C_mysql_常见报错_root@localhost_不能启动的问题">C mysql 常见报错 <code>root@localhost</code> 不能启动的问题</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre>#### <span class="number">1</span> localhost 问题
mysql -u root -p
Enter password:
    ERROR <span class="number">1045</span> (<span class="number">28000</span>): Access denied <span class="keyword">for</span> user <span class="string">'root'</span>@<span class="string">'localhost'</span> (<span class="keyword">using</span> password: YES)

#### <span class="number">2</span> safe 模式重启
service mysql stop
chkconfig
mysqld_safe --<span class="keyword">skip</span>-grant-table

#####
# 参见 http:<span class="comment">//wenku.baidu.com/link?url=ARPOWYE5qWssO6toplKyOFWoaVP57UeA3Lj3IUU00wk3tcP3EGpfEp52uJE8M_Ckio7sieL-8x0gOQ4Epwn8d4eUw_xpMNlGZZeswiPsg93</span>
#####

/etc/init.d/mysql stop
mysqld_safe --user=mysql --<span class="keyword">skip</span>-grant-tables --<span class="keyword">skip</span>-networking &
mysql -u root mysql
#mysql&gt; UPDATE user <span class="keyword">SET</span> Password=<span class="string">'tanhao'</span>  <span class="keyword">where</span> USER=<span class="string">'root'</span>;
mysql&gt;  update mysql.user <span class="keyword">set</span> password=password(<span class="string">'tanhao'</span>) <span class="keyword">where</span> user=<span class="string">'root'</span>;
#mysql&gt; <span class="keyword">select</span> * <span class="keyword">FROM</span> user <span class="keyword">WHERE</span> USER=<span class="string">'root'</span>\G
mysql&gt;<span class="keyword">SELECT</span> host,user,password <span class="keyword">FROM</span> user;
mysql&gt; FLUSH PRIVILEGES;
mysql&gt; quit
/etc/init.d/mysql restart
mysql -uroot -p
# You must <span class="keyword">SET</span> PASSWORD before executing this statement解决
mysql&gt; <span class="keyword">SET</span> PASSWORD = PASSWORD(<span class="string">'123456'</span>); # <span class="keyword">new</span> root key will be <span class="number">123456</span>
</pre></td></tr></table></figure>

<h3 id="D_MySQL_testing">D MySQL testing</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> students;</span>
USE students;

<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> transcripts(
stu_id <span class="keyword">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,
stu_name    <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>,
stu_class     <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NULL</span>,
stu_grade    <span class="keyword">int</span>    <span class="keyword">NULL</span>,
<span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>(stu_id)
) ENGIN=InnoDB;</span>

<span class="operator"><span class="keyword">SHOW</span> <span class="keyword">TABLE</span> STATUS <span class="keyword">LIKE</span> <span class="string">'transcripts'</span>;</span>
<span class="operator"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> transcripts;</span>
<span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> transcripts <span class="keyword">ADD</span> stu_email <span class="keyword">CHAR</span>(<span class="number">50</span>);</span>

<span class="operator"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> transcripts(stu_id,stu_name,stu_class,stu_grade,stu_email)
<span class="keyword">VALUES</span>
(<span class="number">1</span>, <span class="string">'Jim'</span>,<span class="string">'A'</span>,<span class="number">90</span>,<span class="keyword">NULL</span>),
(<span class="number">2</span>, <span class="string">'Tom'</span>,<span class="string">'B'</span>,<span class="number">95</span>,<span class="keyword">NULL</span>),
(<span class="number">3</span>, <span class="string">'Jhon'</span>,<span class="string">'A'</span>,<span class="number">70</span>,<span class="keyword">NULL</span>),
(<span class="number">4</span>, <span class="string">'Adam'</span>,<span class="string">'B'</span>,<span class="number">65</span>,<span class="keyword">NULL</span>),
(<span class="number">5</span>, <span class="string">'Grace'</span>,<span class="string">'A'</span>,<span class="number">80</span>,<span class="keyword">NULL</span>),
(<span class="number">6</span>, <span class="string">'Ana'</span>,<span class="string">'B'</span>,<span class="number">95</span>,<span class="keyword">NULL</span>),
(<span class="number">7</span>, <span class="string">'Babe'</span>,<span class="string">'A'</span>,<span class="number">80</span>,<span class="keyword">NULL</span>),
(<span class="number">8</span>, <span class="string">'KK'</span>,<span class="string">'B'</span>,<span class="number">85</span>,<span class="keyword">NULL</span>),
(<span class="number">9</span>, <span class="string">'Han'</span>,<span class="string">'A'</span>,<span class="number">70</span>,<span class="keyword">NULL</span>),
(<span class="number">10</span>, <span class="string">'Sun'</span>,<span class="string">'B'</span>,<span class="number">75</span>,<span class="keyword">NULL</span>),
(<span class="number">11</span>, <span class="string">'GG'</span>,<span class="string">'A'</span>,<span class="number">80</span>,<span class="keyword">NULL</span>),
(<span class="number">12</span>, <span class="string">'Dog'</span>,<span class="string">'B'</span>,<span class="number">95</span>,<span class="keyword">NULL</span>),
(<span class="number">13</span>, <span class="string">'Cao'</span>,<span class="string">'A'</span>,<span class="number">60</span>,<span class="keyword">NULL</span>),
(<span class="number">14</span>, <span class="string">'Sky'</span>,<span class="string">'B'</span>,<span class="number">85</span>,<span class="keyword">NULL</span>),
(<span class="number">15</span>, <span class="string">'FF'</span>,<span class="string">'A'</span>,<span class="number">90</span>,<span class="keyword">NULL</span>),
(<span class="number">16</span>, <span class="string">'Dom'</span>,<span class="string">'B'</span>,<span class="number">85</span>,<span class="keyword">NULL</span>);</span>

<span class="operator"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> transcripts;</span>
</pre></td></tr></table></figure>

<p>欢迎参见<a href="https://github.com/iofdata/DM/issues/5" target="_blank" rel="external">Details</a></p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="A_安装MySQL">A 安装MySQL</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="code"><pre><span class="preprocessor">##wget http://192.168.2.2:8080/download/MySQL-client-5.6.19-1.el6.x86_64.rpm</span>
<span class="preprocessor">##wget http://192.168.2.2:8080/download/MySQL-server-5.6.19-1.el6.x86_64.rpm</span>
wget -c http://dev<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/get/Downloads/MySQL-<span class="number">5.6</span>/MySQL-*-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>/from/http://mysql<span class="preprocessor">.spd</span><span class="preprocessor">.co</span><span class="preprocessor">.il</span>/

rpm -ivg MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
<span class="preprocessor">## 报错</span>
<span class="preprocessor">## file /usr/share/mysql/czech/errmsg.sys from install of MySQL-server-5.6.19-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.71-1.el6.x86_64</span>

yum remove mysql-libs-<span class="number">5.1</span>.*
rpm -ivh MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ivg MySQL-client-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ivh MySQL-devle-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>

<span class="preprocessor">## check and start MySQL</span>
chkconfig | grep mysql
service mysql start

<span class="preprocessor">## 数据目录</span>
lsof|grep mysql
ll -rt /var/lib/mysql/

<span class="preprocessor">## mysql 配置文件</span>
ll -rt /usr/share/mysql/

<span class="preprocessor">## 相关程序命令</span>
which mysql
/usr/bin/mysql

<span class="preprocessor">## 启动脚本</span>
ll -rt /etc/rc<span class="preprocessor">.d</span>/init<span class="preprocessor">.d</span>/
</pre></td></tr></table></figure>

]]></summary>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/tags/MySQL/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/categories/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Data Sicence ToolBox]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/09/20140709-tools/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/09/20140709-tools/</id>
    <published>2014-07-09T03:51:00.000Z</published>
    <updated>2014-07-25T15:06:00.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1_Download_file">1 Download file</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="code"><pre><span class="keyword">if</span>(!<span class="built_in">file</span>.exists(<span class="string">"data"</span>)){
    dir.creat(<span class="string">"data"</span>)
}
fileurl &lt;- <span class="string">"http://"</span>
download.<span class="built_in">file</span>(fileurl, destfile=<span class="string">"./data/data.csv"</span>, method=<span class="string">"curl"</span>)
list.<span class="built_in">files</span>(<span class="string">"./data"</span>)
dateDownloaded &lt;- <span class="built_in">date</span>()

<span class="built_in">read</span>.table(<span class="string">"./data/data.csv"</span>)
<span class="built_in">read</span>.xlsx(<span class="string">"./data/data.xlsx"</span>, sheetIndex=<span class="number">1</span>, header=<span class="constant">TRUE</span>)

library(XML)
fileurl &lt;- <span class="string">"http://www.w3c.com/xml/simple.xml"</span>
doc &lt;- xmlTreeParse(fileurl, useInternal=<span class="constant">TRUE</span>)
rootNode &lt;- xmlRoot(doc)
xmlName(rootNode)
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode,<span class="comment">"//name",xmlvale)</span>


library(jsonlite)
jsonData &lt;- fromJSON(<span class="string">""</span>)
toJSON()

library(RMySQL)
biocLite(<span class="string">"rhdf5"</span>)
</pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="2_git">2 git</h3>
<p><img src="http://ww3.sinaimg.cn/large/6fbc15dcgw1ei6e0nq397j20b70adgm8.jpg" alt="git cmd 图解        
"></p>
<h4 id="Create_a_new_repository_on_the_command_line">Create a new repository on the command line</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>touch README<span class="preprocessor">.md</span>
git init
git <span class="keyword">add</span> README<span class="preprocessor">.md</span>
git commit -m <span class="string">"first commit"</span>
git remote <span class="keyword">add</span> origin https://github<span class="preprocessor">.com</span>/iofdata/DM<span class="preprocessor">.git</span>
git <span class="keyword">push</span> -u origin master
</pre></td></tr></table></figure>

<h4 id="Push_an_existing_repository_from_the_command_line">Push an existing repository from the command line</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>git remote <span class="keyword">add</span> origin https://github<span class="preprocessor">.com</span>/iofdata/DM<span class="preprocessor">.git</span>
git <span class="keyword">push</span> -u origin master
</pre></td></tr></table></figure>


<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="comment">#### add</span>
git <span class="built_in">add</span> . 
git <span class="built_in">add</span> -u 
git <span class="built_in">add</span> -A

git commit -m <span class="string">'message'</span>

git init
git remote origin <span class="keyword">http</span>://buttonwood.github.io

git push

git checkout -b branchname
git branch
git checkout master
</pre></td></tr></table></figure>

<h3 id="3_R_packages">3 R packages</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>install.packages(<span class="string">"slidify"</span>,<span class="string">"ggplot2"</span>,<span class="string">"devtools"</span>)

<span class="function"><span class="title">source</span><span class="params">(<span class="string">"http://bioconductor/org/bioLite.R"</span>)</span>
<span class="title">bioLite</span><span class="params">()</span>
<span class="title">bioLite</span><span class="params">(<span class="function_name">c</span>(<span class="string">"GenomicFeatures"</span>,<span class="string">"AnnotationDbi"</span>))</span></span>
</pre></td></tr></table></figure>

<h3 id="4_Types_of_Data_Science_Questions[^1]">4 Types of Data Science Questions[^1]</h3>
<ul>
<li>Descriptive</li>
<li>Exploratory</li>
<li>Inferential</li>
<li>Predictive</li>
<li>Causal/Correlation is not causation</li>
<li>Mechanistic</li>
</ul>
<p>[^1]:<a href="https://d396qusza40orc.cloudfront.net/datascitoolbox/lecture_slides/03_01_typesOfQuestions.pdf" target="_blank" rel="external">Types of Data Science Questions</a></p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="1_Download_file">1 Download file</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="code"><pre><span class="keyword">if</span>(!<span class="built_in">file</span>.exists(<span class="string">"data"</span>)){
    dir.creat(<span class="string">"data"</span>)
}
fileurl &lt;- <span class="string">"http://"</span>
download.<span class="built_in">file</span>(fileurl, destfile=<span class="string">"./data/data.csv"</span>, method=<span class="string">"curl"</span>)
list.<span class="built_in">files</span>(<span class="string">"./data"</span>)
dateDownloaded &lt;- <span class="built_in">date</span>()

<span class="built_in">read</span>.table(<span class="string">"./data/data.csv"</span>)
<span class="built_in">read</span>.xlsx(<span class="string">"./data/data.xlsx"</span>, sheetIndex=<span class="number">1</span>, header=<span class="constant">TRUE</span>)

library(XML)
fileurl &lt;- <span class="string">"http://www.w3c.com/xml/simple.xml"</span>
doc &lt;- xmlTreeParse(fileurl, useInternal=<span class="constant">TRUE</span>)
rootNode &lt;- xmlRoot(doc)
xmlName(rootNode)
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode,<span class="comment">"//name",xmlvale)</span>


library(jsonlite)
jsonData &lt;- fromJSON(<span class="string">""</span>)
toJSON()

library(RMySQL)
biocLite(<span class="string">"rhdf5"</span>)
</pre></td></tr></table></figure>

]]></summary>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="Git" scheme="http://buttonwood.bitbucket.org/tags/Git/"/>
    
      <category term="R" scheme="http://buttonwood.bitbucket.org/tags/R/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[R Programming Tips]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/07/20140707-r-prog/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/07/20140707-r-prog/</id>
    <published>2014-07-07T03:51:00.000Z</published>
    <updated>2014-07-25T15:07:44.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1_Data_Types_and_Basic_Operations">1 Data Types and Basic Operations</h3>
<p>R has five basic or “atomic” classes of objects:</p>
<ul>
<li>character</li>
<li>numeric (real numbers)</li>
<li>integer</li>
<li>complex</li>
<li>logical (True/False)</li>
</ul>
<h4 id="Vector_and_Matrix">Vector and Matrix</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="function">vector()</span>
x &lt;- <span class="function">vector(<span class="string">"numeric"</span>, length = <span class="number">10</span>)</span>

<span class="function">c()</span>
x &lt;- <span class="function">c(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>)</span>
x &lt;- <span class="function">c(TRUE, FALSE)</span>
as<span class="class">.numeric</span>(x)
as<span class="class">.logical</span>(x)
as<span class="class">.character</span>(x)

<span class="function">attributes()</span> 
<span class="function">print()</span>

m &lt;- <span class="function">matrix(nrow = <span class="number">2</span>, ncol = <span class="number">3</span>)</span>
m &lt;- <span class="function">matrix(<span class="number">1</span>:<span class="number">6</span>, nrow = <span class="number">2</span>, ncol = <span class="number">3</span>)</span>

m&lt;-1<span class="value">:<span class="number">10</span>
dim(m) &lt;- c(<span class="number">2</span>, <span class="number">5</span>)

cbind(x, y)
rbind(x, y)</span>
</pre></td></tr></table></figure>

<h4 id="list">list</h4>
<p>Lists are a special type of vector that can contain elements of different classes. </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>x &lt;- <span class="keyword">list</span>(<span class="number">1</span>, <span class="string">"a"</span>, <span class="keyword">TRUE</span>, <span class="number">1</span> + <span class="number">4</span>i)
</pre></td></tr></table></figure>

<h4 id="Factor">Factor</h4>
<p>Factors are used to represent categorical data. Factors can be unordered or ordered. One can think of a factor as an integer vector where each integer has a label.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="function">lm()</span>
<span class="function">glm()</span>

x &lt;- <span class="function">factor(<span class="function">c(<span class="string">"yes"</span>, <span class="string">"yes"</span>, <span class="string">"no"</span>, <span class="string">"yes"</span>, <span class="string">"no"</span>)</span>)</span>
<span class="function">table(x)</span>

x &lt;- <span class="function">factor(<span class="function">c(<span class="string">"yes"</span>, <span class="string">"yes"</span>, <span class="string">"no"</span>, <span class="string">"yes"</span>, <span class="string">"no"</span>)</span>, levels = <span class="function">c(<span class="string">"yes"</span>, <span class="string">"no"</span>)</span>)</span>
</pre></td></tr></table></figure>

<h4 id="Missing_Values">Missing Values</h4>
<p>Missing values are denoted by <code>NA</code> or <code>NaN</code> for undefined mathematical operations.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre>x &lt;- <span class="function">c(<span class="number">1</span>,<span class="number">2</span>,NaN,NA,<span class="number">4</span>)</span>
is<span class="class">.na</span>(x)
is<span class="class">.nan</span>(x)

x&lt;<span class="function">-c(<span class="number">1</span>,<span class="number">2</span>,NA,<span class="number">4</span>,NA,<span class="number">5</span>)</span>
bad &lt;- is<span class="class">.na</span>(x)
x<span class="attr_selector">[!bad]</span>

#### What if there are multiple things and you want to take the subset with no missing values?
x&lt;<span class="function">-c(<span class="number">1</span>,<span class="number">2</span>,NA,<span class="number">4</span>,NA,<span class="number">5</span>)</span>
y &lt;- <span class="function">c(<span class="string">"a"</span>, <span class="string">"b"</span>, NA, <span class="string">"d"</span>, NA, <span class="string">"f"</span>)</span>
good &lt;- complete<span class="class">.cases</span>(x, y)
x<span class="attr_selector">[good]</span>
y<span class="attr_selector">[good]</span>

df<span class="attr_selector">[1:6,]</span>
good &lt;- complete<span class="class">.cases</span>(df)
df<span class="attr_selector">[good,]</span><span class="attr_selector">[1:6,]</span>

x &lt;- df<span class="attr_selector">[df$Month==5,]</span>
<span class="function">summary(x$Ozone)</span>
</pre></td></tr></table></figure>

<h4 id="Data_frames_are_used_to_store_tabular_data">Data frames are used to store tabular data</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="title">row</span>.names
<span class="title">read</span>.table()
<span class="title">read</span>.csv()
<span class="typedef"><span class="keyword">data</span>.matrix<span class="container">()</span></span>

<span class="title">x</span> &lt;- <span class="typedef"><span class="keyword">data</span>.frame<span class="container">(<span class="title">foo</span> = 1:4, <span class="title">bar</span> = <span class="title">c</span>(<span class="type">T</span>, <span class="type">T</span>, <span class="type">F</span>, <span class="type">F</span>)</span>)</span>
</pre></td></tr></table></figure>

<h4 id="Names">Names</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre>x&lt;-<span class="number">1</span>:<span class="number">3</span>
<span class="function"><span class="title">names</span><span class="params">(x)</span>
<span class="title">names</span><span class="params">(x)</span> &lt;- <span class="title">c</span><span class="params">(<span class="string">"foo"</span>, <span class="string">"bar"</span>, <span class="string">"norf"</span>)</span>
<span class="title">x</span>

<span class="title">x</span>&lt;-<span class="title">list</span><span class="params">(a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>)</span>

<span class="title">m</span> &lt;- <span class="title">matrix</span><span class="params">(<span class="number">1</span>:<span class="number">4</span>, nrow = <span class="number">2</span>, ncol = <span class="number">2</span>)</span>
<span class="title">dimnames</span><span class="params">(m)</span> &lt;- <span class="title">list</span><span class="params">(<span class="function_name">c</span>(<span class="string">"a"</span>, <span class="string">"b"</span>), <span class="function_name">c</span>(<span class="string">"c"</span>, <span class="string">"d"</span>))</span></span>
</pre></td></tr></table></figure>


<h3 id="2_Deal_with_data">2 Deal with data</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="code"><pre>read.table()    #<span class="keyword">for</span> reading tabular data
read.csv()
write.table()

readLines()     #<span class="keyword">for</span> reading lines of a <span class="keyword">text</span> <span class="keyword">file</span>
writeLines()

<span class="keyword">source</span>()        #<span class="keyword">for</span> reading <span class="keyword">in</span> R code files
dump()

dump(c(<span class="string">"x"</span>, <span class="string">"y"</span>), <span class="keyword">file</span> = <span class="string">"data.R"</span>)
rm(x, y)
<span class="keyword">source</span>(<span class="string">"data.R"</span>)

dget()          #<span class="keyword">for</span> reading <span class="keyword">in</span> R code files 
dput()

load()          #<span class="keyword">for</span> reading <span class="keyword">in</span> saved workspaces
save()

unserialize()   #<span class="keyword">for</span> reading single R objects <span class="keyword">in</span> binary form
serialize()
</pre></td></tr></table></figure>

<h4 id="Data_are_read_in_using_connection_interfaces-">Data are read in using connection interfaces.</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre>file     <span class="comment">#opens a connection to a file</span>
gzfile   <span class="comment">#opens a connection to a file compressed with gzip</span>
bzfile   <span class="comment">#opens a connection to a file compressed with bzip2</span>
url      <span class="comment">#opens a connection to a webpage</span>

str(file)
con &lt;- file(<span class="string">"foo.txt"</span>, <span class="string">"r"</span>)
data &lt;- read.csv(con)
close(con)

con &lt;- gzfile(<span class="string">"words.gz"</span>)
x &lt;- readLines(con, <span class="number">10</span>)

con &lt;- url(<span class="string">"http://www.jhsph.edu"</span>, <span class="string">"r"</span>)
x &lt;- readLines(con)

args(paste)
<span class="keyword">function</span> (<span class="keyword">...</span>, sep = <span class="string">" "</span>, collapse = <span class="literal">NULL</span>)
</pre></td></tr></table></figure>

<p>I have a data frame with 1,500,000 rows and 120 columns, all of which are numeric data. Roughly, how much memory is required to store this data frame?</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="number">1</span>,<span class="number">500</span>,<span class="number">000</span> × <span class="number">120</span> × <span class="number">8</span> <span class="keyword">bytes</span>/<span class="keyword">numeric</span> = <span class="number">1.34</span> GB
</pre></td></tr></table></figure>

<h3 id="3_Control_structures">3 Control structures</h3>
<ul>
<li><code>if</code>, <code>else</code>: testing a condition</li>
<li><code>for</code>: execute a loop a fixed number of times</li>
<li><code>while</code>: execute a loop while a condition is true · repeat: execute an infinite loop</li>
<li><code>break</code>: break the execution of a loop</li>
<li><code>next</code>: skip an interation of a loop</li>
<li><code>return</code>: exit a function</li>
</ul>
<h3 id="4_Looping_on_the_Command_Line">4 Looping on the Command Line</h3>
<ul>
<li><code>lapply</code>: Loop over a list and evaluate a function on each element · </li>
<li><code>sapply</code>: Same as lapply but try to simplify the result</li>
<li><code>apply</code>:  Apply a function over the margins of an array</li>
<li><code>tapply</code>: Apply a function over subsets of a vector</li>
<li><code>mapply</code>: Multivariate version of lapply</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre>x &lt;- list(a = <span class="number">1</span>:<span class="number">5</span>, b = rnorm(<span class="number">10</span>))
lapply(x, mean)  #

x&lt;-<span class="number">1</span>:<span class="number">4</span>
lapply(x, runif, min = <span class="number">0</span>, max = <span class="number">10</span>)

##### lapply <span class="keyword">and</span> friends make heavy <span class="keyword">use</span> <span class="keyword">of</span> anonymous functions.
x &lt;- list(a = matrix(<span class="number">1</span>:<span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>), b = matrix(<span class="number">1</span>:<span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>))
lapply(x, <span class="keyword">function</span>(elt) elt[,<span class="number">1</span>])

##### sapply will try <span class="keyword">to</span> simplify the result <span class="keyword">of</span> lapply <span class="keyword">if</span> possible.
##### <span class="keyword">If</span> the result <span class="keyword">is</span> a list where every element <span class="keyword">is</span> length <span class="number">1</span>, <span class="keyword">then</span> a vector <span class="keyword">is</span> returned
##### <span class="keyword">If</span> the result <span class="keyword">is</span> a list where every element <span class="keyword">is</span> a vector <span class="keyword">of</span> the same length (&gt; <span class="number">1</span>), a matrix <span class="keyword">is</span> returned.
##### <span class="keyword">If</span> it can’t figure things <span class="keyword">out</span>, a list <span class="keyword">is</span> returned.
x &lt;- list(a = <span class="number">1</span>:<span class="number">4</span>, b = rnorm(<span class="number">10</span>), c = rnorm(<span class="number">20</span>, <span class="number">1</span>), d = rnorm(<span class="number">100</span>, <span class="number">5</span>))
lapply(x, mean)
sapply(x, mean)
</pre></td></tr></table></figure>

<h4 id="applay">applay</h4>
<p><code>apply</code> is used to a evaluate a function (often an anonymous one) over the margins of an array.</p>
<ul>
<li>It is most often used to apply a function to the rows or columns of a matrix.</li>
<li>It can be used with general arrays, e.g. taking the average of an array of matrices</li>
<li>It is not really faster than writing a loop, but it works in one line!</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre><span class="function"><span class="title">str</span><span class="params">(apply)</span>
<span class="title">x</span> &lt;- <span class="title">matrix</span><span class="params">(<span class="function_name">rnorm</span>(<span class="number">200</span>), <span class="number">20</span>, <span class="number">10</span>)</span>
<span class="title">apply</span><span class="params">(x, <span class="number">2</span>, mean)</span>
<span class="title">apply</span><span class="params">(x, <span class="number">1</span>, sum)</span>

<span class="title">rowSums</span> = <span class="title">apply</span><span class="params">(x, <span class="number">1</span>, sum)</span>
<span class="title">rowMeans</span> = <span class="title">apply</span><span class="params">(x, <span class="number">1</span>, mean)</span>
<span class="title">colSums</span> = <span class="title">apply</span><span class="params">(x, <span class="number">2</span>, sum)</span>
<span class="title">colMeans</span> = <span class="title">apply</span><span class="params">(x, <span class="number">2</span>, mean)</span>

<span class="title">x</span> &lt;- <span class="title">matrix</span><span class="params">(<span class="function_name">rnorm</span>(<span class="number">200</span>), <span class="number">20</span>, <span class="number">10</span>)</span>
<span class="title">apply</span><span class="params">(x, <span class="number">1</span>, quantile, probs = <span class="function_name">c</span>(<span class="number">0.25</span>, <span class="number">0.75</span>))</span>

<span class="title">a</span> &lt;- <span class="title">array</span><span class="params">(<span class="function_name">rnorm</span>(<span class="number">2</span> * <span class="number">2</span> * <span class="number">10</span>), <span class="function_name">c</span>(<span class="number">2</span>, <span class="number">2</span>, <span class="number">10</span>))</span>
<span class="title">apply</span><span class="params">(a, <span class="function_name">c</span>(<span class="number">1</span>, <span class="number">2</span>), mean)</span>
<span class="title">rowMeans</span><span class="params">(a, dims = <span class="number">2</span>)</span></span>
</pre></td></tr></table></figure>

<h4 id="tapply">tapply</h4>
<p><code>tpply</code> is used to apply a function over subsets of a vector. </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="function">str(tapply)</span>

x &lt;- <span class="function">c(<span class="function">rnorm(<span class="number">10</span>)</span>, <span class="function">runif(<span class="number">10</span>)</span>, <span class="function">rnorm(<span class="number">10</span>, <span class="number">1</span>)</span>)</span>
f&lt;<span class="function">-gl(<span class="number">3</span>,<span class="number">10</span>)</span>
<span class="function">tapply(x, f, mean)</span>


<span class="function">with(mtcars, <span class="function">tapply(hp, cyl, mean)</span>)</span>
<span class="function">sapply(<span class="function">split(mtcars$hp, mtcars$cyl)</span>, mean)</span>
</pre></td></tr></table></figure>

<h4 id="split">split</h4>
<p><code>split</code> takes a vector or other objects and splits it into groups determined by a factor or list of factors.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="function">str(split)</span>
x &lt;- <span class="function">c(<span class="function">rnorm(<span class="number">10</span>)</span>, <span class="function">runif(<span class="number">10</span>)</span>, <span class="function">rnorm(<span class="number">10</span>, <span class="number">1</span>)</span>)</span>
f&lt;<span class="function">-gl(<span class="number">3</span>,<span class="number">10</span>)</span>
<span class="function">split(x, f)</span>
<span class="function">lapply(<span class="function">split(x, f)</span>, mean)</span>

##### splitting <span class="tag">a</span> Data <span class="tag">Frame</span>
<span class="function">library(datasets)</span>
<span class="function">head(airquality)</span>
s &lt;- <span class="function">split(airquality, airquality$Month)</span>
<span class="function">lapply(s, <span class="function">function(x)</span> <span class="function">colMeans(x[, <span class="function">c(<span class="string">"Ozone"</span>, <span class="string">"Solar.R"</span>, <span class="string">"Wind"</span>)</span>])</span>)</span>
<span class="function">sapply(s, <span class="function">function(x)</span> <span class="function">colMeans(x[, <span class="function">c(<span class="string">"Ozone"</span>, <span class="string">"Solar.R"</span>, <span class="string">"Wind"</span>)</span>])</span>)</span>
<span class="function">sapply(s, <span class="function">function(x)</span> <span class="function">colMeans(x[, <span class="function">c(<span class="string">"Ozone"</span>, <span class="string">"Solar.R"</span>, <span class="string">"Wind"</span>)</span>], na.rm = TRUE)</span>)</span>

##### split more than one level
x &lt;- <span class="function">rnorm(<span class="number">10</span>)</span>
f1&lt;<span class="function">-gl(<span class="number">2</span>,<span class="number">5</span>)</span>
f2&lt;<span class="function">-gl(<span class="number">5</span>,<span class="number">2</span>)</span>
<span class="function">interaction(f1, f2)</span>
<span class="function">str(<span class="function">split(x, <span class="function">list(f1, f2)</span>)</span>)</span>
<span class="function">str(<span class="function">split(x, <span class="function">list(f1, f2)</span>, drop = TRUE)</span>)</span>
</pre></td></tr></table></figure>

<h4 id="maaply">maaply</h4>
<p><code>mapply</code> is a multivariate apply of sorts which applies a function in parallel over a set of arguments.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="function">str(mapply)</span>

<span class="function">list(<span class="function">rep(<span class="number">1</span>, <span class="number">4</span>)</span>, <span class="function">rep(<span class="number">2</span>, <span class="number">3</span>)</span>, <span class="function">rep(<span class="number">3</span>, <span class="number">2</span>)</span>, <span class="function">rep(<span class="number">4</span>, <span class="number">1</span>)</span>)</span>
<span class="function">mapply(rep, <span class="number">1</span>:<span class="number">4</span>, <span class="number">4</span>:<span class="number">1</span>)</span>
</pre></td></tr></table></figure>

<h4 id="reshape">reshape</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="function">library(<span class="string">"reshape2"</span>)</span>

##### metlting data frames
<span class="function">melt(mtcars, id=<span class="function">c(<span class="string">"carname"</span>,<span class="string">"gear"</span>,<span class="string">"cyl"</span>)</span>, measure.vars=<span class="function">c(<span class="string">"mpg"</span>,<span class="string">"hp"</span>)</span>)</span>

##### casting data frames
<span class="function">dcast(carMelt, cyl ~ variable, mean)</span>
</pre></td></tr></table></figure>

<h4 id="plyr">plyr</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="function"><span class="title">ddply</span><span class="params">()</span></span>
</pre></td></tr></table></figure>


<h4 id="str">str</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre>str(str)
str(lm)
str(ls)

args(paste)
<span class="function"><span class="keyword">function</span> <span class="params">(..., sep = <span class="string">" "</span>, collapse = NULL)</span>

<span class="title">x</span> &lt;- <span class="title">rnrom</span><span class="params">(<span class="number">100</span>,<span class="number">2</span>,<span class="number">4</span>)</span>
<span class="title">summary</span><span class="params">(x)</span>
<span class="title">str</span><span class="params">(x)</span>

<span class="title">f</span> &lt;- <span class="title">gl</span><span class="params">(<span class="number">40</span>,<span class="number">10</span>)</span>
<span class="title">str</span><span class="params">(f)</span>
<span class="title">summary</span><span class="params">(f)</span>

### <span class="title">split</span><span class="params">()</span>
### <span class="title">split</span> <span class="title">takes</span> <span class="title">a</span> <span class="title">vector</span> <span class="title">or</span> <span class="title">other</span> <span class="title">objects</span> <span class="title">and</span> <span class="title">splits</span> <span class="title">it</span> <span class="title">into</span> <span class="title">groups</span> <span class="title">determined</span> <span class="title">by</span> <span class="title">a</span> <span class="title">factor</span> <span class="title">or</span> <span class="title">list</span> <span class="title">of</span> <span class="title">factors</span>.
<span class="title">str</span><span class="params">(split)</span>
<span class="title">x</span> &lt;- <span class="title">c</span><span class="params">(rnorm<span class="params">(<span class="number">10</span>)</span>, runif<span class="params">(<span class="number">10</span>)</span>, rnorm<span class="params">(<span class="number">10</span>, <span class="number">1</span>)</span>)</span>
<span class="title">f</span>&lt;-<span class="title">gl</span><span class="params">(<span class="number">3</span>,<span class="number">10</span>)</span>
<span class="title">split</span><span class="params">(x, f)</span>

### <span class="title">A</span> <span class="title">common</span> <span class="title">idiom</span> <span class="title">is</span> <span class="title">split</span> <span class="title">followed</span> <span class="title">by</span> <span class="title">an</span> <span class="title">lapply</span>
<span class="title">lapply</span><span class="params">(split<span class="params">(x, f)</span>, mean)</span></span>
</pre></td></tr></table></figure>

<h3 id="5_Generating_random_Numbers">5 Generating random Numbers</h3>
<ul>
<li><code>d</code> for density                 -&gt;pdf</li>
<li><code>r</code> for random number generation</li>
<li><code>p</code> for cumulative distribution -&gt; cdf</li>
<li><code>q</code> for quantile function       </li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre>dnorm(x, mean = <span class="number">0</span>, sd = <span class="number">1</span>, <span class="built_in">log</span> = <span class="constant">FALSE</span>)
<span class="comment">##### pnorm(q) = fi(q); qnorm(p) = fi(q)反函数</span>
pnorm(q, mean = <span class="number">0</span>, sd = <span class="number">1</span>, <span class="built_in">lower</span>.tail = <span class="constant">TRUE</span>, <span class="built_in">log</span>.p = <span class="constant">FALSE</span>)
qnorm(p, mean = <span class="number">0</span>, sd = <span class="number">1</span>, <span class="built_in">lower</span>.tail = <span class="constant">TRUE</span>, <span class="built_in">log</span>.p = <span class="constant">FALSE</span>)
rnorm(n, mean = <span class="number">0</span>, sd = <span class="number">1</span>)

x &lt;- rnorm(<span class="number">10</span>,<span class="number">20</span>,<span class="number">10</span>)
summary(x)

<span class="comment">### Setting the random number seed with set.seed ensures reproducibility</span>
<span class="comment">### Always set the random number seed when conducting a simulation!</span>
<span class="built_in">set</span>.seed(<span class="number">1</span>)
</pre></td></tr></table></figure>
]]></content>
    
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="R" scheme="http://buttonwood.bitbucket.org/tags/R/"/>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/tags/Tips/"/>
    
      <category term="R" scheme="http://buttonwood.bitbucket.org/categories/R/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python in a Nutshell (IO Tips)]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-io/"/>
    <id>http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-io/</id>
    <published>2014-06-23T03:51:00.000Z</published>
    <updated>2014-06-29T01:22:49.000Z</updated>
    <content type="html"><![CDATA[<h3 id="File_and_Text_Operations">File and Text Operations</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="xml"><span class="tag"><span class="attribute">open</span>(<span class="attribute">filename</span>, <span class="attribute">mode</span>=<span class="value">'r'</span><span class="value">,</span> <span class="attribute">bufsize</span>=<span class="value">-1)</span></span></span>
</pre></td></tr></table></figure>  

<h4 id="File_mode">File mode</h4>
<table>
<thead>
<tr>
<th>Mode</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>‘r’</td>
<td>The file must already exist, and it is opened in read-only mode.</td>
</tr>
<tr>
<td>‘w’</td>
<td>The file is opened in write-only mode. Overwritten or created.</td>
</tr>
<tr>
<td>‘a’</td>
<td>The file is opened in write-only mode. Appended or created.</td>
</tr>
<tr>
<td>‘r+’</td>
<td>The file must already exist and is opened for both reading and writing.</td>
</tr>
<tr>
<td>‘w+’</td>
<td>The file is opened for both reading and writing. Overwritten or created.</td>
</tr>
<tr>
<td>‘a+’</td>
<td>The file is opened for both reading and writing.Appended or created.</td>
</tr>
<tr>
<td>b</td>
<td>Binary.</td>
</tr>
<tr>
<td>t</td>
<td>Text.</td>
</tr>
</tbody>
</table>
<a id="more"></a>

<h4 id="Attributes_and_Methods_of_File_Objects">Attributes and Methods of File Objects</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre>f.<span class="built_in">close</span>()
f.newlines()
f.<span class="built_in">read</span>(size=-<span class="number">1</span>)
f.readline(size=-<span class="number">1</span>)
f.readlines(size=-<span class="number">1</span>)
f.<span class="built_in">seek</span>(pos, how=<span class="number">0</span>)
f.tell( )
f.<span class="built_in">write</span>(s)
f.writelines(lst)
<span class="keyword">for</span> <span class="built_in">line</span> <span class="operator">in</span> lst: f.<span class="built_in">write</span>(<span class="built_in">line</span>)
<span class="keyword">for</span> <span class="built_in">line</span> <span class="operator">in</span> f:
</pre></td></tr></table></figure>

<h4 id="The_tempfile_Module">The tempfile Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre><span class="xml"><span class="tag"># <span class="attribute">mkstemp</span>(<span class="attribute">suffix</span>=<span class="value">None,</span> <span class="attribute">prefix</span>=<span class="value">None,</span> <span class="attribute">dir</span>=<span class="value">None,</span> <span class="attribute">text</span>=<span class="value">False)</span>
<span class="attribute">import</span> <span class="attribute">tempfile</span>, <span class="attribute">os</span>
<span class="attribute">fd</span>, <span class="attribute">path</span> = <span class="attribute">tempfile.mkstemp</span>(<span class="attribute">suffix</span>=<span class="value">'.txt'</span><span class="value">,</span> <span class="attribute">text</span>=<span class="value">True)</span>
<span class="attribute">try:</span>
    <span class="attribute">os.close</span>(<span class="attribute">fd</span>)
    <span class="attribute">use_filepath</span>(<span class="attribute">path</span>)
<span class="attribute">finally:</span>
    <span class="attribute">os.unlink</span>(<span class="attribute">path</span>)

# <span class="attribute">mkdtemp</span>(<span class="attribute">suffix</span>=<span class="value">None,</span> <span class="attribute">prefix</span>=<span class="value">None,</span> <span class="attribute">dir</span>=<span class="value">None)</span>
<span class="attribute">import</span> <span class="attribute">tempfile</span>, <span class="attribute">shutil</span> 
<span class="attribute">path</span> = <span class="attribute">tempfile.mkdtemp</span>()
<span class="attribute">try:</span>
    <span class="attribute">use_dirpath</span>(<span class="attribute">path</span>)
<span class="attribute">finally:</span>
    <span class="attribute">shutil.rmtree</span>(<span class="attribute">path</span>)

# <span class="attribute">TemporaryFile</span>(<span class="attribute">mode</span>=<span class="value">'w+b'</span><span class="value">,</span> <span class="attribute">bufsize</span>=<span class="value">-1,suffix=None,</span> <span class="attribute">prefix</span>=<span class="value">None,</span> <span class="attribute">dir</span>=<span class="value">None)</span>
# <span class="attribute">NamedTemporaryFile</span>(<span class="attribute">mode</span>=<span class="value">'w+b'</span><span class="value">,</span> <span class="attribute">bufsize</span>=<span class="value">-1,suffix=None,</span> <span class="attribute">prefix</span>=<span class="value">None,</span> <span class="attribute">dir</span>=<span class="value">None)</span></span></span>
</pre></td></tr></table></figure>


<h3 id="Compressed_Files">Compressed Files</h3>
<h4 id="The_gzip_Module">The gzip Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre>class GzipFile(filename=None, mode=None, compresslevel=<span class="number">9</span>, fileobj=None)
<span class="built_in">open</span>(filename, mode=<span class="string">'rb'</span>, compresslevel=<span class="number">9</span>)
<span class="comment"># example</span>
import gzip
underlying_file = <span class="built_in">open</span>(<span class="string">'x.txt.gz'</span>, <span class="string">'wb'</span>)
compressing_wrapper = gzip.GzipFile(fileobj=underlying_file, mode=<span class="string">'wt'</span>) 
<span class="comment"># f(compressing_wrapper)</span>
<span class="keyword">for</span> <span class="built_in">line</span> <span class="operator">in</span> uncompressing_wrapper:
    print <span class="built_in">line</span>,
compressing_wrapper.<span class="built_in">close</span>( )
underlying_file.<span class="built_in">close</span>( )
</pre></td></tr></table></figure>

<h4 id="The_bz2_Module">The bz2 Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="xml"><span class="tag"><span class="attribute">class</span> <span class="attribute">BZ2File</span>(<span class="attribute">filename</span>=<span class="value">None,</span> <span class="attribute">mode</span>=<span class="value">'r'</span><span class="value">,</span> <span class="attribute">buffering</span>=<span class="value">0,</span> <span class="attribute">compresslevel</span>=<span class="value">9)</span>
<span class="attribute">compress</span>(<span class="attribute">s</span>, <span class="attribute">level</span>=<span class="value">9)</span>
<span class="attribute">decompress</span>(<span class="attribute">s</span>)</span></span>
</pre></td></tr></table></figure>

<h4 id="The_tarfile_Module">The tarfile Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre><span class="title">is_tarfile</span>(filename)
<span class="class"><span class="keyword">class</span> <span class="type">TarInfo</span><span class="container">(<span class="title">name</span>='')</span>
t.isdir<span class="container">( )</span>
t.isfile<span class="container">( )</span>
t.issym<span class="container">( )</span>
open<span class="container">(<span class="title">filename</span>, <span class="title">mode</span>='<span class="title">r'</span>, <span class="title">fileobj</span>=<span class="type">None</span>, <span class="title">bufsize</span>=10240)</span>
f.add<span class="container">(<span class="title">filepath</span>, <span class="title">arcname</span>=<span class="type">None</span>, <span class="title">recursive</span>=<span class="type">True</span>)</span>
f.addfile<span class="container">(<span class="title">tarinfo</span>, <span class="title">fileobj</span>=<span class="type">None</span>)</span>
f.close<span class="container">( )</span>
f.extract<span class="container">(<span class="title">member</span>, <span class="title">path</span>='.')</span>
f.extractfile<span class="container">(<span class="title">member</span>)</span>
f.getmember<span class="container">(<span class="title">name</span>)</span>
f.getmembers<span class="container">( )</span>
f.getnames<span class="container">( )</span>
f.gettarinfo<span class="container">(<span class="title">name</span>=<span class="type">None</span>, <span class="title">arcname</span>=<span class="type">None</span>, <span class="title">fileobj</span>=<span class="type">None</span>)</span>
f.list<span class="container">(<span class="title">verbose</span>=<span class="type">True</span>)</span></span>
</pre></td></tr></table></figure>

<h4 id="The_zipfile_Module">The zipfile Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="title">is_zipfile</span>(filename)
<span class="class"><span class="keyword">class</span> <span class="type">ZipInfo</span><span class="container">(<span class="title">filename</span>='<span class="type">NoName</span>', <span class="title">date_time</span>=(1980, 1, 1, 0, 0, 0)</span>)
<span class="keyword">class</span> <span class="type">ZipFile</span><span class="container">(<span class="title">filename</span>, <span class="title">mode</span>='<span class="title">r'</span>, <span class="title">compression</span>=<span class="title">zipfile</span>.<span class="type">ZIP_STORED</span>)</span>
z.close<span class="container">( )</span>
z.getinfo<span class="container">(<span class="title">name</span>)</span>
z.infolist<span class="container">( )</span>
z.namelist<span class="container">( )</span>
z.printdir<span class="container">( )</span>
z.read<span class="container">(<span class="title">name</span>)</span>
z.testzip<span class="container">( )</span>
z.write<span class="container">(<span class="title">filename</span>, <span class="title">arcname</span>=<span class="type">None</span>, <span class="title">compress_type</span>=<span class="type">None</span>)</span>
z.writestr<span class="container">(<span class="title">zinfo</span>, <span class="title">bytes</span>)</span></span>
</pre></td></tr></table></figure>

<h4 id="The_zlib_Module">The zlib Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="function"><span class="title">compress</span><span class="params">(s, level=<span class="number">6</span>)</span>
<span class="title">decompress</span><span class="params">(s)</span></span>
</pre></td></tr></table></figure>

<h4 id="The_os_Module">The os Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="function">access(path, mode)</span>
<span class="function">chdir(path)</span>
<span class="function">chmod(path, mode)</span>
<span class="function">getcwd( )</span>
<span class="function">listdir(path)</span>
<span class="function">makedirs(path, mode=<span class="number">0777</span>)</span> # Good 
<span class="function">mkdir(path, mode=<span class="number">0777</span>)</span>
<span class="function">remove(path)</span>
<span class="function">unlink(path)</span>
<span class="function">removedirs(path)</span>
<span class="function">rename(source, dest)</span>
<span class="function">renames(source, dest)</span>
<span class="function">rmdir(path)</span>
<span class="function">walk(top, topdown=True, onerror=None)</span>
</pre></td></tr></table></figure>

<h4 id="The_os-path_Module">The os.path Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="code"><pre>abspath(path)
<span class="built_in">os</span>.path.normpath(<span class="built_in">os</span>.path.join(<span class="built_in">os</span>.getcwd(), path))
basename(path)
<span class="built_in">os</span>.path.split(path)[<span class="number">1</span>]
&gt;&gt;&gt; <span class="built_in">os</span>.path.split(<span class="string">'b/c/d.e'</span>)
(<span class="string">'b/c'</span>, <span class="string">'d.e'</span>)
&gt;&gt;&gt; <span class="built_in">os</span>.path.basename(<span class="string">'b/c/d.e'</span>)
<span class="string">'d.e'</span>
dirname(path)
exists(path)
getatime(path)
getmtime(path)
getsize(path)
isabs(path)
isfile(path)
isdir(path)
islink(path)
join(path, *paths)
&gt;&gt;&gt; <span class="built_in">print</span> <span class="built_in">os</span>.path.join(<span class="string">'a/b'</span>, <span class="string">'c/d'</span>, <span class="string">'e/f'</span>)
a/b/c/d/e/f
&gt;&gt;&gt; <span class="built_in">print</span> <span class="built_in">os</span>.path.join(<span class="string">'a/b'</span>, <span class="string">'/c/d'</span>, <span class="string">'e/f'</span>)
/c/d/e/f
</pre></td></tr></table></figure> 

<h4 id="The_shutil_Module">The shutil Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="function"><span class="title">copy</span><span class="params">(src, dst)</span>
<span class="title">copy2</span><span class="params">(src, dst)</span>
<span class="title">copyfile</span><span class="params">(src, dst)</span>
<span class="title">copyfileobj</span><span class="params">(fsrc, fdst, bufsize=<span class="number">16384</span>)</span>
<span class="title">copytree</span><span class="params">(src, dst, symlinks=<span class="variable">False</span>)</span>
<span class="title">move</span><span class="params">(src, dst)</span>
<span class="title">rmtree</span><span class="params">(path, ignore_errors=<span class="variable">False</span>, onerror=<span class="variable">None</span>)</span></span>
</pre></td></tr></table></figure>

<h4 id="The_locale_Module">The locale Module</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>atof(s)
atoi(s)
<span class="built_in">format</span>(fmt, <span class="built_in">num</span>, grouping=False)
str(<span class="built_in">num</span>)
locale.<span class="built_in">format</span>(<span class="string">'%f'</span>, <span class="built_in">num</span>).
</pre></td></tr></table></figure>
]]></content>
    <summary type="html"><![CDATA[<h3 id="File_and_Text_Operations">File and Text Operations</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="xml"><span class="tag"><span class="attribute">open</span>(<span class="attribute">filename</span>, <span class="attribute">mode</span>=<span class="value">'r'</span><span class="value">,</span> <span class="attribute">bufsize</span>=<span class="value">-1)</span></span></span>
</pre></td></tr></table></figure>  

<h4 id="File_mode">File mode</h4>
<table>
<thead>
<tr>
<th>Mode</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>‘r’</td>
<td>The file must already exist, and it is opened in read-only mode.</td>
</tr>
<tr>
<td>‘w’</td>
<td>The file is opened in write-only mode. Overwritten or created.</td>
</tr>
<tr>
<td>‘a’</td>
<td>The file is opened in write-only mode. Appended or created.</td>
</tr>
<tr>
<td>‘r+’</td>
<td>The file must already exist and is opened for both reading and writing.</td>
</tr>
<tr>
<td>‘w+’</td>
<td>The file is opened for both reading and writing. Overwritten or created.</td>
</tr>
<tr>
<td>‘a+’</td>
<td>The file is opened for both reading and writing.Appended or created.</td>
</tr>
<tr>
<td>b</td>
<td>Binary.</td>
</tr>
<tr>
<td>t</td>
<td>Text.</td>
</tr>
</tbody>
</table>
]]></summary>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/tags/Tips/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/tags/Python/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python in a Nutshell (Testing Tips)]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-test-debug/"/>
    <id>http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-test-debug/</id>
    <published>2014-06-23T03:51:00.000Z</published>
    <updated>2014-07-02T09:52:42.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Testing">Testing</h3>
<h4 id="Unit_Testing_and_System_Testing">Unit Testing and System Testing</h4>
<p><em>Unit testing</em> means writing and running tests to exercise a single module or an even smaller unit, such as a class or function.</p>
<p><em>System testing</em> (also known as functional or integration testing) involves running an entire program with known inputs.</p>
<p>Some classic books on testing also draw the distinction between <em>white-box testing</em>, done with knowledge of a program’s internals, and <em>black-box testing</em>, done without such knowledge.  </p>
<h4 id="The_doctest_Module">The <code>doctest</code> Module</h4>
<p><code>is_palindrome.py</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">is_palindrome</span><span class="params">(s)</span>:</span>
	<span class="string">''' (str) -&gt; bool
	Return Ture if and only if is a palindrome
	&gt;&gt;&gt; is_palindrome('noon')
	True
	&gt;&gt;&gt; is_palindrome('people')
	False
	&gt;&gt;&gt; is_palindrome('catac')
	True
	'''</span>
	
	i = <span class="number">0</span>
	j = len(s) - <span class="number">1</span>
	<span class="keyword">while</span> (i&lt;j) <span class="keyword">and</span> (s[i] == s[j]):
		i = i + <span class="number">1</span>
		j = j - <span class="number">1</span>
	<span class="keyword">return</span> j &lt;= i

<span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>: 
    <span class="keyword">import</span> doctest
    doctest.testmod( )
</pre></td></tr></table></figure>


<a id="more"></a>

<p>In each docstring, testmod finds all examples (by looking for occurrences of the interpreter prompt <code>&#39;&gt;&gt;&gt; &#39;</code>, possibly preceded by whitespace) and runs each example. </p>
<h4 id="The_unittest_Module">The <code>unittest</code> Module</h4>
<p>The TestCase class</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre>t<span class="preprocessor">.assert</span>_(condition,msg=None)
t<span class="preprocessor">.assertAlmostEqual</span>(first,second,places=<span class="number">7</span>,msg=None)
t<span class="preprocessor">.assertEqual</span>(first,second,msg=None)
t<span class="preprocessor">.assertNotAlmostEqual</span>(first,second,places=<span class="number">7</span>,msg=None)
t<span class="preprocessor">.assertNotEqual</span>(first,second,msg=None)
t<span class="preprocessor">.assertRaises</span>(exceptionSpec,callable,*args,**kwargs)
t<span class="preprocessor">.fail</span>(msg=None)
t<span class="preprocessor">.failIf</span>(condition, msg=None)
t<span class="preprocessor">.setUp</span>( )
t<span class="preprocessor">.tearDown</span>( )
</pre></td></tr></table></figure>

<p>完整例子</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre><span class="keyword">import</span> unittest
<span class="keyword">import</span> is_palindrome

<span class="class"><span class="keyword">class</span> <span class="title">TestIsPalindrome</span><span class="params">(unittest.TestCase)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">test1</span><span class="params">(self)</span>:</span>
        actual     = is_palindrome.is_palindrome(<span class="string">'noon'</span>)
        expected   = Ture
        self.assertEqual(actual,expected)
    
    <span class="function"><span class="keyword">def</span> <span class="title">test2</span><span class="params">(self)</span>:</span>
        actual     = is_palindrome.is_palindrome(<span class="string">'people'</span>)
        expected   = <span class="keyword">False</span>
        self.assertEqual(actual,expected)
    
    <span class="function"><span class="keyword">def</span> <span class="title">test3</span><span class="params">(self)</span>:</span>
        actual     = is_palindrome.is_palindrome(<span class="string">'actca'</span>)
        expected   = Ture
        self.assertEqual(actual,expected)
    
    <span class="function"><span class="keyword">def</span> <span class="title">test4</span><span class="params">(self)</span>:</span>
        self.assertEqual(is_palindrome.is_palindrome(<span class="string">'actca'</span>),<span class="keyword">True</span>)
     
<span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>: 
     unittest.main(exit=<span class="keyword">False</span>)
</pre></td></tr></table></figure>

<h3 id="Choosing_Testing_Cases">Choosing Testing Cases</h3>
<ul>
<li>Size: For collections, 0 , 1 and several items</li>
<li>Dichotomies: Vowels/Non-vowels, even/odd, positive/negative, empty/full</li>
<li>Boundaries: test all that threshold</li>
<li>Order: different orders</li>
</ul>
<h3 id="Debugging">Debugging</h3>
<h4 id="The_inspect_Module">The <code>inspect</code> Module</h4>
<h4 id="The_traceback_Module">The <code>traceback</code> Module</h4>
<h4 id="The_pdb_Module">The <code>pdb</code> Module</h4>
<h3 id="Optimization">Optimization</h3>
<h4 id="Benchmarking">Benchmarking</h4>
<p>Let <code>L</code> be any list,<code>T</code> any string (plain or Unicode); <code>D</code> any dict; <code>S</code> any set, with (say) numbers as items (with <code>O(1)</code> hashing and comparison) and x any number:</p>
<p><code>O(1)</code>:    <code>len(L)</code>, <code>len(T)</code>, <code>len(D)</code>, <code>len(S)</code>, <code>L[i]</code>, <code>T[i]</code>, <code>D[i]</code>, <code>del D[i]</code>, <code>if x in D</code>, <code>if x in S</code>, <code>S.add(x)</code>, <code>S.remove(x)</code>, additions or removals to/from the right end of <code>L</code></p>
<p><code>O(N)</code>:    Loops on <code>L</code>, <code>T</code>, <code>D</code>, <code>S</code>, general additions or removals to/from <code>L</code> (not at the right end), all methods on <code>T</code>, <code>if x in L</code>, <code>if x in T</code>, most methods on <code>L</code>, all shallow copies</p>
<p><code>O(N log N)</code>:    <code>L.sort</code> in general (but <code>O(N)</code> if <code>L</code> is already nearly sorted or reverse-sorted</p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="Testing">Testing</h3>
<h4 id="Unit_Testing_and_System_Testing">Unit Testing and System Testing</h4>
<p><em>Unit testing</em> means writing and running tests to exercise a single module or an even smaller unit, such as a class or function.</p>
<p><em>System testing</em> (also known as functional or integration testing) involves running an entire program with known inputs.</p>
<p>Some classic books on testing also draw the distinction between <em>white-box testing</em>, done with knowledge of a program’s internals, and <em>black-box testing</em>, done without such knowledge.  </p>
<h4 id="The_doctest_Module">The <code>doctest</code> Module</h4>
<p><code>is_palindrome.py</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">is_palindrome</span><span class="params">(s)</span>:</span>
	<span class="string">''' (str) -&gt; bool
	Return Ture if and only if is a palindrome
	&gt;&gt;&gt; is_palindrome('noon')
	True
	&gt;&gt;&gt; is_palindrome('people')
	False
	&gt;&gt;&gt; is_palindrome('catac')
	True
	'''</span>
	
	i = <span class="number">0</span>
	j = len(s) - <span class="number">1</span>
	<span class="keyword">while</span> (i&lt;j) <span class="keyword">and</span> (s[i] == s[j]):
		i = i + <span class="number">1</span>
		j = j - <span class="number">1</span>
	<span class="keyword">return</span> j &lt;= i

<span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>: 
    <span class="keyword">import</span> doctest
    doctest.testmod( )
</pre></td></tr></table></figure>


]]></summary>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/tags/Tips/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/tags/Python/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python in a Nutshell (Useful Tips)]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-tips/"/>
    <id>http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-tips/</id>
    <published>2014-06-23T03:51:00.000Z</published>
    <updated>2014-06-29T01:23:44.000Z</updated>
    <content type="html"><![CDATA[<h3 id="List">List</h3>
<h3 id="lambda_Expressions">lambda Expressions</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="prompt">&gt;&gt;&gt; </span>aList = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]
<span class="prompt">&gt;&gt;&gt; </span>low = <span class="number">3</span>
<span class="prompt">&gt;&gt;&gt; </span>high = <span class="number">7</span>
<span class="prompt">&gt;&gt;&gt; </span>filter(<span class="keyword">lambda</span> x, l=low, h=high: h&gt;x&gt;l, aList)
[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]
<span class="comment"># or</span>
<span class="prompt">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">within_bounds</span><span class="params">(value, l=low, h=high)</span>:</span><span class="keyword">return</span> h&gt;value&gt;l
<span class="prompt">&gt;&gt;&gt; </span>filter(within_bounds, aList)
</pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="Generators">Generators</h3>
<p>通过迭代器触发,函数体并不执行; <code>yield expression</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">frange</span><span class="params">(start, stop, step=<span class="number">1.0</span>)</span>:</span>        
    <span class="keyword">while</span> start &lt; stop:        
        <span class="keyword">yield</span> start        
        start += step
</pre></td></tr></table></figure>

<h3 id="class">class</h3>
<p>For any class object <code>C</code>, any object <code>x</code>, and any identifier <code>S</code> (except <code>__name__</code>, <code>__bases__</code>, and <code>__dict__</code>), <code>C.S=x</code> is equivalent to <code>C._ _dict_ _[&#39;S&#39;]=x</code>. </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">C1</span><span class="params">(object)</span>:</span>
    x = <span class="number">23</span>  
<span class="keyword">print</span> C1.__name__, C1.__bases__
C1.y = <span class="number">45</span>
C1.__dict__[<span class="string">'z'</span>] = <span class="number">67</span>
<span class="keyword">print</span> C1.x, C1.y, C1.z
</pre></td></tr></table></figure>

<p>There is no difference between class attributes created in the class body, outside the body by assigning an attribute, or outside the body by explicitly binding an entry in <code>C.__dict__</code>. </p>
<p><code>__name__</code><br><code>__bases__</code><br><code>__dict__</code><br><code>__init__</code><br><code>__setattr__</code><br><code>__set__</code><br><code>__get__</code><br><code>__new__</code></p>
<p>When you call <code>C(*args,**kwds)</code> to create a new instance of class <code>C</code>, Python first calls <code>C.__new__(C,*args,**kwds)</code>. Python uses <code>__new__</code>’s return value <code>x</code> as the newly created instance. Then, Python calls <code>C._ _init_ _(x,*args,**kwds)</code>, but only when <code>x</code> is indeed an instance of <code>C</code> or any of its subclasses (otherwise, <code>x</code>’s state remains as <code>__new__</code> had left it).</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="title">x</span> = <span class="type">C</span>.__new__(<span class="type">C</span>, <span class="number">23</span>)
<span class="title">if</span> isinstance(x, <span class="type">C</span>): <span class="typedef"><span class="keyword">type</span><span class="container">(<span class="title">x</span>)</span>.__init__<span class="container">(<span class="title">x</span>, 23)</span></span>
</pre></td></tr></table></figure>     

<h3 id="Decorators">Decorators</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(cls, ...)</span>:</span>
    ...definition of f snipped...
f = classmethod(f)
<span class="comment">#等价于</span>
<span class="decorator">@classmethod</span>
<span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(cls, ...)</span>:</span>
...definition of f snipped...
</pre></td></tr></table></figure>

<h3 id="modules">modules</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="keyword">import</span> optparse
<span class="keyword">import</span> itertools
<span class="keyword">import</span> re
</pre></td></tr></table></figure>

<h3 id="Strings">Strings</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="code"><pre>s.capitalize( )
s.center(n, fillchar=<span class="string">' '</span>)
&gt;&gt;&gt; <span class="string">'x'</span>.center(<span class="number">9</span>,<span class="string">'*'</span>)
<span class="string">'****x****'</span>
s.count(sub,start=<span class="number">0</span>,<span class="function"><span class="keyword">end</span>=<span class="title">sys</span>.<span class="title">maxint</span>)</span>
s.decode(codec=None,errors=<span class="string">'strict'</span>)
s.encode(codec=None,errors=<span class="string">'strict'</span>)
s.endswith(suffix,start=<span class="number">0</span>,<span class="function"><span class="keyword">end</span>=<span class="title">sys</span>.<span class="title">maxint</span>)</span>
s.expandtabs(tabsize=<span class="number">8</span>)
s.find(sub,start=<span class="number">0</span>,<span class="function"><span class="keyword">end</span>=<span class="title">sys</span>.<span class="title">maxint</span>)</span>
s.index(sub,start=<span class="number">0</span>,<span class="function"><span class="keyword">end</span>=<span class="title">sys</span>.<span class="title">maxint</span>)</span>
s.isalnum( )
s.isalpha( )
s.isdigit( )
s.islower( )
s.isspace( )
s.istitle( )
s.isupper( )
s.join(seq)
&gt;&gt;&gt; <span class="string">"*"</span>.join(str(x) <span class="keyword">for</span> x <span class="operator">in</span> range(<span class="number">7</span>))
<span class="string">'0*1*2*3*4*5*6'</span>
s.lstrip(x=<span class="keyword">string</span>.whitespace)
s.rstrip(x=<span class="keyword">string</span>.whitespace)
s.<span class="built_in">replace</span>(old,<span class="built_in">new</span>,maxsplit=sys.maxint)
s.ljust(n,fillchar=<span class="string">' '</span>)
s.rjust(n,fillchar=<span class="string">' '</span>)
s.<span class="built_in">split</span>(sep=None,maxsplit=sys.maxint)
s.splitlines(keepends=False)
s.startswith(prefix,start=<span class="number">0</span>,<span class="function"><span class="keyword">end</span>=<span class="title">sys</span>.<span class="title">maxint</span>)</span>
s.strip(x=<span class="keyword">string</span>.whitespace)
</pre></td></tr></table></figure>

<h3 id="Regular_Expressions_for_String">Regular Expressions for String</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="code"><pre><span class="comment"># r.findall(s)</span>
<span class="keyword">import</span> re
reword = re.compile(<span class="string">r'\w+'</span>) <span class="comment"># reword = re.compile('(\w+)\s')</span>
<span class="keyword">for</span> aword <span class="keyword">in</span> reword.findall(open(<span class="string">'afile.txt'</span>).read()): <span class="keyword">print</span> aword

<span class="comment"># r.finditer(s)</span>

<span class="comment"># r.match(s,start=0,end=sys.maxint)</span>
<span class="keyword">import</span> re
digs = re.compile(<span class="string">r'\d+'</span>)
<span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">'afile.txt'</span>):
    <span class="comment"># to print all lines in a file that start with digits</span>
    <span class="keyword">if</span> digs.match(line): <span class="keyword">print</span> line,

<span class="comment"># r.search(s,start=0,end=sys.maxint)</span>
<span class="keyword">import</span> re
digs = re.compile(<span class="string">r'\d+'</span>)
<span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">'afile.txt'</span>): 
    <span class="comment"># to print all lines containing digits</span>
    <span class="keyword">if</span> digs.search(line): <span class="keyword">print</span> line,
    
<span class="comment"># r.split(s,maxsplit=0)</span>
<span class="keyword">import</span> re
rehello = re.compile(<span class="string">r'hello'</span>, re.IGNORECASE)
astring = <span class="string">''</span>.join(rehello.split(astring))

<span class="comment"># r.sub(repl,s,count=0)</span>
<span class="keyword">import</span> re
rehello = re.compile(<span class="string">r'hello'</span>, re.IGNORECASE)
astring = rehello.sub(<span class="string">''</span>, astring, <span class="number">1</span>)

<span class="comment"># r.subn(repl,s,count=0)</span>
<span class="keyword">import</span> re
rehello = re.compile(<span class="string">r'hello'</span>, re.IGNORECASE)
junk, count = rehello.subn(<span class="string">''</span>, astring)
<span class="keyword">print</span> <span class="string">'Found'</span>, count, <span class="string">'occurrences of "hello"'</span>
</pre></td></tr></table></figure>
]]></content>
    <summary type="html"><![CDATA[<h3 id="List">List</h3>
<h3 id="lambda_Expressions">lambda Expressions</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="prompt">&gt;&gt;&gt; </span>aList = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]
<span class="prompt">&gt;&gt;&gt; </span>low = <span class="number">3</span>
<span class="prompt">&gt;&gt;&gt; </span>high = <span class="number">7</span>
<span class="prompt">&gt;&gt;&gt; </span>filter(<span class="keyword">lambda</span> x, l=low, h=high: h&gt;x&gt;l, aList)
[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]
<span class="comment"># or</span>
<span class="prompt">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">within_bounds</span><span class="params">(value, l=low, h=high)</span>:</span><span class="keyword">return</span> h&gt;value&gt;l
<span class="prompt">&gt;&gt;&gt; </span>filter(within_bounds, aList)
</pre></td></tr></table></figure>

]]></summary>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/tags/Tips/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/tags/Python/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python in a Nutshell (Thread Tips)]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-thread-process/"/>
    <id>http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-thread-process/</id>
    <published>2014-06-23T03:51:00.000Z</published>
    <updated>2014-06-30T14:34:53.000Z</updated>
    <content type="html"><![CDATA[<p>A <em><code>thread</code></em> is a flow of control that shares global state with other threads; all threads appear to execute simultaneously.</p>
<p>A <em><code>process</code></em> is an instance of a running program.</p>
<h3 id="创建线程的两种方法">创建线程的两种方法</h3>
<ul>
<li>继承<code>Thread</code>类, 重写<code>run()</code>方法, 而不是<code>start()</code></li>
<li>创建<code>threading.Thread</code>对象,初始化函数<code>__init__()</code>中可将调用对象作为参数传入</li>
</ul>
<h3 id="The_thread_Module">The <code>thread</code> Module</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>L.acquire(wait=<span class="keyword">True</span>) # When wait <span class="keyword">is</span> <span class="keyword">True</span>, acquire locks L.
L.<span class="keyword">locked</span>( )          # Returns <span class="keyword">True</span> <span class="keyword">if</span> L <span class="keyword">is</span> <span class="keyword">locked</span>; otherwise, <span class="keyword">False</span>.
L.release( )         # Unlocks L, which must be <span class="keyword">locked</span>.
</pre></td></tr></table></figure>

<h3 id="The_Queue_Module">The <code>Queue</code> Module</h3>
<p>The Queue module supplies first-in, first-out (<strong><em>FIFO</em></strong>) queues that support multithread access, with one main class and two exception classes.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="type">Queue</span><span class="container">(<span class="title">maxsize</span>=0)</span>
q.empty<span class="container">()</span>
q.get<span class="container">(<span class="type">False</span>)</span>
q.full<span class="container">()</span>
q.put<span class="container">(<span class="title">x</span>,<span class="type">False</span>)</span>
q.get<span class="container">(<span class="title">block</span>=<span class="type">True</span>,<span class="title">timeout</span>=<span class="type">None</span>)</span>
q.put<span class="container">(<span class="title">item</span>,<span class="title">block</span>=<span class="type">True</span>,<span class="title">timeout</span>=<span class="type">None</span>)</span>
q.qsize<span class="container">( )</span></span>
</pre></td></tr></table></figure>

<a id="more"></a>

<p>“It’s easier to ask forgiveness than permission” (<strong>*EAFP</strong>) idiom  vs<br>“look before you leap” (<strong><em>LBYL</em></strong>) idiom </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="keyword">try</span>: 
    x=q.get_nowait()
except Queue.<span class="keyword">Empty</span>: 
    <span class="keyword">print</span> <span class="string">"no work to perform"</span>
</pre></td></tr></table></figure>

<h4 id="Customizing_Class_Queue_by_Subclassing">Customizing Class Queue by Subclassing</h4>
<p>You may customize <code>Queue.Queue</code> by subclassing, and you need to override some or all of the <strong><em>hook methods</em></strong> that Queue.Queue provides for the purpose: <code>_qsize</code>,<code>_empty</code>, <code>_full</code>, <code>_put</code>, and <code>_get</code>.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="keyword">import</span> Queue
<span class="class"><span class="keyword">class</span> <span class="title">LIFOQueue</span><span class="params">(Queue.Queue)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">_get</span><span class="params">(self)</span>:</span> <span class="keyword">return</span> self.queue.pop()
</pre></td></tr></table></figure>

<h3 id="The_threading_Module_推荐">The threading Module 推荐</h3>
<p><code>threading</code> provides numerous classes for dealing with threads, including Thread, Condition, Event, RLock, and Semaphore.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="title">currentThread</span>( )
<span class="class"><span class="keyword">class</span> <span class="type">Thread</span><span class="container">(<span class="title">name</span>=<span class="type">None</span>,<span class="title">target</span>=<span class="type">None</span>,<span class="title">args</span>=()</span>,kwargs={ })
t.getName<span class="container">()</span> 
t.setName<span class="container">(<span class="title">name</span>)</span>
t.isAlive<span class="container">( )</span>
t.isDaemon<span class="container">()</span> 
t.setDaemon<span class="container">(<span class="title">daemonic</span>)</span>
t.join<span class="container">(<span class="title">timeout</span>=<span class="type">None</span>)</span>
t.run<span class="container">( )</span>
t.start<span class="container">( )</span></span>
</pre></td></tr></table></figure>

<p>Ex1</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="code"><pre><span class="keyword">import</span> threading, time, sys
<span class="class"><span class="keyword">class</span> <span class="title">test</span><span class="params">(threading.Thread)</span>:</span>
	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, delay)</span>:</span>
		threading.Thread.__init__(self)
		self.name = name
		self.delay = delay

	<span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span>
		<span class="keyword">print</span> <span class="string">"%s delay for %s"</span> % (self.name, self.delay)
		time.sleep(self.delay)
		c = <span class="number">0</span>
		<span class="keyword">while</span> Ture:
			<span class="keyword">print</span> <span class="string">"This is thread %s on line %s"</span> % (self.name, c)
			c += <span class="number">1</span>
			<span class="keyword">if</span> c == <span class="number">3</span>
				<span class="keyword">print</span> <span class="string">"End of thread %s"</span> % self.name
				<span class="keyword">break</span>

<span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span>
	t1 = test(<span class="string">'Thread 1'</span>, <span class="number">1</span>)
	t2 = test(<span class="string">'Thread 2'</span>, <span class="number">2</span>)
	
	t1.start()
	<span class="keyword">print</span> <span class="string">"Wait t1 to end"</span>
	t1.join()
	<span class="keyword">print</span> <span class="string">"End of t1"</span>

	t2.start()
	<span class="keyword">print</span> <span class="string">"Wait t2 to end"</span>
	t2.join()
	<span class="keyword">print</span> <span class="string">"End of t2"</span>
	<span class="keyword">print</span> <span class="string">"End of main"</span>
</pre></td></tr></table></figure>

<h3 id="Thread_Synchronization_Objects">Thread Synchronization Objects</h3>
<h4 id="Timeout_parameters">Timeout parameters</h4>
<h4 id="Lock_and_RLock_objects">Lock and RLock objects</h4>
<h4 id="Condition_objects">Condition objects</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="type">Condition</span><span class="container">(<span class="title">lock</span>=<span class="type">None</span>)</span>
c.acquire<span class="container">(<span class="title">wait</span>=1)</span> 
c.release<span class="container">( )</span>
c.notify<span class="container">( )</span> 
c.notifyAll<span class="container">( )</span>
c.wait<span class="container">(<span class="title">timeout</span>=<span class="type">None</span>)</span></span>
</pre></td></tr></table></figure>

<p>In typical use, a Condition object <code>c</code> regulates access to some global state <code>s</code> that is shared between threads. When a thread needs to wait for <code>s</code> to change, the thread loops as follows:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>c.acquire( )
<span class="keyword">while</span> <span class="keyword">not</span> is_ok_state(s):
    c.<span class="keyword">wait</span>( ) 
do_some_work_using_state(s) 
c.<span class="keyword">release</span>( )
</pre></td></tr></table></figure>

<p>Meanwhile, each thread that modifies <code>s</code> calls <code>notify</code> (or <code>notifyAll</code> if it needs to wake up all waiting threads, not just one) each time <code>s</code> changes:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>c<span class="preprocessor">.acquire</span>( ) 
do_something_that_modifies_state(s) 
c<span class="preprocessor">.notify</span>() <span class="preprocessor"># or, c.notifyAll() </span>
c<span class="preprocessor">.release</span>( )
</pre></td></tr></table></figure>

<h4 id="Event_objects">Event objects</h4>
<p>Event objects let any number of threads suspend and wait. All threads waiting on Event object e become ready when any other thread calls <code>e.set( )</code>.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="keyword">class</span> <span class="keyword">Event</span>()
e.clear( ) # Sets e’s flag <span class="keyword">to</span> <span class="keyword">False</span>.
e.isSet( ) # Returns the value <span class="keyword">of</span> e’s flag, <span class="keyword">True</span> <span class="keyword">or</span> <span class="keyword">False</span>.
e.<span class="keyword">set</span>( )   # Sets e’s flag <span class="keyword">to</span> <span class="keyword">True</span>. 
e.wait(timeout=None) # <span class="keyword">If</span> e’s flag <span class="keyword">is</span> <span class="keyword">True</span>, wait returns immediately. 
                     # Otherwise, wait suspends the calling thread <span class="keyword">until</span> some other thread calls <span class="keyword">set</span>.
</pre></td></tr></table></figure>

<h4 id="Semaphore_objects">Semaphore objects</h4>
<p><code>Semaphores</code> (also known as counting semaphores) are a generalization of locks. The state of a Lock can be seen as <code>True</code> or <code>False</code>; the state of a Semaphore <code>s</code> is a number between <code>0</code> and some<code>n</code> set when <code>s</code> is created.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="type">Semaphore</span><span class="container">(<span class="title">n</span>=1)</span>
s.acquire<span class="container">(<span class="title">wait</span>=<span class="type">True</span>)</span>
s.release<span class="container">( )</span></span>
</pre></td></tr></table></figure>

<h4 id="Thread_Local_Storage">Thread Local Storage</h4>
<p>Module <code>threading</code> supplies a class <code>local</code>, which threads can use to obtain <strong><em>thread-local storage (TLS)</em></strong>, also known as per-thread data. An instance L of local has arbitrary named attributes that you can set and get, and stores them in a dictionary <code>L.__dict__</code> that you can also access. L is fully thread-safe, meaning there is no problem if multiple threads simultaneously set and get attributes on L.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="keyword">import</span> threading
L = threading.local()
<span class="keyword">print</span> <span class="string">'in main thread, setting zop to 42'</span> 
L.zop = <span class="number">42</span>

<span class="function"><span class="keyword">def</span> <span class="title">targ</span><span class="params">()</span>:</span>
    <span class="keyword">print</span> <span class="string">'in subthread, setting zop to 23'</span>
    L.zop = <span class="number">23</span>
    <span class="keyword">print</span> <span class="string">'in subthread, zop is now'</span>, L.zop

t = threading.Thread(target=targ) t.start( )
t.join( )

<span class="keyword">print</span> <span class="string">'in main thread, zop is now'</span>, L.zop
</pre></td></tr></table></figure>


<p>Ex2</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
</pre></td><td class="code"><pre><span class="keyword">import</span> os, Queue, threading, urllib2

<span class="class"><span class="keyword">class</span> <span class="title">DownLoadThread</span><span class="params">(threading.Thread)</span>:</span>
	<span class="string">"""docstring for DownLoadThread"""</span>
	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, queue)</span>:</span>
		<span class="comment">#super(DownLoadThread, self).__init__()</span>
		threading.Thread.__init__(self)
		self.queue = queue

	<span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span>
		<span class="keyword">while</span> <span class="keyword">True</span>:
			url = self.queue.get() <span class="comment"># 从队列中取出一个url元素</span>
			<span class="keyword">print</span> self.name + <span class="string">" begin downloading "</span> + url + <span class="string">' ...'</span>
			self.download_file(url)
			self.queue.task_done()
			<span class="keyword">print</span> self.name + <span class="string">" finished downloading "</span> + url + <span class="string">' !!!'</span>

	<span class="function"><span class="keyword">def</span> <span class="title">download_file</span><span class="params">(self, url)</span>:</span>
		urlhander = urllib2.urlopen(url)
		fname = os.path.basename(url) + <span class="string">".html"</span>
		<span class="keyword">with</span> open(fname, <span class="string">"wb"</span>) <span class="keyword">as</span> f:
			chunk = urlhander.read(<span class="number">1024</span>)
			<span class="keyword">if</span> <span class="keyword">not</span> chunk: 
				<span class="keyword">break</span>
			f.write(chunk)


<span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:
	urls = [<span class="string">"http://weibo.com/buttonwood"</span>,
			<span class="string">"http://www.douban.com/people/buttonwood/"</span>,
			<span class="string">"http://buttonwood.github.io"</span>
	]

	queue = Queue.Queue()
    <span class="comment"># queue 队列本身能够保证线程安全，不需要额外的同步机制</span>
	<span class="comment"># creat a thread pool and give them a queue</span>
	<span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">5</span>):
		t = DownLoadThread(queue) <span class="comment"># 5 thread for doanloading</span>
		t.setDaemon(<span class="keyword">True</span>)
		t.start()

	<span class="comment"># give the queue some data	</span>
	<span class="keyword">for</span> y <span class="keyword">in</span> urls:
		queue.put(url)

	<span class="comment"># wait for the queue to finish	</span>
	queue.join()
</pre></td></tr></table></figure>]]></content>
    <summary type="html"><![CDATA[<p>A <em><code>thread</code></em> is a flow of control that shares global state with other threads; all threads appear to execute simultaneously.</p>
<p>A <em><code>process</code></em> is an instance of a running program.</p>
<h3 id="创建线程的两种方法">创建线程的两种方法</h3>
<ul>
<li>继承<code>Thread</code>类, 重写<code>run()</code>方法, 而不是<code>start()</code></li>
<li>创建<code>threading.Thread</code>对象,初始化函数<code>__init__()</code>中可将调用对象作为参数传入</li>
</ul>
<h3 id="The_thread_Module">The <code>thread</code> Module</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>L.acquire(wait=<span class="keyword">True</span>) # When wait <span class="keyword">is</span> <span class="keyword">True</span>, acquire locks L.
L.<span class="keyword">locked</span>( )          # Returns <span class="keyword">True</span> <span class="keyword">if</span> L <span class="keyword">is</span> <span class="keyword">locked</span>; otherwise, <span class="keyword">False</span>.
L.release( )         # Unlocks L, which must be <span class="keyword">locked</span>.
</pre></td></tr></table></figure>

<h3 id="The_Queue_Module">The <code>Queue</code> Module</h3>
<p>The Queue module supplies first-in, first-out (<strong><em>FIFO</em></strong>) queues that support multithread access, with one main class and two exception classes.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="type">Queue</span><span class="container">(<span class="title">maxsize</span>=0)</span>
q.empty<span class="container">()</span>
q.get<span class="container">(<span class="type">False</span>)</span>
q.full<span class="container">()</span>
q.put<span class="container">(<span class="title">x</span>,<span class="type">False</span>)</span>
q.get<span class="container">(<span class="title">block</span>=<span class="type">True</span>,<span class="title">timeout</span>=<span class="type">None</span>)</span>
q.put<span class="container">(<span class="title">item</span>,<span class="title">block</span>=<span class="type">True</span>,<span class="title">timeout</span>=<span class="type">None</span>)</span>
q.qsize<span class="container">( )</span></span>
</pre></td></tr></table></figure>

]]></summary>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/tags/Tips/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/tags/Python/"/>
    
      <category term="Thread" scheme="http://buttonwood.bitbucket.org/tags/Thread/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python in a Nutshell (Network Tips)]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-network/"/>
    <id>http://buttonwood.bitbucket.org/2014/06/23/python-in-a-nutshell-network/</id>
    <published>2014-06-23T03:51:00.000Z</published>
    <updated>2014-06-29T01:24:58.000Z</updated>
    <content type="html"><![CDATA[<h3 id="The_urlparse_Module">The <code>urlparse</code> Module</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="function">urljoin(base_url_string,relative_url_string)</span>
<span class="function">urlsplit(url_string,default_scheme=<span class="string">''</span>,allow_fragments=True)</span>
<span class="function">urlunsplit(url_tuple)</span>
</pre></td></tr></table></figure>

<h3 id="The_urllib_Module">The <code>urllib</code> Module</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="function">quote(str,safe=<span class="string">'/'</span>)</span>
<span class="function">quote_plus(str, safe=<span class="string">'/'</span>)</span>
<span class="function">unquote(str)</span>
<span class="function">unquote_plus(str)</span>
<span class="function">urlcleanup( )</span>
<span class="function">urlencode(query,doseq=False)</span>
<span class="function">urlopen(urlstring,data=None,proxies=None)</span>
<span class="function">urlretrieve(urlstring,filename=None,reporthook=None,data=None)</span>
</pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="The_urllib2_Module">The urllib2 Module</h3>
<h2 id="Email_Protocols">Email Protocols</h2>
<h3 id="The_poplib_Module">The poplib Module</h3>
<h3 id="The_smtplib_Module">The smtplib Module</h3>
<h2 id="The_HTTP_and_FTP_Protocols">The HTTP and FTP Protocols</h2>
<h3 id="The_httplib_Module">The httplib Module</h3>
<h3 id="The_ftplib_Module">The ftplib Module</h3>
]]></content>
    <summary type="html"><![CDATA[<h3 id="The_urlparse_Module">The <code>urlparse</code> Module</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="function">urljoin(base_url_string,relative_url_string)</span>
<span class="function">urlsplit(url_string,default_scheme=<span class="string">''</span>,allow_fragments=True)</span>
<span class="function">urlunsplit(url_tuple)</span>
</pre></td></tr></table></figure>

<h3 id="The_urllib_Module">The <code>urllib</code> Module</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="function">quote(str,safe=<span class="string">'/'</span>)</span>
<span class="function">quote_plus(str, safe=<span class="string">'/'</span>)</span>
<span class="function">unquote(str)</span>
<span class="function">unquote_plus(str)</span>
<span class="function">urlcleanup( )</span>
<span class="function">urlencode(query,doseq=False)</span>
<span class="function">urlopen(urlstring,data=None,proxies=None)</span>
<span class="function">urlretrieve(urlstring,filename=None,reporthook=None,data=None)</span>
</pre></td></tr></table></figure>

]]></summary>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/tags/Tips/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/tags/Python/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Data Analysis with Python (Useful Tips)]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/06/20/data_analysis_python/"/>
    <id>http://buttonwood.bitbucket.org/2014/06/20/data_analysis_python/</id>
    <published>2014-06-20T03:51:00.000Z</published>
    <updated>2014-06-29T01:25:19.000Z</updated>
    <content type="html"><![CDATA[<h3 id="复制与引用">复制与引用</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="preprocessor"># a = b 赋值时，创建对象的新引用</span>
<span class="preprocessor"># 不可变对象(数字和字符串)，创建副本</span>
<span class="preprocessor"># 可变对象(list 和 dict),创建引用，行为会有变化，危险</span>
<span class="preprocessor"># 浅复制</span>
a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]
b = list(a) # 共有元素部分会发生关联，危险

<span class="preprocessor"># 深复制</span>
import copy
b = copy.deepcopy(a)
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="built_in">line</span>        = <span class="string">"GOOD,100,490.10"</span>
types       = [str,int,float]
raw_fields  = <span class="built_in">line</span>.<span class="built_in">split</span>(<span class="string">','</span>)
fields      = [ty(vl) <span class="keyword">for</span> ty,vl <span class="operator">in</span> zip(types,raw_field)]
</pre></td></tr></table></figure>

<h3 id="collections">collections</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict
counts = defaultdict(int) <span class="comment"># values will initialize to 0</span>

<span class="keyword">from</span> collections <span class="keyword">import</span> Counter
counts = Counter(list)   <span class="comment"># list 频数统计</span>
</pre></td></tr></table></figure>

<h3 id="pandas">pandas</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="built_in">from</span> pandas import DataFrame, Series
import pandas <span class="keyword">as</span> pd
frame = DataFrame(records)
results = Series([x.<span class="built_in">split</span>()[<span class="number">0</span>] <span class="keyword">for</span> x <span class="operator">in</span> frame.<span class="operator">a</span>.dropna()])
results.value_counts()[:<span class="number">8</span>]

import pandas <span class="keyword">as</span> pd
unames = [<span class="string">'user_id'</span>, <span class="string">'gender'</span>, <span class="string">'age'</span>, <span class="string">'occupation'</span>, <span class="string">'zip'</span>] 
users = pd.read_table(<span class="string">'ml-1m/users.dat'</span>, sep=<span class="string">'::'</span>, header=None,
names=unames)

data = pd.<span class="built_in">merge</span>(pd.<span class="built_in">merge</span>(ratings, users), movies)

names1880 = pd.read_csv(<span class="string">'names/yob1880.txt'</span>, names=[<span class="string">'name'</span>, <span class="string">'sex'</span>, <span class="string">'births'</span>])
names1880.groupby(<span class="string">'sex'</span>).births.<span class="built_in">sum</span>()
</pre></td></tr></table></figure>

<h3 id="numpy">numpy</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="code"><pre>import numpy as np
data1 = [<span class="number">6</span>, <span class="number">7.5</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">1</span>]
arr1 = np.array(data1)

data2 = <span class="string">[[1, 2, 3, 4], [5, 6, 7, 8]]</span>
arr2 = np.array(data2)
arr2.ndim
arr2.shape
arr2.dtype


np.zeros(<span class="number">10</span>)
np.zeros((<span class="number">2</span>,<span class="number">3</span>))
np.arange(<span class="number">15</span>)

### Linear Algebra
x = np.array(<span class="string">[[1., 2., 3.], [4., 5., 6.]]</span>)
y = np.array(<span class="string">[[6., 23.], [-1, 7], [8, 9]]</span>)
x.dot(y) # equivalently np.dot(x, y)

from numpy.linalg import inv, qr
X = randn(<span class="number">5</span>, <span class="number">5</span>)
mat = X.T.dot(X)

inv(mat)
q, r = qr(mat)
</pre></td></tr></table></figure>

<h3 id="pandas-1">pandas</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="keyword">import</span> pandas <span class="keyword">as</span> pd
<span class="comment">#### Series</span>
pd.Series([<span class="number">4</span>, <span class="number">7</span>, -<span class="number">5</span>, <span class="number">3</span>])
obj2 = pd.Series([<span class="number">4</span>, <span class="number">7</span>, -<span class="number">5</span>, <span class="number">3</span>], index=[<span class="string">'d'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>, <span class="string">'c'</span>])
obj2 = pd.Series(adict)

<span class="comment">#### DataFrame</span>
data = {<span class="string">'state'</span>: [<span class="string">'Ohio'</span>, <span class="string">'Ohio'</span>, <span class="string">'Ohio'</span>, <span class="string">'Nevada'</span>, <span class="string">'Nevada'</span>], <span class="string">'year'</span>: [<span class="number">2000</span>, <span class="number">2001</span>, <span class="number">2002</span>, <span class="number">2001</span>, <span class="number">2002</span>],
<span class="string">'pop'</span>: [<span class="number">1.5</span>, <span class="number">1.7</span>, <span class="number">3.6</span>, <span class="number">2.4</span>, <span class="number">2.9</span>]}
frame = pd.DataFrame(data)

frame2 = DataFrame(data, columns=[<span class="string">'year'</span>, <span class="string">'state'</span>, <span class="string">'pop'</span>, <span class="string">'debt'</span>],
index=[<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>, <span class="string">'four'</span>, <span class="string">'five'</span>])
</pre></td></tr></table></figure>
]]></content>
    
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/tags/Tips/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/tags/Python/"/>
    
      <category term="Data Mining" scheme="http://buttonwood.bitbucket.org/categories/Data-Mining/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mysql Notes]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/06/17/mysql/"/>
    <id>http://buttonwood.bitbucket.org/2014/06/17/mysql/</id>
    <published>2014-06-17T00:00:00.000Z</published>
    <updated>2014-06-29T00:49:36.000Z</updated>
    <content type="html"><![CDATA[<h3 id="基本点">基本点</h3>
<p>database<br>table<br>column<br>datatype<br>row<br>primary key(unique and non-null)<br>(不更新主键列中的值；不重用主键列的值；不在主键列中使用可能会更改的值；)        </p>
<p>SQL(Structured Query Language)        </p>
<p>MySQL Administrator<br>MySQL Query Browser        </p>
<h3 id="初见">初见</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre>mysql -h 110.110.110.110 -uroot -p abcd123

mysqladmin -uroot -password ab12

grant select,insert,update,
delete on <span class="emphasis">*.*</span> to [<span class="link_label">email=test2@localhost</span>][<span class="link_reference">color=#355e9e</span>]test2@localhost[<span class="link_label">/color</span>][<span class="link_reference">/email</span>] identified by \"abc\";

create/drop database database-name;
show databases;
use database-name;
show tables;

show columns from table-name; <span class="xml"><span class="tag">&lt;<span class="title">=</span>&gt;</span></span> describe table-name;

show grants;    show status;    show errors;
</pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="SQL_语法">SQL 语法</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> products;</span>
<span class="operator"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products;</span>
<span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id,prod_price <span class="keyword">FROM</span> products;</span>

<span class="operator"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> vend_id <span class="keyword">FROM</span> products;</span> # 返回不同的值

<span class="operator"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products LIMIT <span class="number">5</span>;</span> # 前5行
<span class="operator"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products LIMIT <span class="number">5</span>,<span class="number">10</span>;</span> # 从第5行开始的10行；

<span class="operator"><span class="keyword">SELECT</span> products.prod_name <span class="keyword">FROM</span> products;</span> # 限定表名的列
<span class="operator"><span class="keyword">SELECT</span> products.prod_name <span class="keyword">FROM</span> crashcourse.products;</span> # 限定数据库的表


<span class="operator"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name;</span>
<span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id,prod_price <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name,prod_id;</span>
<span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id,prod_price <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name <span class="keyword">DESC</span>;</span>
<span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id,prod_price <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name <span class="keyword">DESC</span>,prod_id;</span>
</pre></td></tr></table></figure>

<h3 id="过滤条件">过滤条件</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">SELECT</span> prod_name,prod_id <span class="keyword">FROM</span> products <span class="keyword">WHERE</span>  prod_price = <span class="number">2.50</span>; 
&lt;;  &lt;&gt;; !=; &lt;=; &gt;; &gt;=; BETWEEN <span class="keyword">AND</span>;
</pre></td></tr></table></figure>

<h3 id="组合过滤">组合过滤</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="keyword">SELECT</span> prod_name,prod_id <span class="keyword">FROM</span> products <span class="keyword">WHERE</span>  prod_price = <span class="number">2.50</span> <span class="keyword">AND</span> prod_id &lt; <span class="number">1000</span>;
<span class="keyword">AND</span>; <span class="keyword">OR</span>;  (<span class="keyword">AND</span> 优先级高于 <span class="keyword">OR</span>); <span class="keyword">IN</span> (<span class="keyword">IN</span> 比 <span class="keyword">OR</span> 快); <span class="keyword">NOT</span>； 

<span class="keyword">SELECT</span> prod_name,prod_price <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> (vend_id = <span class="number">10002</span> <span class="keyword">OR</span> vend_id = <span class="number">10003</span> ) <span class="keyword">AND</span> prod_price &lt;= <span class="number">1000</span>;

<span class="keyword">SELECT</span> prod_name,prod_price <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> vend_id <span class="keyword">IN</span> (<span class="number">10002</span>,<span class="number">10003</span>) <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name;
 
<span class="keyword">SELECT</span> prod_name,prod_price <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> vend_id <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="number">10002</span>,<span class="number">10003</span>) <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name;
</pre></td></tr></table></figure>

<h3 id="空值">空值</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id <span class="keyword">FROM</span> products <span class="keyword">WHERE</span>  prod_price <span class="keyword">is</span> <span class="keyword">NULL</span>;</span>
</pre></td></tr></table></figure>

<h3 id="通配符_LIKE_(列匹配)">通配符 LIKE (列匹配)</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre>%(任何字符出现任何次数)；_(与%一样，但只匹配单个字符)

<span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id <span class="keyword">FROM</span> products <span class="keyword">WHERE</span>  prod_name <span class="keyword">LIKE</span> <span class="string">'jet%'</span>;</span>
<span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id <span class="keyword">FROM</span> products <span class="keyword">WHERE</span>  prod_name <span class="keyword">LIKE</span> <span class="string">'%jet%'</span>;</span>
<span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id <span class="keyword">FROM</span> products <span class="keyword">WHERE</span>  prod_name <span class="keyword">LIKE</span> <span class="string">'%jet'</span>;</span>
<span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id <span class="keyword">FROM</span> products <span class="keyword">WHERE</span>  prod_name <span class="keyword">LIKE</span> <span class="string">'s%e'</span>;</span>

<span class="operator"><span class="keyword">SELECT</span> prod_name,prod_id <span class="keyword">FROM</span> products <span class="keyword">WHERE</span>  prod_name <span class="keyword">LIKE</span> <span class="string">'_ ton anvil'</span>;</span>
</pre></td></tr></table></figure>

<h3 id="正则表达式_REGEXP_(行匹配)">正则表达式 REGEXP (行匹配)</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="code"><pre>SELECT prod_name FROM products WHERE prod_name REGEXP <span class="string">'1000'</span> ORDER BY prod_name;

.(任意一个字符); 
|;  <span class="number">1</span>|<span class="number">2</span>|<span class="number">3</span>
[]; [a-z]
[:alnum:]; [a-zA-Z0-<span class="number">9</span>]
\\.; .
\\-; -
\\f; 换页
\\n; 换行
\\r; 回车
\\t; 制表
\\v; 纵向制表

*; &gt;=<span class="number">0</span> 个
+; &gt;=<span class="number">1</span> 个;  {<span class="number">1</span>,}
?; <span class="number">0</span>个或<span class="number">1</span>个; {<span class="number">0</span>;<span class="number">1</span>}
{n};    n次
{n,};   &gt;=n; 
{n,m}   (m&lt;=<span class="number">255</span>);

^; 句首
$; 句尾
<span class="string">[[:&lt;:]]</span>; 词首
<span class="string">[[:&gt;:]]</span>; 词尾

SELECT prod_name FROM products WHERE prod_name REGEXP <span class="string">'.000'</span> ORDER BY prod_name;

REGEXP <span class="string">'^[0-9\\.]'</span>
REGEXP <span class="string">'[[:digit:]]{4}'</span>
REGEXP <span class="string">'[0-9]{4}'</span>
REGEXP <span class="string">'[0-9][0-9][0-9][0-9]'</span>
</pre></td></tr></table></figure>

<h3 id="创建计算字段">创建计算字段</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre>Concat； (concatenate拼接)

<span class="operator"><span class="keyword">SELECT</span> Concat(RTrim(vend_name), <span class="string">' ('</span>, vend_country, <span class="string">')'</span>) <span class="keyword">FROM</span> vendors <span class="keyword">WHERE</span> vend_price &lt; <span class="number">1000</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> vend_name;</span>

#### 计算
<span class="operator"><span class="keyword">SELECT</span> prod_id, quantity, item_price, quantity*item_price <span class="keyword">AS</span> expanded_price <span class="keyword">FROM</span> <span class="keyword">order</span> items <span class="keyword">WHERE</span> order_num = <span class="number">20005</span>;</span>

#### 使用函数
RTrim();
LTrim();
Upper();
Lower();
Left();
Length();
Soundex(); //将任何文本串转化为其语音表示的字母数字模式的算法
SubString();


<span class="operator"><span class="keyword">SELECT</span> cust_id, order_num <span class="keyword">FROM</span> orders <span class="keyword">WHERE</span> <span class="keyword">Year</span>(order_data) = <span class="number">2005</span> <span class="keyword">AND</span> <span class="keyword">Month</span>(order_date) = <span class="number">9</span>;</span>
</pre></td></tr></table></figure>   

<h3 id="分组数据">分组数据</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">SELECT</span> vend_id, <span class="aggregate">COUNT</span>(*) <span class="keyword">AS</span> num_prods <span class="keyword">FROM</span> products <span class="keyword">GROUP</span> <span class="keyword">BY</span> vend_id;</span>

#### 过滤分组
//Where 过滤指定的是行而不是分组，也没有分组的概念；having过滤分组；
//Where 在数据分组前过滤，having在数据分组后过滤；
<span class="operator"><span class="keyword">SELECT</span> vend_id, <span class="aggregate">COUNT</span>(*) <span class="keyword">AS</span> num_prods <span class="keyword">FROM</span> products <span class="keyword">GROUP</span> <span class="keyword">BY</span> vend_id <span class="keyword">HAVING</span> num_prods &gt;=<span class="number">2</span> ;</span>
</pre></td></tr></table></figure>

<h3 id="子查询">子查询</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">SELECT</span> order_num <span class="keyword">FROM</span> orderitems <span class="keyword">WHERE</span> prod_id = <span class="string">"TNT2"</span>;</span>  // 订单信息
<span class="operator"><span class="keyword">SELECT</span> cust_id <span class="keyword">FROM</span> orders <span class="keyword">WHERE</span> order_num <span class="keyword">IN</span> (<span class="number">20005</span>,<span class="number">20007</span>);</span> // 客户id
<span class="operator"><span class="keyword">SELECT</span> cust_name,cust_contact <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> cust_id <span class="keyword">IN</span> (<span class="number">10001</span>,<span class="number">10004</span>);</span> // 客户信息

<span class="operator"><span class="keyword">SELECT</span> cust_name,cust_contact <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> cust_id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> cust_id <span class="keyword">FROM</span> orders <span class="keyword">WHERE</span> order_num <span class="keyword">IN</span> (<span class="keyword">SELECT</span> order_num <span class="keyword">FROM</span> orderitems <span class="keyword">WHERE</span> prod_id = <span class="string">"TNT2"</span>));</span>

//表别名及联结
<span class="operator"><span class="keyword">SELECT</span> cust_name,cust_contact 
<span class="keyword">FROM</span> customers <span class="keyword">AS</span> c, orders <span class="keyword">AS</span> o, <span class="keyword">order</span> items <span class="keyword">AS</span> oi
<span class="keyword">WHERE</span> c.cust_id = o.cust_id
<span class="keyword">AND</span> oi.oder_num = o.order_num
<span class="keyword">AND</span> prod_id = <span class="string">'TNT2'</span>

//注意限制有歧义性的子查询
<span class="keyword">SELECT</span> cust_name,cusr_stat,(<span class="keyword">SELECT</span> <span class="aggregate">COUNT</span>(*) <span class="keyword">FROM</span> orders <span class="keyword">WHERE</span> orders.cust_id = customers.cust_id) <span class="keyword">AS</span> orders <span class="keyword">FROM</span> customers;</span>
</pre></td></tr></table></figure>

<h3 id="联结表_join_table">联结表 join table</h3>
<p>相同数据出现多次并不好，关系表设计就是保证把信息分成多个表，一类数据一个表，通过某些常用值关联，便于管理、修改和维护。 </p>
<p>比如供应商表vendors和产品表products。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="code"><pre>//联结表的创建非常简单，规定要联结的所有表以及它们如何关联即可
//注意确保WHERE语句的正确性
<span class="operator"><span class="keyword">SELECT</span> vend_name,prod_name,prod_price 
<span class="keyword">FROM</span> vendors,products
<span class="keyword">WHERE</span> vendors.vend_id = products.vend_id
<span class="keyword">ORDER</span> <span class="keyword">BY</span>  vend_name,prod_name

//内部联结 <span class="keyword">inner</span> <span class="keyword">join</span>
<span class="keyword">SELECT</span> vend_name,prod_name,prod_price 
<span class="keyword">FROM</span> vendors
<span class="keyword">INNER</span> <span class="keyword">JOIN</span> products 
<span class="keyword">ON</span> vendors.vend_id = products.vend_id

<span class="keyword">SELECT</span> customers.cust_id,orders.order_num
<span class="keyword">FROM</span> customers
<span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders 
<span class="keyword">ON</span> customers.cust_id = orders.cust_id

//外部链接，包含那些相关表中没有关联行的行  <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> <span class="keyword">ON</span>
<span class="keyword">SELECT</span> customers.cust_id,orders.order_num
<span class="keyword">FROM</span> customers
<span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> orders //从左边表customers选择行行为
<span class="keyword">ON</span> customers.cust_id = orders.cust_id

//聚集函数，数据汇总
<span class="keyword">SELECT</span> customers.cust_name,
       customers.cust_id,
       <span class="aggregate">COUNT</span>(orders.order_num) <span class="keyword">AS</span> ord_num
<span class="keyword">FROM</span> customers 
<span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders // <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> 亦可，匹配未下单客户
<span class="keyword">ON</span> customers.cust_id = orders.cust_id
<span class="keyword">GROUP</span> <span class="keyword">BY</span> customers.cust_id;</span>
</pre></td></tr></table></figure>

<h3 id="组合查询_union">组合查询 union</h3>
<p>在单个查询中从不同表中返回类似结构的数据<br>对单个表执行多个查询，按当个查询返回数据</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">SELECT</span> vend_id,prod_id,prod_price
<span class="keyword">FROM</span> products
<span class="keyword">WHERE</span> prod_price &lt;= <span class="number">5</span>
<span class="keyword">UNION</span>
<span class="keyword">SELECT</span> vend_id,prod_id,prod_price
<span class="keyword">FROM</span> products
<span class="keyword">WHERE</span> vend_id <span class="keyword">IN</span> (<span class="number">10001</span>,<span class="number">10003</span>)

<span class="keyword">SELECT</span> vend_id,prod_id,prod_price
<span class="keyword">FROM</span> products
<span class="keyword">WHERE</span> prod_price &lt;= <span class="number">5</span> 
<span class="keyword">OR</span> vend_id <span class="keyword">IN</span> (<span class="number">10001</span>,<span class="number">10003</span>)</span>
</pre></td></tr></table></figure>

<p>UNION 必须有两条或两条以上的SELECT语句<br>每个查询必须有相同的列、表达式或者聚集函数<br>列数据必须兼容，类型不必完全相同<br>重复结果自动删除(UNION ALL)<br>最后一条语句使用OERDER BY</p>
<h3 id="全文本搜索">全文本搜索</h3>
<p>一般创建表时使用</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> productnotes        
(                
note_id    <span class="keyword">int</span>    <span class="keyword">NOT</span> <span class="keyword">NULL</span>    AUTO_INCREMENT        
prod_id    <span class="keyword">char</span>(<span class="number">10</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>,        
note_date    <span class="keyword">date</span> <span class="keyword">time</span>    <span class="keyword">NULL</span>,        
note_text    text    <span class="keyword">NULL</span>,        
<span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>(note_id),        
FULLTEXT(note_text)        
) ENGIN=MyISAM</span>
</pre></td></tr></table></figure>

<p>创建表时指定FULLTEXT，不要在导入数据时使用  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="code"><pre><span class="keyword">SELECT</span> note_text
FORM productnotes 
WHERE Match(note_text) Against(<span class="attribute">'rabbit</span>');
// WHERE Match(note_text) Against(<span class="attribute">'rabbit</span>' <span class="keyword">WITH</span> QUERY EXPANSION); 查询扩展
// WHERE note_text LIKE '%rabbit%';

<span class="keyword">SELECT</span> note_text,
    Match(note_text) Against(<span class="attribute">'rabbit</span>') AS rank
FORM productnotes 

// 布尔文本搜索，即使没有FULLTEXT索引也可以用，但是慢
<span class="keyword">SELECT</span> note_text
FORM productnotes 
WHERE Match(note_text) Against(<span class="attribute">'rabbit</span>' <span class="keyword">IN</span> <span class="typename">BOOLEAN</span> MODE);
// WHERE Match(note_text) Against(<span class="attribute">'rabbit</span> -rope*' <span class="keyword">IN</span> <span class="typename">BOOLEAN</span> MODE);

+ 包含一个词
- 排除
&gt; 包含，增加等级
&lt; 包含，减少等级
() 把词组成表达式
~ 取消一个词的排序值
* 词尾通配符
<span class="string">""</span> 定义一个短语

//WHERE Match(note_text) Against('+rabbit +rope' <span class="keyword">IN</span> <span class="typename">BOOLEAN</span> MODE);
//WHERE Match(note_text) Against(<span class="attribute">'rabbit</span> rope' <span class="keyword">IN</span> <span class="typename">BOOLEAN</span> MODE);
//WHERE Match(note_text) Against('<span class="string">"rabbit rope"</span>' <span class="keyword">IN</span> <span class="typename">BOOLEAN</span> MODE);
//WHERE Match(note_text) Against('&gt;rabbit &lt;rope' <span class="keyword">IN</span> <span class="typename">BOOLEAN</span> MODE);
</pre></td></tr></table></figure>      

<h3 id="插入数据_INSERT">插入数据 INSERT</h3>
<p>插入完整的行<br>插入行的一部分<br>插入多行<br>插入某些查询结果        </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> customers
<span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="string">'Pop E. LA'</span>, <span class="string">'100 Main Street'</span>, <span class="string">'Los Angeles'</span>, <span class="string">'CA'</span>, <span class="string">'900046'</span>, <span class="string">'USA'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>);</span>

// 安全做法，指名列
<span class="operator"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> customers(cust_name,cust_address,cust_city,cust_state,cust_zip,cust_country,cust_contact,cust_email)
<span class="keyword">VALUES</span>(<span class="string">'Pop E. LA'</span>, <span class="string">'100 Main Street'</span>, <span class="string">'Los Angeles'</span>, <span class="string">'CA'</span>, <span class="string">'900046'</span>, <span class="string">'USA'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>);</span>

//多条 <span class="operator"><span class="keyword">INSERT</span> 语句；相隔
//多条语句如果插入列相同，Valuse可用(),() 逗号相隔

// <span class="keyword">INSERT</span> <span class="keyword">SELECT</span>
<span class="keyword">INSERT</span> <span class="keyword">INTO</span>  customer_new(cust_id,cust_name,cust_address,cust_city,cust_state,cust_zip,cust_country,cust_contact,cust_email)        
<span class="keyword">SELECT</span> cust_id,cust_name,cust_address,cust_city,cust_state,cust_zip,cust_country,cust_contact,cust_email         
<span class="keyword">FROM</span> customer</span>
</pre></td></tr></table></figure>

<h3 id="更新或删除数据_UPDATE_/_DELETE">更新或删除数据 UPDATE / DELETE</h3>
<p>更新表中特定行<br>更新表中所有行(要小心)   </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">UPDATE</span> customers        
<span class="keyword">SET</span> cust_email = <span class="string">'test@info.me'</span> 
//删除某个列的值 <span class="keyword">SET</span> cust_email = <span class="keyword">NULL</span>         
<span class="keyword">WHERE</span> cust_id = <span class="number">10005</span>     
   
<span class="keyword">DELETE</span> <span class="keyword">FROM</span> customers        
<span class="keyword">WHERE</span>  cust_id = <span class="number">10005</span> 
// <span class="keyword">DELETE</span> 删除整行，<span class="keyword">UPDATE</span>可删除整列
// <span class="keyword">DELETE</span> 删除表的内容而不是表
// 更快的删除 <span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span>， 删除原来的表并重新创建一个表</span>
</pre></td></tr></table></figure>


<h3 id="创建和操纵表">创建和操纵表</h3>
<p>使用交互式方式创建和管理表<br>mysql命令行     </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customers        
(                
cust_id        <span class="keyword">int</span>    <span class="keyword">NOT</span> <span class="keyword">NULL</span>    AUTO_INCREMENT,        
cust_name      <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>,        
cust_city      <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NULL</span>,   
cust_state     <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NULL</span>,
cust_zip       <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NULL</span>,
cust_country   <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NULL</span>,     
cust_email     <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NULL</span>,       
<span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>(cust_id),        
) ENGIN=InnoDB;</span>

// 主键使用单个列，其值必须唯一；多个列，列组合值必须唯一
// 主键可以在创建表时定义，也可以在之后定义
// 每个表只允许一个AUTO_INCREMENT列，而且它必须被索引

<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orderitems        
(                
order_num        <span class="keyword">int</span>        <span class="keyword">NOT</span> <span class="keyword">NULL</span>,        
order_item       <span class="keyword">int</span>        <span class="keyword">NOT</span> <span class="keyword">NULL</span>,          
prod_id          <span class="keyword">char</span>(<span class="number">10</span>)   <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  
quantity         <span class="keyword">int</span>        <span class="keyword">NOT</span> <span class="keyword">NULL</span>    <span class="keyword">DEFAULT</span> <span class="number">0</span>,
item_price       <span class="keyword">decimal</span>(<span class="number">8</span>,<span class="number">2</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>,      
<span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>(order_num,order_item),        
) ENGIN=InnoDB;</span>

// InnoDB 是一个可靠的事务处理引擎，不支持全文搜索；
// MEMORY 功能上等同与MyISAM，数据存储在内存中，速度很快，适用于临时表
// MyISAM 是一个性能极高的引擎，支持全文搜索，不支持事务处理

// 在表的设计中需要花费大量时间来考虑，以便后期不对该表进行大的改动
// 更新表 <span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span>
// <span class="keyword">ALTER</span> <span class="keyword">TABLE</span>要极小心，改动前先备份，更改不能撤销，增加了不能删除，删除了不能恢复
<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> vendors
<span class="keyword">ADD</span> vend_phone <span class="keyword">CHAR</span>(<span class="number">20</span>)

// 外键
<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> orders
<span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_orders_customers 
<span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (prod_id)
<span class="keyword">REFERENCES</span> customers (cuts_id);</span>

<span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> products
<span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_products_vendors 
<span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (vend_id)
<span class="keyword">REFERENCES</span> vendors (vend_id);</span>

// 删除表 <span class="operator"><span class="keyword">DROP</span>
<span class="keyword">DROP</span> <span class="keyword">TABLE</span> customers；

// 重命名 RENAME
RENAME <span class="keyword">TABLE</span> test <span class="keyword">TO</span> customers;</span>

<span class="operator">RENAME <span class="keyword">TABLE</span> back_customers <span class="keyword">TO</span> customers,
    back_vendors <span class="keyword">TO</span> vendors,
    back_products <span class="keyword">TO</span> products;</span>
</pre></td></tr></table></figure>

<h3 id="使用视图">使用视图</h3>
<p>视图是虚拟的表，动态查询的封装；视图主要用于检索数据</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span>
<span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">VIEW</span> viewname
<span class="keyword">DROP</span> <span class="keyword">VIEW</span> viewname
<span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> 

<span class="keyword">CREATE</span> <span class="keyword">VIEW</span> product_customers <span class="keyword">AS</span> 
<span class="keyword">SELECT</span> cust_name, cust_contact, prod_id
<span class="keyword">FROM</span> customers, orders, orderitems
<span class="keyword">WHERE</span> customers.cust_id = orders.cust_id
<span class="keyword">AND</span> orderitems.order_num  = orders.order_num;</span>

<span class="operator"><span class="keyword">SELECT</span> cust_name, cust_contact 
<span class="keyword">FROM</span> product_customers
<span class="keyword">WHERE</span> prod_id = <span class="string">'TNT2'</span>;</span>

// 格式化
<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> vendor_locations <span class="keyword">AS</span>
<span class="keyword">SELECT</span> Concat(RTrim(vend_name), <span class="string">' ('</span>, vend_country, <span class="string">')'</span>) <span class="keyword">AS</span> vend_title
<span class="keyword">FROM</span> vendors
<span class="keyword">ORDER</span> <span class="keyword">BY</span> vend_name;</span>

// 视图过滤
<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> customer_email_list <span class="keyword">AS</span>
<span class="keyword">SELECT</span> cust_id,cust_name,cust_eamil
<span class="keyword">FROM</span> customers
<span class="keyword">WHERE</span> cust_email <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span>

// 视图与计算字段
<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> orderitems_expanded  <span class="keyword">AS</span>
<span class="keyword">SELECT</span> order_num, prod_id, quantity, item_price,
    quantity * item_price <span class="keyword">AS</span> expanded_price
<span class="keyword">FROM</span> orderitems;</span>

// 更新视图
// 可以对其使用<span class="operator"><span class="keyword">INSERT</span>、<span class="keyword">UPDATE</span>、<span class="keyword">DELETE</span>操作，更新一个视图将更新其基表

// 以下视图不能操作
// 分组 <span class="keyword">GROUP</span> <span class="keyword">BY</span> 和 <span class="keyword">HAVING</span>
// 联结
// 子查询
// 并
// 聚集函数，<span class="aggregate">Min</span>，<span class="aggregate">Count</span>，<span class="aggregate">Sum</span>
// <span class="keyword">DISTINCT</span>
// 导出计算列</span>
</pre></td></tr></table></figure>

<h3 id="存储过程">存储过程</h3>
<p>为以后的使用而保存的一条或多条mysql语句的集合，可以视为批文件；<br>存储过程的3个主要好处：简单、安全、高性能；<br>存储过程的编写比SQL语句复杂；<br>多数人可能只有使用权限而没有创建权限；        </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="code"><pre><span class="comment">// 执行,类似函数</span>
CALL product_pricing(@price_low,@price_high,@price_avergae);

<span class="comment">// 编写</span>
<span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">product_pricing</span><span class="params">()</span>
<span class="title">BEGIN</span> 
    <span class="title">SELECT</span> <span class="title">Avg</span><span class="params">(prod_price)</span> <span class="title">AS</span> <span class="title">price_avergae</span>
    <span class="title">FROM</span> <span class="title">products</span>;</span>
<span class="keyword">END</span>;

<span class="comment">// 删除</span>
DROP product_pricing;

<span class="comment">// 一般，存贮过程并不显示结果，而是返回给指定变量</span>
<span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">product_pricing</span><span class="params">(
    <span class="keyword">OUT</span> pl DECIMAL(8,2)</span>, // <span class="title">IN</span> 传入
    <span class="title">OUT</span> <span class="title">ph</span> <span class="title">DECIMAL</span><span class="params">(8,2)</span>, // <span class="title">OUT</span> 传出
    <span class="title">OUT</span> <span class="title">pa</span> <span class="title">DECIMAL</span><span class="params">(8,2)</span>  // <span class="title">INOUT</span>
)
<span class="title">BEGIN</span> 
    <span class="title">SELECT</span> <span class="title">Min</span><span class="params">(prod_price)</span> <span class="title">INTO</span> <span class="title">pl</span> <span class="title">FROM</span> <span class="title">products</span>;</span>
    <span class="keyword">SELECT</span> Max(prod_price) <span class="keyword">INTO</span> ph <span class="keyword">FROM</span> products;
    <span class="keyword">SELECT</span> Avg(prod_price) <span class="keyword">INTO</span> pa <span class="keyword">FROM</span> products;
<span class="keyword">END</span>;

CALL product_pricing(@price_low,@price_high,@price_avergae);<span class="comment">// 不输出</span>
<span class="keyword">SELECT</span> @price_low,@price_high,@price_avergae;

<span class="comment">// ordertotal 接受订单号并返回该订单的合计</span>
<span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">order_total</span><span class="params">(
    <span class="keyword">IN</span>  onumber INT, // <span class="keyword">IN</span> 传入
    <span class="keyword">OUT</span> ototal DECIMAL(8,2)</span>, // <span class="title">OUT</span> 传出
)
<span class="title">BEGIN</span> 
    <span class="title">SELECT</span> <span class="title">Sum</span><span class="params">(itme_price * quantity)</span> 
    <span class="title">FROM</span> <span class="title">orderitems</span>
    <span class="title">WHERE</span> <span class="title">order_num</span> = <span class="title">onumber</span> <span class="title">INTO</span> <span class="title">ototal</span>;</span>
<span class="keyword">END</span>;

CALL order_total(<span class="number">20005</span>,@total);
<span class="keyword">SELECT</span>  @total;
</pre></td></tr></table></figure>

<p>只有在存储过程中包含业务规则和智能处理时，其威力才会显示出来</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="code"><pre>-- Name: order_total
-- Parameters: onumber = <span class="keyword">order</span> number
--             taxable = <span class="number">0</span> <span class="keyword">if</span> <span class="keyword">not</span> taxable, <span class="number">1</span> <span class="keyword">if</span> taxable
--             ototal  = <span class="keyword">order</span> total variable

<span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">order_total</span><span class="params">(
    <span class="keyword">IN</span>  onumber INT, // <span class="keyword">IN</span> 传入
    <span class="keyword">IN</span>  taxable INT,
    <span class="keyword">OUT</span> ototal DECIMAL(8,2)</span>, // <span class="title">OUT</span> 传出
) <span class="title">COMMENT</span> '<span class="title">Obtain</span> <span class="title">order</span> <span class="title">total</span>, <span class="title">optionally</span> <span class="title">adding</span> <span class="title">tax</span>'

<span class="title">BEGIN</span> 
    
    -- <span class="title">Declare</span> <span class="title">variable</span> <span class="title">for</span> <span class="title">total</span>
    <span class="title">DECLARE</span> <span class="title">total</span> <span class="title">DECIMAL</span><span class="params">(8,2)</span>;</span>
    -- Declare tax percentge
    DECLARE texrate INT <span class="keyword">DEFAULT</span> <span class="number">6</span>;
    
    -- Get the <span class="keyword">order</span> total
    <span class="keyword">SELECT</span> Sum(itme_price * quantity) 
    <span class="keyword">FROM</span> orderitems
    <span class="keyword">WHERE</span> order_num = onumber <span class="keyword">INTO</span> total;
    
    -- <span class="keyword">Is</span> this taxable?
    <span class="keyword">IF</span> taxable <span class="keyword">THEN</span>
        <span class="keyword">SELECT</span> total+(total/<span class="number">100</span>*taxrate) <span class="keyword">INTO</span> total;
    <span class="keyword">END</span> <span class="keyword">IF</span>;
    
    <span class="keyword">SELECT</span> total <span class="keyword">INTO</span> ototal; 
<span class="keyword">END</span>;

CALL order_total(<span class="number">20005</span>,<span class="number">0</span>,@total);
<span class="keyword">SELECT</span>  @total;
SHOW <span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span>  <span class="title">order_total</span>;</span>
</pre></td></tr></table></figure>


<h3 id="使用游标">使用游标</h3>
<p>需要在检索出来的行中 前进或后退一行或多行。它不是一条语句，而是该语句检索出来的结果。<br>主要用于交互式应用，可以滚动屏幕上的数据，并对数据进行浏览或修改。        </p>
<p>先声明，SELECT 语句检索，再关闭。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">processorders</span><span class="params">()</span>
<span class="title">BEGIN</span>
    <span class="title">DECLARE</span> <span class="title">ordernumbers</span> <span class="title">CURSOR</span>
    <span class="title">FOR</span> 
    <span class="title">SELECT</span> <span class="title">order_num</span> <span class="title">FROM</span> <span class="title">orders</span>;</span>
<span class="keyword">END</span>;

<span class="comment">//打开 </span>
OPEN ordernumbers;
CLOSE ordernumbers;
</pre></td></tr></table></figure>


<h3 id="数据库管理">数据库管理</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>mysql <span class="attribute">-u</span> root <span class="attribute">-p</span>
</pre></td></tr></table></figure>

<h3 id="数据库维护">数据库维护</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>ANALYZE <span class="keyword">TABLE</span> orders;
CHECK <span class="keyword">TABLE</span> orders,order_items;

source creat.sql
</pre></td></tr></table></figure>
]]></content>
    <summary type="html"><![CDATA[<h3 id="基本点">基本点</h3>
<p>database<br>table<br>column<br>datatype<br>row<br>primary key(unique and non-null)<br>(不更新主键列中的值；不重用主键列的值；不在主键列中使用可能会更改的值；)        </p>
<p>SQL(Structured Query Language)        </p>
<p>MySQL Administrator<br>MySQL Query Browser        </p>
<h3 id="初见">初见</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre>mysql -h 110.110.110.110 -uroot -p abcd123

mysqladmin -uroot -password ab12

grant select,insert,update,
delete on <span class="emphasis">*.*</span> to [<span class="link_label">email=test2@localhost</span>][<span class="link_reference">color=#355e9e</span>]test2@localhost[<span class="link_label">/color</span>][<span class="link_reference">/email</span>] identified by \"abc\";

create/drop database database-name;
show databases;
use database-name;
show tables;

show columns from table-name; <span class="xml"><span class="tag">&lt;<span class="title">=</span>&gt;</span></span> describe table-name;

show grants;    show status;    show errors;
</pre></td></tr></table></figure>

]]></summary>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="Mysql" scheme="http://buttonwood.bitbucket.org/tags/Mysql/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Making sense of data[^1]]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/05/18/3_data_preparation/"/>
    <id>http://buttonwood.bitbucket.org/2014/05/18/3_data_preparation/</id>
    <published>2014-05-18T00:00:00.000Z</published>
    <updated>2014-06-29T04:01:53.000Z</updated>
    <content type="html"><![CDATA[<h3 id="3_Data_Preparation">3 Data Preparation</h3>
<p>Preparing the data is one of the most time-consuming parts of any data analysis/data mining project. </p>
<h4 id="3-1_DATA_SOURCES">3.1 DATA SOURCES</h4>
<ol>
<li>Surveys or polls</li>
<li>Experiments</li>
<li>Observational and other studies</li>
<li>Operational databases(CRM etc)</li>
<li>Data warehouses</li>
<li>Historical databases</li>
<li>Purchased data</li>
</ol>
<h4 id="3-2_DATA_UNDERSTANDING">3.2 DATA UNDERSTANDING</h4>
<ol>
<li>Data Tables</li>
<li>Continuous and Discrete Variables</li>
<li>Scales of Measurement(Nominal/Ordinal/IntervalRatio)</li>
<li>Roles in Analysis(Labels/Descriptors/Response)</li>
<li>Frequency Distribution</li>
</ol>
<h4 id="3-3_DATA_PREPARATION">3.3 DATA PREPARATION</h4>
<ol>
<li>Normalization<ul>
<li><strong><em>Min-max</em></strong>: $$\acute{value} = \frac{Value - OriginalMin}{OriginalMax - OriginalMin}*(NewMax - NewMin) + NewMin$$</li>
<li><strong><em>z-score</em></strong>: $$\acute{value} = \frac{Value - \bar{x}}{s}$$</li>
<li><strong><em>Decimal scaling</em></strong>: $$\acute{value} = \frac{Value}{10^n}$$</li>
</ul>
</li>
</ol>
<a id="more"></a>

<h3 id="4_Tables_and_Graphs">4 Tables and Graphs</h3>
<h5 id="4-2-2_Contingency_Tables">4.2.2 Contingency Tables</h5>
<p><img src="http://ww1.sinaimg.cn/large/6fbc15dcgw1ehurlaq9yxj20ql06q0tq.jpg" alt="table-4.2.2"></p>
<h5 id="4-2-3_Summary_Tables">4.2.3 Summary Tables</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">summary</span>(<span class="typedef"><span class="keyword">data</span>)</span>
</pre></td></tr></table></figure>

<h5 id="4-3-2_Frequency_Polygrams_and_Histograms">4.3.2 Frequency Polygrams and Histograms</h5>
<h5 id="4-3-3_Scatterplots">4.3.3 Scatterplots</h5>
<h5 id="4-3-4_Box_Plots">4.3.4 Box Plots</h5>
<p><img src="http://ww1.sinaimg.cn/large/6fbc15dcgw1ehurq1b32mj20fx0ga76n.jpg" alt="table-4.7"></p>
<h3 id="5_Statistics">5 Statistics</h3>
<ul>
<li><code>Population</code>        </li>
<li><code>Sample</code></li>
<li><code>Confidence intervals</code>: A confidence interval allows us to make statements concerning the likely range that a population parameter (such as the mean) lies within. </li>
<li><code>Hypothesis tests</code>: A hypothesis test determines whether the data collected supports a specific claim. </li>
<li><code>Chi-square</code>: The chi-square test is a statistical test procedure to understand whether a relationship exists between pairs of categorical variables. </li>
<li><code>One-way analysis of variance</code>: This test determines whether a relationship exists between three or more group means. </li>
</ul>
<h6 id="Summary_of_inferential_statistical_tests">Summary of inferential statistical tests</h6>
<p><img src="http://ww2.sinaimg.cn/large/6fbc15dcgw1ehus8yoeqoj20fv0580t9.jpg" alt="table-5.3"></p>
<h5 id="5-3-2_Confidence_Intervals">5.3.2 Confidence Intervals</h5>
<p>A single statistic could be used as an estimate for a population (commonly referred to as a point estimate). </p>
<h6 id="Confidence_Ranges_for_Continuous_Variables">Confidence Ranges for Continuous Variables</h6>
<p>For continuous variables, the mean is the most common population estimate.<br>$$<br>\bar{x} \pm {Z}_{C}\frac{S}{\sqrt{n}}<br>$$</p>
<p>The normal distribution can be used for large sample sizes where the number of observations is greater than or equal to 30. However, for a sample size of less than 30, an alternative distribution is needed: <strong><em>Student’s t-distribution</em></strong>. </p>
<p>$$<br>\bar{x} \pm {t}_{C}\frac{S}{\sqrt{n}}<br>$$</p>
<h6 id="Confidence_Ranges_for_Categorical_Variables">Confidence Ranges for Categorical Variables</h6>
<p>When handling categorical variables, the proportion with a given outcome is often used to summarize the variable. This equals the outcome’s size divided by the sample size. </p>
<ol>
<li>the standard error of the proportion and </li>
<li>the confidence level with which we wish to state the range.</li>
</ol>
<p>$$<br>p \pm {Z}_{C}{\sqrt\frac{p(1-p)}{n}}<br>$$</p>
<p><code>p</code>:    the proportion with a given outcome<br><code>n</code>:    the sample size<br>${Z}_{C}$:    the critical Z-score<br>$\sqrt\frac{p(1-p)}{n}$:    the sandard error of proportion</p>
<h5 id="5-3-3_Hypothesis_Tests">5.3.3 Hypothesis Tests</h5>
<p>A hypothesis test determines whether you have enough data to reject the claim (and accept the alternative) or whether you do not have enough data to reject the claim. </p>
<ul>
<li>Null hypothesis</li>
<li>Alternative hypothesis</li>
</ul>
<h6 id="Hypothesis_Assessment">Hypothesis Assessment</h6>
<p>Once the null hypothesis and the alternative hypothesis have been described, it is now possible to assess the hypotheses using the data collected.         </p>
<p>First, the statistic of interest from the sample is calculated.         </p>
<p>Next, a hypothesis test will look at the difference between the value claimed in the hypothesis statement and the calculated sample statistic. </p>
<p>For large sample sets (greater than or equal to 30 observations), identifying where the hypothesis test result is located on the normal distribution curve of the sampling distribution, will determine whether the null hypothesis is rejected.</p>
<h6 id="Calculating_p-Values">Calculating <code>p-Values</code></h6>
<p>A <code>p-value</code> is the probability of getting the recorded value or a more extreme value. It is a measure of the likelihood of the result given the null hypothesis is true or the statistical significance of the claim. </p>
<h6 id="Hypothesis_Test:_Single_Group,_Continuous_Data">Hypothesis Test: Single Group, Continuous Data</h6>
<p>$$<br>Z = \frac{\bar{x}-\mu}{\frac{s}}<br>$$</p>
<h6 id="Hypothesis_Test:_Single_Group,_Categorical_Data">Hypothesis Test: Single Group, Categorical Data</h6>
<h6 id="Hypothesis_Test:_Two_Groups,_Continuous_Data">Hypothesis Test: Two Groups, Continuous Data</h6>
<p>If the group sizes are less than 30.</p>
<h6 id="Hypothesis_Test:_Two_Groups,_Categorical_Data">Hypothesis Test: Two Groups, Categorical Data</h6>
<h6 id="Paired_Test">Paired Test</h6>
<h6 id="Errors">Errors</h6>
<h5 id="5-3-4_Chi-Square">5.3.4 Chi-Square</h5>
<p>The chi-square test is a hypothesis test to use with variables measured on a nominal or ordinal scale. It allows an analysis of whether there is a relationship between two categorical variables. As with other hypothesis tests, it is necessary to state a null and alternative hypothesis.</p>
<h5 id="5-3-5_One-Way_Analysis_of_Variance">5.3.5 One-Way Analysis of Variance</h5>
<p>[^1]:Glenn J. Myatt. “Making Sense of Data: A Practical Guide to Exploratory Data Analysis and Data Mining”.</p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="3_Data_Preparation">3 Data Preparation</h3>
<p>Preparing the data is one of the most time-consuming parts of any data analysis/data mining project. </p>
<h4 id="3-1_DATA_SOURCES">3.1 DATA SOURCES</h4>
<ol>
<li>Surveys or polls</li>
<li>Experiments</li>
<li>Observational and other studies</li>
<li>Operational databases(CRM etc)</li>
<li>Data warehouses</li>
<li>Historical databases</li>
<li>Purchased data</li>
</ol>
<h4 id="3-2_DATA_UNDERSTANDING">3.2 DATA UNDERSTANDING</h4>
<ol>
<li>Data Tables</li>
<li>Continuous and Discrete Variables</li>
<li>Scales of Measurement(Nominal/Ordinal/IntervalRatio)</li>
<li>Roles in Analysis(Labels/Descriptors/Response)</li>
<li>Frequency Distribution</li>
</ol>
<h4 id="3-3_DATA_PREPARATION">3.3 DATA PREPARATION</h4>
<ol>
<li>Normalization<ul>
<li><strong><em>Min-max</em></strong>: $$\acute{value} = \frac{Value - OriginalMin}{OriginalMax - OriginalMin}*(NewMax - NewMin) + NewMin$$</li>
<li><strong><em>z-score</em></strong>: $$\acute{value} = \frac{Value - \bar{x}}{s}$$</li>
<li><strong><em>Decimal scaling</em></strong>: $$\acute{value} = \frac{Value}{10^n}$$</li>
</ul>
</li>
</ol>
]]></summary>
    
      <category term="books" scheme="http://buttonwood.bitbucket.org/tags/books/"/>
    
      <category term="Data Mining" scheme="http://buttonwood.bitbucket.org/categories/Data-Mining/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Circos for Comparative genomics]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/05/17/circos/"/>
    <id>http://buttonwood.bitbucket.org/2014/05/17/circos/</id>
    <published>2014-05-17T00:00:00.000Z</published>
    <updated>2014-06-23T08:38:27.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Synteny_and_Comparative_genomics">Synteny and Comparative genomics</h3>
<p>Welcome to see details in my <a href="https://github.com/Buttonwood/Bioinformatics/issues/4" target="_blank" rel="external">github issues</a>.</p>
<p>First, use <a href="http://www.bx.psu.edu/miller_lab/dist/README.lastz-1.02.00/README.lastz-1.02.00a.html" target="_blank" rel="external">Lastz</a> for synteny block alignment.</p>
<p>Then use SVG for synteny block drawing.<br><img src="https://dl.dropboxusercontent.com/u/78977353/hexo-git/cg/line.png" alt="line"></p>
<p>And we found <a href="http://circos.ca/" target="_blank" rel="external">Circos</a> more powerful on handing this.</p>
<p><img src="https://dl.dropboxusercontent.com/u/78977353/hexo-git/cg/circos.png" alt="circos"></p>
<p>说明,本文以下内容多数来自网络资源转载,像原作者致意,感谢他们的原创工作!如想详细了解，请点击衔接，接入原文！</p>
<a id="more"></a>

<h3 id="Circos_Installation">Circos Installation</h3>
<p>For OSX: you can refer to this <a href="http://kylase.github.io/CircosAPI/os-x-installation-guide/" target="_blank" rel="external">os-x-installation-guide</a> and <a href="http://pgfe.umassmed.edu/ou/archives/2513" target="_blank" rel="external">this</a>.</p>
<h3 id="Read_this_first">Read this first</h3>
<p><a href="http://pgfe.umassmed.edu/ou/archives/2513" target="_blank" rel="external">Circos系列教程一安装</a></p>
<p><a href="http://pgfe.umassmed.edu/ou/archives/2519" target="_blank" rel="external">Circos系列教程二染色体示意图ideograms</a></p>
<p><a href="http://pgfe.umassmed.edu/ou/archives/2554" target="_blank" rel="external">Circos系列教程三突出标记Highlight</a></p>
<p><a href="http://pgfe.umassmed.edu/ou/archives/2579" target="_blank" rel="external">Circos系列教程四连线links</a></p>
<h3 id="Tutorial">Tutorial</h3>
<p><a href="http://blog.csdn.net/skenoy/article/details/8696402" target="_blank" rel="external"> CIRCOS教程翻译 1.1——helloworld</a><br><img src="http://img.my.csdn.net/uploads/201303/20/1363765909_2834.png" alt="1.1"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8697823" target="_blank" rel="external">CIRCOS教程翻译 1.2——ticks</a><br><img src="http://img.my.csdn.net/uploads/201303/20/1363778829_5544.png" alt="1.2"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8716127" target="_blank" rel="external">CIRCOS教程翻译 1.3 ——染色体的变化</a><br><img src="http://img.my.csdn.net/uploads/201303/25/1364182311_2969.png" alt="1.3"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8716632" target="_blank" rel="external">CIRCOS教程翻译 1.4——links和rules</a><br><img src="http://img.my.csdn.net/uploads/201303/25/1364190625_3670.png" alt="1.4"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8718080" target="_blank" rel="external">CIRCOS教程翻译 1.5——histogram</a><br><img src="http://img.my.csdn.net/uploads/201303/25/1364208353_2999.png" alt="1.5"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8721500" target="_blank" rel="external">CIRCOS教程翻译 1.6——axe和background</a><br><img src="http://img.my.csdn.net/uploads/201303/26/1364278082_6035.png" alt="1.6"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8721999" target="_blank" rel="external">CIRCOS教程翻译 1.7——heatmap</a><br><img src="http://img.my.csdn.net/uploads/201303/26/1364282490_8992.png" alt="heatmap"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8722846" target="_blank" rel="external">CIRCOS教程翻译 1.8——label</a><br><img src="http://img.my.csdn.net/uploads/201303/26/1364290569_5627.png" alt="lable"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8725383" target="_blank" rel="external">CIRCOS教程翻译 2.1——ideogram</a><br><img src="http://img.my.csdn.net/uploads/201303/27/1364353741_2058.png" alt="ideogram"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8726219" target="_blank" rel="external">CIRCOS教程翻译 2.2——karyotype</a><br><img src="http://img.my.csdn.net/uploads/201303/27/1364371714_9661.png" alt="karyotype"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8727242" target="_blank" rel="external">CIRCOS教程翻译 2.3——filtering</a><br><img src="http://img.my.csdn.net/uploads/201303/27/1364374222_1392.png" alt="filtering"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8727588" target="_blank" rel="external">CIRCOS教程翻译 2.4——order</a><br><img src="http://img.my.csdn.net/uploads/201303/27/1364378620_7933.png" alt="order"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8745606" target="_blank" rel="external">CIRCOS教程翻译 2.5——breaks</a><br><img src="http://img.my.csdn.net/uploads/201304/01/1364786151_5213.png" alt="breakd"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8745736" target="_blank" rel="external">CIRCOS教程翻译 2.6——spacing</a><br><img src="http://img.my.csdn.net/uploads/201304/01/1364793015_5671.png" alt="spacing"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8749921" target="_blank" rel="external">CIRCOS教程翻译 2.7——tags</a><br><img src="http://img.my.csdn.net/uploads/201304/02/1364869474_1651.png" alt="tags"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8766021" target="_blank" rel="external">CIRCOS教程翻译 2.8——variable radius</a><br><img src="http://img.my.csdn.net/uploads/201304/07/1365297720_4423.png" alt="radius"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8766073" target="_blank" rel="external">CIRCOS教程翻译 2.9——label</a><br><img src="http://img.my.csdn.net/uploads/201304/07/1365299709_2161.png" alt="lable"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8766304" target="_blank" rel="external">CIRCOS教程翻译 2.10——anlge offset and orientation</a><br><img src="http://img.my.csdn.net/uploads/201304/07/1365302129_4867.png" alt="anlge offset and orientation"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8809736" target="_blank" rel="external">CIRCOS教程翻译 3.1——Wedge Highlights</a><br><img src="http://img.my.csdn.net/uploads/201304/16/1366103090_4905.png" alt="Highlights"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8814239" target="_blank" rel="external">CIRCOS教程翻译 3.2——Embedded in Data File</a><br><img src="http://img.my.csdn.net/uploads/201304/17/1366184166_3701.png" alt="Embedded in Data File"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8814598" target="_blank" rel="external">CIRCOS教程翻译 3.3——Using z-depth</a><br><img src="http://img.my.csdn.net/uploads/201304/17/1366188837_8179.png" alt="3.3"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8817953" target="_blank" rel="external">CIRCOS教程翻译 3.4——Radial Position</a><br><img src="http://img.my.csdn.net/uploads/201304/18/1366255057_7310.png" alt="3.4"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8818012" target="_blank" rel="external">CIRCOS教程翻译 3.5——Ideogram Highlights</a><br><img src="http://img.my.csdn.net/uploads/201304/18/1366255833_2779.png" alt="3.5"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8818144" target="_blank" rel="external">CIRCOS教程翻译 3.6——Ideogram Highlights</a><br><img src="http://img.my.csdn.net/uploads/201304/18/1366256880_8552.png" alt="3.6"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8866668" target="_blank" rel="external">CIRCOS教程翻译 3.7——Focusing on a genome region</a><br><img src="http://img.blog.csdn.net/20130429130303104" alt="3.7"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8866693" target="_blank" rel="external">CIRCOS教程翻译 3.8——Plot axis range highlights</a><br><img src="http://img.blog.csdn.net/20130429130958655" alt="3.8"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8866704" target="_blank" rel="external"> CIRCOS教程翻译 3.9——Drawing on top of data</a><br><img src="http://img.blog.csdn.net/20130429131928996" alt="3.9"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8889203" target="_blank" rel="external">CIRCOS教程翻译 4.1——Tick Marks, Grids and Labels</a><br><img src="http://img.blog.csdn.net/20130506111201824" alt="Tick Marks, Grids and Labels"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8890632" target="_blank" rel="external">CIRCOS教程翻译 4.2——Margins</a><br><img src="http://img.blog.csdn.net/20130506151746742" alt="Margins"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8890935" target="_blank" rel="external">CIRCOS教程翻译 4.3——Label Margins</a><br><img src="http://img.blog.csdn.net/20130506155946352" alt="Label Margins"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8891032" target="_blank" rel="external">CIRCOS教程翻译 4.5——Grids</a><br><img src="http://img.blog.csdn.net/20130506161104658" alt="Grids"></p>
<p><a href="http://img.blog.csdn.net/20130507110428083" target="_blank" rel="external">CIRCOS教程翻译 4.6——Label format</a><br><img src="http://img.blog.csdn.net/20130507110428083" alt="Label format"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8895680" target="_blank" rel="external">CIRCOS教程翻译 4.7——Relative Ticks</a><br><img src="http://img.blog.csdn.net/20130507161241391" alt="4.7--Relative"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8895813" target="_blank" rel="external">CIRCOS教程翻译 4.8——Single tick</a><br><img src="http://img.blog.csdn.net/20130507162436576" alt="4.8--Single tick"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8895940" target="_blank" rel="external">CIRCOS教程翻译 4.9——Rings</a><br><img src="http://img.blog.csdn.net/20130507165405517" alt="4.9--Rings"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8920484" target="_blank" rel="external">CIRCOS教程翻译 5.1——Drawing Basic Links</a><br><img src="http://img.blog.csdn.net/20130513142328276" alt="5.1——Drawing Basic Links"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8920558" target="_blank" rel="external">CIRCOS教程翻译 5.2——Geometry</a><br><img src="http://img.blog.csdn.net/20130513144524239" alt="5.2--Geometry"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8920645" target="_blank" rel="external">CIRCOS教程翻译 5.3——Formatting</a><br><img src="http://img.blog.csdn.net/20130513145041778" alt="5.3--Formatting"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8921256" target="_blank" rel="external">CIRCOS教程翻译 5.4——Rule</a><br><img src="http://img.blog.csdn.net/20130513163736098" alt="5.4--Rule"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8921378" target="_blank" rel="external">CIRCOS教程翻译 5.5——Rule</a><br><img src="http://img.blog.csdn.net/20130513164853106" alt="5.5--Rule"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8921455" target="_blank" rel="external">CIRCOS教程翻译 5.6——Rule</a><br><img src="http://img.blog.csdn.net/20130513165454969" alt="5.5——Rule"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8921506" target="_blank" rel="external">CIRCOS教程翻译 5.7——Rule</a><br><img src="http://img.blog.csdn.net/20130513170004939" alt="Rule"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8924948" target="_blank" rel="external">CIRCOS教程翻译 5.7——Rule</a><br><img src="http://img.blog.csdn.net/20130514124703683" alt="5.7——Rule"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8930582" target="_blank" rel="external">CIRCOS教程翻译 5.9——Ribbons</a><br><img src="http://img.blog.csdn.net/20130515153119236" alt="Ribbons"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8930798" target="_blank" rel="external">CIRCOS教程翻译 5.10——Ribbon Twists</a><br><img src="http://img.blog.csdn.net/20130515154308118" alt="Ribbon Twists"></p>
<h3 id="Cases:">Cases:</h3>
<p><a href="http://blog.csdn.net/skenoy/article/details/18614673" target="_blank" rel="external">circos输入数据文件格式化——depth，GC，geneskew</a><br><img src="http://img.blog.csdn.net/20140121161948796?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2tlbm95/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="DP-GC-SK"></p>
<p><a href="http://blog.csdn.net/skenoy/article/details/8930854" target="_blank" rel="external">circos数据前5章小示</a><br><img src="http://img.blog.csdn.net/20130515155225157" alt="examples"></p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="Synteny_and_Comparative_genomics">Synteny and Comparative genomics</h3>
<p>Welcome to see details in my <a href="https://github.com/Buttonwood/Bioinformatics/issues/4" target="_blank" rel="external">github issues</a>.</p>
<p>First, use <a href="http://www.bx.psu.edu/miller_lab/dist/README.lastz-1.02.00/README.lastz-1.02.00a.html" target="_blank" rel="external">Lastz</a> for synteny block alignment.</p>
<p>Then use SVG for synteny block drawing.<br><img src="https://dl.dropboxusercontent.com/u/78977353/hexo-git/cg/line.png" alt="line"></p>
<p>And we found <a href="http://circos.ca/" target="_blank" rel="external">Circos</a> more powerful on handing this.</p>
<p><img src="https://dl.dropboxusercontent.com/u/78977353/hexo-git/cg/circos.png" alt="circos"></p>
<p>说明,本文以下内容多数来自网络资源转载,像原作者致意,感谢他们的原创工作!如想详细了解，请点击衔接，接入原文！</p>
]]></summary>
    
      <category term="Circos" scheme="http://buttonwood.bitbucket.org/tags/Circos/"/>
    
      <category term="Data Visualization" scheme="http://buttonwood.bitbucket.org/categories/Data-Visualization/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Designing Data Visualizations]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/05/14/designing-data-visualizations/"/>
    <id>http://buttonwood.bitbucket.org/2014/05/14/designing-data-visualizations/</id>
    <published>2014-05-14T13:08:44.000Z</published>
    <updated>2014-06-23T08:38:27.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Data_Visualization">Data Visualization</h3>
<p>The terms data visualization and information visualization (casually, data viz and infoviz) are useful for referring to any visual representation of data that is:</p>
<ul>
<li>algorithmically drawn (may have custom touches but is largely rendered with the help of computerized methods);</li>
<li>easy to regenerate with different data (the same form may be repurposed to rep-resent different datasets with similar dimensions or characteristics);</li>
<li>often aesthetically barren (data is not decorated); and</li>
<li>relatively data-rich (large volumes of data are welcome and viable, in contrast to infographics).</li>
</ul>
<h4 id="Encoding_for_your_data_type">Encoding for your data type</h4>
<a id="more"></a>

<p><img src="https://dl.dropboxusercontent.com/u/78977353/bitbucket/image/dm/encode.png" alt="Figure 4-3"></p>
<h4 id="Visual_properties_grouped_by_the_types_of_data_they_can_be_used_to_encode-">Visual properties grouped by the types of data they can be used to encode.</h4>
<p><img src="https://dl.dropboxusercontent.com/u/78977353/bitbucket/image/dm/group.png" alt="Figure 4-4"></p>
<h4 id="Periodic_Table_of_Elements">Periodic Table of Elements</h4>
<p><img src="https://dl.dropboxusercontent.com/u/78977353/bitbucket/image/dm/table-ele.png" alt="Figure 4-10"></p>
<h4 id="Healthcare_plan">Healthcare plan</h4>
<p><img src="https://dl.dropboxusercontent.com/u/78977353/bitbucket/image/dm/pubhealth.png" alt="Figure 4-15"></p>
<p><a href="http://rp-network.com/blogstuff/healthcare.pdf" target="_blank" rel="external">healthcare</a></p>
<h4 id="Quantitative_and_comparative_formats">Quantitative and comparative formats</h4>
<ul>
<li>Bar graphs</li>
<li>Histograms</li>
<li>Line graphs</li>
<li>Time series</li>
<li>Pie graphs</li>
<li>Scatter plots</li>
<li>Tables</li>
<li>Periodic tables</li>
<li>Treemaps</li>
<li>Heatmaps</li>
<li>Small multiples</li>
<li>Marimekko (also known as matrix or mosaic) graphs</li>
</ul>
<h4 id="Relational_formats">Relational formats</h4>
<ul>
<li>Data flow diagrams, Entity Relationship Diagrams, etc.</li>
<li>Decision maps and flow charts</li>
<li>Social network graphs</li>
</ul>
<h4 id="Spatial_formats">Spatial formats</h4>
<ul>
<li>Geographic map</li>
<li>Non-geographic map</li>
</ul>
<h3 id="Apply_Your_Encodings_Well">Apply Your Encodings Well</h3>
<ul>
<li>Color<br>The recommended set of 12 colors is shown in below table. It is preferred to use colors from the first half of the list before moving on to the second half.</li>
</ul>
<table>
<thead>
<tr>
<th>ID</th>
<th>Colors</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>red</td>
</tr>
<tr>
<td>2</td>
<td>green</td>
</tr>
<tr>
<td>3</td>
<td>yellow</td>
</tr>
<tr>
<td>4</td>
<td>blue</td>
</tr>
<tr>
<td>5</td>
<td>black</td>
</tr>
<tr>
<td>6</td>
<td>white</td>
</tr>
<tr>
<td>7</td>
<td>pink</td>
</tr>
<tr>
<td>8</td>
<td>cyan</td>
</tr>
<tr>
<td>9</td>
<td>gray</td>
</tr>
<tr>
<td>10</td>
<td>orange</td>
</tr>
<tr>
<td>11</td>
<td>brown</td>
</tr>
<tr>
<td>12</td>
<td>purple</td>
</tr>
</tbody>
</table>
<ul>
<li>Size</li>
<li>Text and Typography</li>
<li>Fonts and Hierarchies<br><code>Serif</code> fonts (fonts with ornamental shapes at the ends of letters, such as <code>Times</code>, <code>Cambria</code>, or <code>Garamond</code>) are better for setting blocks of text, while <code>sans serif</code> fonts (fonts with clean line endings, such as <code>Helvetica</code>, <code>Arial</code>, or <code>Verdana</code>) are better for titles, tags, and labels. Stay away from gothic fonts, fantasy fonts, and script fonts(such as <code>Comic Sans</code>,<a href="http://www.douban.com/note/259659900/" target="_blank" rel="external">see this</a>).<br>BTW, <a href="http://zhan.renren.com/vincenthawk?gid=3674946092074515426&amp;checked=true" target="_blank" rel="external">Tips on fonts</a>.</li>
<li>Shape</li>
<li>Icons</li>
<li>Lines</li>
<li>Weight</li>
<li>Endings</li>
<li>Pattern</li>
<li>Path</li>
<li>Taper</li>
</ul>
<h3 id="References">References</h3>
<p><a href="http://complexdiagrams.com/2011/09/new-book-designing-data-visualizations/" target="_blank" rel="external">Designing Data Visualizations</a></p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="Data_Visualization">Data Visualization</h3>
<p>The terms data visualization and information visualization (casually, data viz and infoviz) are useful for referring to any visual representation of data that is:</p>
<ul>
<li>algorithmically drawn (may have custom touches but is largely rendered with the help of computerized methods);</li>
<li>easy to regenerate with different data (the same form may be repurposed to rep-resent different datasets with similar dimensions or characteristics);</li>
<li>often aesthetically barren (data is not decorated); and</li>
<li>relatively data-rich (large volumes of data are welcome and viable, in contrast to infographics).</li>
</ul>
<h4 id="Encoding_for_your_data_type">Encoding for your data type</h4>
]]></summary>
    
      <category term="DV" scheme="http://buttonwood.bitbucket.org/tags/DV/"/>
    
      <category term="Data Visualization" scheme="http://buttonwood.bitbucket.org/categories/Data-Visualization/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Short Introduction to Machine learning]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/05/12/20140424-ml-0/"/>
    <id>http://buttonwood.bitbucket.org/2014/05/12/20140424-ml-0/</id>
    <published>2014-05-12T03:51:00.000Z</published>
    <updated>2014-06-23T08:38:27.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Learning">Learning</h3>
<p>When come to learning, what do we talk about it?</p>
<p>For machines, they are learning from data, since data is what they have.<br>For our human beings, especially  behavioural  terms, we are talking about learning from experience.</p>
<p><strong><em>Machine Learning</em></strong>, is about computers modify or adapt their actions(whether these actions are making predictions or controlling a robot), so that these actions get more accurate, where accuracy is measured by how well the chosen actions reflect the correct ones.</p>
<h3 id="Types_of_Machine_Learning">Types of Machine Learning</h3>
<ol>
<li>Supervised learning.<br>A training set of examples with the correct responses (targets) are provided and, based on this training set, the algorithm <strong><em>generalizes</em></strong> to respond correctly to all possible inputs. This is called learning from examples. </li>
<li>Unsupervised learning.<br>Correct responses (targets) are not provided, instead the algorithm tries to identify similarities between the inputs so that inputs that have something in common are <strong><em>categorized</em></strong> together. The statistical approach to unsupervised learning is known as density estimation.</li>
<li>Reinforcement learning.<br>Somewhere between supervised learning and unsupervised learning. The algorithm gets told when the answer is wrong but does not get told how to correct it. It has to explore and try different possibilities until it works out how to get the answer right. It ‘s sometime called learning withe a <strong><em>critic</em></strong> because of this monitor that scores the answer, but does not suggest improvements.</li>
<li>Evolutionary learning.<br>Biological evolution can be seen as a learning process: biological organisms adapt to improve their survival rates and chances of having offspring in their environment. We’ll look at how we can model this in a computer by using an idea of <strong><em>fitness</em></strong>, which corresponds to a score for how good the current solutions is.</li>
</ol>
<p>By the way, from <strong>ISL</strong>(An Introduction to Statistical Learning) by Trevor Hastie and Robert Tibshirani:</p>
<blockquote>
<p><strong><em>Supervised statistical learning</em></strong> involves building a statistical model for predicting, or estimating, an output based on one or more inputs.<br>With <strong><em>unsupervised statistical learning</em></strong>, there are inputs but no supervising output; nevertheless we can learn relationships and structure from such data.     </p>
</blockquote>
<p>The most common type of learning is supervised learning.</p>
<h3 id="Supervised"><strong><em>Supervised</em></strong></h3>
<p>We wish to fit a model that relates the response to the predictors, with the aim of accurately predicting the response for future observations (prediction) or better understanding the relationship between the response and the predictors (inference).         </p>
<ol>
<li>Regression</li>
<li>Classification</li>
<li>GAM</li>
<li>boosting</li>
<li>support vector machines</li>
</ol>
<h3 id="Unsupervised"><strong><em>Unsupervised</em></strong></h3>
<p>There is no response variable to predict, we observe a vector of measurements $x_i$ but no associated response $y_i$.  </p>
<ol>
<li>clustering</li>
<li></li>
</ol>
<p>Reference:<br><a href="https://en.wikipedia.org/wiki/Book:Machine_Learning_-_The_Complete_Guide" target="_blank" rel="external">[1]: Machine Learning: The Complete Guide</a></p>
]]></content>
    
    
      <category term="ML" scheme="http://buttonwood.bitbucket.org/tags/ML/"/>
    
      <category term="Data Mining" scheme="http://buttonwood.bitbucket.org/categories/Data-Mining/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Machine learning: an algorithmic perspective(2009)]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/05/12/machine_learning_an_algorithmic_perspective(2009)/"/>
    <id>http://buttonwood.bitbucket.org/2014/05/12/machine_learning_an_algorithmic_perspective(2009)/</id>
    <published>2014-05-12T03:51:00.000Z</published>
    <updated>2014-06-23T08:38:27.000Z</updated>
    <content type="html"><![CDATA[<h3 id="The_Multi-Layer_Perceptron(MLP)">The Multi-Layer Perceptron(MLP)</h3>
<p>Training the MLP consists of two parts:     </p>
<ol>
<li>working out what the outputs are for the given inputs and the current weights;</li>
<li>and then updating the weights according to the <strong><em>error</em></strong>, which is a function of the difference between the outputs and the targets.</li>
</ol>
<p>These are generally known as going <strong>forwards</strong> and <strong>backwards</strong> through network.</p>
<h3 id="Going_Backwards：Back-Propagation_of_Error">Going Backwards：Back-Propagation of Error</h3>
<p>Which makes it clear that the errors are sent  backwards through the network.  It is a form of <strong>gradient descent(梯度下降法)</strong>.</p>
]]></content>
    
    
      <category term="ML" scheme="http://buttonwood.bitbucket.org/tags/ML/"/>
    
      <category term="Data Mining" scheme="http://buttonwood.bitbucket.org/categories/Data-Mining/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python中4个强大的内置函数]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/05/11/20140511-python-tips-map/"/>
    <id>http://buttonwood.bitbucket.org/2014/05/11/20140511-python-tips-map/</id>
    <published>2014-05-11T00:00:00.000Z</published>
    <updated>2014-06-23T08:38:27.000Z</updated>
    <content type="html"><![CDATA[<h3 id="python_四大利器">python 四大利器</h3>
<p><code>filter()</code> and <code>map()</code> and <code>reduce()</code> and <code>lambda()</code></p>
<h3 id="filter(function,_iterable)¶"><code>filter(function, iterable)¶</code></h3>
<p><code>filter(function, iterable)</code> is equivalent to <code>[item for item in iterable if function(item)]</code> if function is not <code>None</code> and <code>[item for item in iterable if item]</code> if function is <code>None</code>.</p>
<p>see <a href="https://docs.python.org/2/library/functions.html?highlight=filter#filter" target="_blank" rel="external">https://docs.python.org/2/library/functions.html?highlight=filter#filter</a></p>
<p>对迭代器中<code>function(iter)</code>为<code>True</code>的组成一个新的迭代器(<code>list/string/tuple</code>等，取决于迭代器的类型)。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="prompt">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> x % <span class="number">2</span> != <span class="number">0</span> <span class="keyword">and</span> x % <span class="number">3</span> !=<span class="number">0</span>
<span class="prompt">&gt;&gt;&gt; </span>filter(f,xrange(<span class="number">1</span>,<span class="number">100</span>)) 
[<span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">35</span>, <span class="number">37</span>, <span class="number">41</span>, <span class="number">43</span>, <span class="number">47</span>, <span class="number">49</span>, <span class="number">53</span>, <span class="number">55</span>, <span class="number">59</span>, <span class="number">61</span>, <span class="number">65</span>, <span class="number">67</span>, <span class="number">71</span>, <span class="number">73</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">83</span>, <span class="number">85</span>, <span class="number">89</span>, <span class="number">91</span>, <span class="number">95</span>, <span class="number">97</span>]
<span class="comment"># or</span>
<span class="prompt">&gt;&gt;&gt; </span>filter(<span class="keyword">lambda</span> x: x % <span class="number">2</span> != <span class="number">0</span> <span class="keyword">and</span> x % <span class="number">3</span> !=<span class="number">0</span>, xrange(<span class="number">1</span>,<span class="number">100</span>))
[<span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">35</span>, <span class="number">37</span>, <span class="number">41</span>, <span class="number">43</span>, <span class="number">47</span>, <span class="number">49</span>, <span class="number">53</span>, <span class="number">55</span>, <span class="number">59</span>, <span class="number">61</span>, <span class="number">65</span>, <span class="number">67</span>, <span class="number">71</span>, <span class="number">73</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">83</span>, <span class="number">85</span>, <span class="number">89</span>, <span class="number">91</span>, <span class="number">95</span>, <span class="number">97</span>]
<span class="comment"># or</span>
<span class="prompt">&gt;&gt;&gt; </span>[ x <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">100</span>) <span class="keyword">if</span> x % <span class="number">2</span> != <span class="number">0</span> <span class="keyword">and</span> x % <span class="number">3</span> !=<span class="number">0</span>]
[<span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">35</span>, <span class="number">37</span>, <span class="number">41</span>, <span class="number">43</span>, <span class="number">47</span>, <span class="number">49</span>, <span class="number">53</span>, <span class="number">55</span>, <span class="number">59</span>, <span class="number">61</span>, <span class="number">65</span>, <span class="number">67</span>, <span class="number">71</span>, <span class="number">73</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">83</span>, <span class="number">85</span>, <span class="number">89</span>, <span class="number">91</span>, <span class="number">95</span>, <span class="number">97</span>]
</pre></td></tr></table></figure>

<h3 id="map(function,_iterable,_-)¶"><code>map(function, iterable, ...)¶</code></h3>
<p>Apply function to every item of iterable and return a list of the results.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="prompt">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">cube</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> x*x*x 
<span class="prompt">&gt;&gt;&gt; </span>map(cube, xrange(<span class="number">0</span>, <span class="number">10</span>))
[<span class="number">0</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">27</span>, <span class="number">64</span>, <span class="number">125</span>, <span class="number">216</span>, <span class="number">343</span>, <span class="number">512</span>, <span class="number">729</span>]
<span class="comment"># or</span>
<span class="prompt">&gt;&gt;&gt; </span>map(<span class="keyword">lambda</span> x: x*x*x, xrange(<span class="number">0</span>, <span class="number">10</span>))
<span class="comment"># or</span>
<span class="prompt">&gt;&gt;&gt; </span>[x*x*x <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">0</span>, <span class="number">10</span>)]
<span class="comment"># for multiple iterable</span>
<span class="prompt">&gt;&gt;&gt; </span>map(<span class="keyword">lambda</span> x,y: x+ y, xrange(<span class="number">0</span>, <span class="number">10</span>), xrange(<span class="number">10</span>, <span class="number">20</span>))
[<span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">24</span>, <span class="number">26</span>, <span class="number">28</span>]
</pre></td></tr></table></figure>

<h3 id="reduce(function,_iterable[,_initializer])¶"><code>reduce(function, iterable[, initializer])¶</code></h3>
<p>Apply function of two arguments cumulatively to the items of iterable, from left to right, so as to reduce the iterable to a single value.<br>For example, <code>reduce(lambda x, y: x+y, [1,2, 3, 4, 5])</code> calculates <code>((((1+2)+3)+4)+5)</code>. </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="prompt">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span> <span class="keyword">return</span> x + y
<span class="prompt">&gt;&gt;&gt; </span>reduce(add, xrange(<span class="number">1</span>, <span class="number">11</span>))
<span class="number">55</span>
<span class="prompt">&gt;&gt;&gt; </span>reduce(add, xrange(<span class="number">1</span>, <span class="number">11</span>),<span class="number">20</span>)
<span class="number">75</span>
</pre></td></tr></table></figure>

<h3 id="lambda¶"><code>lambda¶</code></h3>
<p><code>lambda</code>是Python中一种非常有趣的语法，它允许你快速定义单行的最小函数，类似与C语言中的宏，这些叫做<code>lambda</code>的函数，是从<code>LISP</code>借用来的，可以用在任何需要函数的地方,函数式编程的典范。<br>其实上面已经不自觉地在使用了，懒人必备。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="prompt">&gt;&gt;&gt; </span>g = <span class="keyword">lambda</span> x: x*x*x
<span class="prompt">&gt;&gt;&gt; </span>g(<span class="number">3</span>)
<span class="number">27</span>
<span class="prompt">&gt;&gt;&gt; </span>(<span class="keyword">lambda</span> x: x*x*x)(<span class="number">3</span>)
</pre></td></tr></table></figure>

<h3 id="综合运用¶"><code>综合运用¶</code></h3>
<p>我们也可以把<code>filter</code> <code>map</code> <code>reduce</code> <code>lambda</code>结合起来用，函数就可以简单的写成一行。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="prompt">&gt;&gt;&gt; </span>filter(<span class="keyword">lambda</span> x: x % <span class="number">3</span> != <span class="number">0</span> <span class="keyword">and</span> x % <span class="number">4</span> !=<span class="number">0</span>, map(<span class="keyword">lambda</span> x,y: x+ y, xrange(<span class="number">0</span>, <span class="number">100</span>), xrange(<span class="number">100</span>, <span class="number">200</span>)))
[<span class="number">106</span>, <span class="number">110</span>, <span class="number">118</span>, <span class="number">122</span>, <span class="number">130</span>, <span class="number">134</span>, <span class="number">142</span>, <span class="number">146</span>, <span class="number">154</span>, <span class="number">158</span>, <span class="number">166</span>, <span class="number">170</span>, <span class="number">178</span>, <span class="number">182</span>, <span class="number">190</span>, <span class="number">194</span>, <span class="number">202</span>, <span class="number">206</span>, <span class="number">214</span>, <span class="number">218</span>, <span class="number">226</span>, <span class="number">230</span>, <span class="number">238</span>, <span class="number">242</span>, <span class="number">250</span>, <span class="number">254</span>, <span class="number">262</span>, <span class="number">266</span>, <span class="number">274</span>, <span class="number">278</span>, <span class="number">286</span>, <span class="number">290</span>, <span class="number">298</span>]
<span class="comment"># 再求和试试</span>
<span class="prompt">&gt;&gt;&gt; </span>reduce(<span class="keyword">lambda</span> a,b:a+b, filter(<span class="keyword">lambda</span> x: x % <span class="number">3</span> != <span class="number">0</span> <span class="keyword">and</span> x % <span class="number">4</span> !=<span class="number">0</span>, map(<span class="keyword">lambda</span> x,y: x+ y, xrange(<span class="number">0</span>, <span class="number">100</span>), xrange(<span class="number">100</span>,<span class="number">200</span>))))
<span class="number">6634</span>
</pre></td></tr></table></figure>
]]></content>
    
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/tags/Python/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[About Me]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/05/03/about/"/>
    <id>http://buttonwood.bitbucket.org/2014/05/03/about/</id>
    <published>2014-05-03T07:08:44.000Z</published>
    <updated>2014-06-23T08:38:27.000Z</updated>
    <content type="html"><![CDATA[<h3 id="About_Me_!">About Me !</h3>
<p>I’m a bioinformatic engineer and amateur programmer, and here is a short introduction about me and this blog, thanks for your reading!</p>
<p>I’m engaged in <strong>genomics research</strong>, including <strong><em>genome assembly/annotation/evolution</em></strong> and <strong><em>comparative genomics</em></strong>.</p>
<p>As a mathematics graduate, I’m also interested in interdisciplinary work, specifically <strong>data mining</strong> and <strong>visualization</strong>. And I hope we can exchange our ideas and experiences about  <strong>Data Mining</strong> through this blog.</p>
<p>I mostly work in <strong>python/perl/R</strong> on OSX and Linux for most of my work,  I also dabble in <strong>C/C++/Shell</strong>. And I am trying to learn <a href="http://d3js.org/" target="_blank" rel="external">D3.js</a> and <a href="http://www.processing.org/" target="_blank" rel="external">processing</a> for my hobby of <strong>Data Visualization</strong> now.</p>
<p>Thanks for following me: <a href="http://buttonwood.github.io" target="_blank" rel="external">@Github</a> and <a href="http://weibo.com/buttonwood" target="_blank" rel="external">@Weibo</a>.</p>
<p>I’m living in Wuhan, a city near the Yangtze River in China. It’s beautiful besides it’s bad weather(long hot summer and cold winter), I spent my college life there and I love my friends there forever.</p>
<p>Besides programming, I exercise and read books regularly. To be a stronger and better version of myself!</p>
<h3 id="About_this_blog_!">About this blog !</h3>
<p>This blog is proudly powered by <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>, which takes great advantage of <a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a>.</p>

<p>And it is only for my scattered ideas of reading and programming, there are no business attempts.</p>
<p>Any suggestions about this blog and topics talked there are welcome.</p>
<p>Like the TED said: <strong><em>Ideas are worth spreading and sharing!</em></strong> Many THX!</p>
<h3 id="Time_axis_!">Time axis !</h3>
<table>
<thead>
<tr>
<th>Time</th>
<th>Department/Works</th>
<th>Company/University</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong><em>2012-Now</em></strong></td>
<td>You Guess！</td>
<td>You Guess！</td>
</tr>
<tr>
<td><strong><em>2010-2012</em></strong></td>
<td>Bioinformatics Engineer/Analyst</td>
<td><strong><em><a href="http://www.genomics.cn/index" target="_blank" rel="external">BGI</a></em></strong></td>
</tr>
<tr>
<td><strong><em>2006-2010</em></strong></td>
<td>Student in College of Mathematics And Statistics</td>
<td><strong><em><a href="http://maths.hust.edu.cn/new/index.asp" target="_blank" rel="external">HUST</a></em></strong></td>
</tr>
</tbody>
</table>
]]></content>
    
    
  </entry>
  
</feed>
