<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[The Eye of Data (@Buttonwood)]]></title>
  <subtitle><![CDATA[Float like a butterfly! Stand like a buttonwood!]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://buttonwood.bitbucket.org//"/>
  <updated>2016-03-31T13:44:19.183Z</updated>
  <id>http://buttonwood.bitbucket.org//</id>
  
  <author>
    <name><![CDATA[Buttonwood]]></name>
    <email><![CDATA[tanhao2013@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[docker搭建高可用hadoop集群]]></title>
    <link href="http://buttonwood.bitbucket.org/2016/03/31/2016-03-31-hadoop-ha-docker/"/>
    <id>http://buttonwood.bitbucket.org/2016/03/31/2016-03-31-hadoop-ha-docker/</id>
    <published>2016-03-31T13:51:00.000Z</published>
    <updated>2016-03-31T13:43:27.000Z</updated>
    <content type="html"><![CDATA[<p>使用zookeeper和journalnode存储namenode的editlog可确保hadoop的高可用,避免单点故障!</p>
<p>以下是我近期用docker实验的过程, 很大程度上参见了 <a href="https://github.com/jurmous/hadoop-ha-docker" target="_blank" rel="external">hadoop-ha-docker</a>这个项目, 做了如下修改.</p>
<ul>
<li>更换基础镜像为centOS7</li>
<li>做了ssh免密码登录,方便集群间访问和管理</li>
<li>去掉了自动化(该自动化并不总是正常运行),初次手工启动很重要,便于观察和调试</li>
<li>由于基础环境docker 1.10及swarm集群,overlay网络可免掉dns</li>
<li>做了详细启动记录</li>
</ul>
<h3 id="1-_创建镜像及容器">1. 创建镜像及容器</h3>
<h4 id="1-1_镜像">1.1 镜像</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>docker build -t registry<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span>:<span class="number">5000</span>/peony/hadoop .
docker <span class="keyword">push</span> registry<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span>:<span class="number">5000</span>/peony/hadoop .
</pre></td></tr></table></figure>

<h4 id="1-2_容器">1.2 容器</h4>
<p>结合<a href="http://buttonwood.github.io/2016/03/15/2016-03-15-zookeeper-and-docker/" target="_blank" rel="external">zookeeper-and-docker</a>创建的5个zookeeper容器,我们这里再创建2个namenode,3个journal和3个datanoe.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="preprocessor"># 2 namenode</span>
sh nn<span class="preprocessor">.sh</span> hadoop-nn1 dc00<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span> <span class="number">192.168</span><span class="number">.4</span><span class="number">.7</span>
sh nn<span class="preprocessor">.sh</span> hadoop-nn2 dc04<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span> <span class="number">192.168</span><span class="number">.4</span><span class="number">.8</span>
<span class="preprocessor"># 3 journal</span>
sh jn<span class="preprocessor">.sh</span> hadoop-jn1 dc00<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span> <span class="number">192.168</span><span class="number">.4</span><span class="number">.9</span>
sh jn<span class="preprocessor">.sh</span> hadoop-jn2 dc04<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span> <span class="number">192.168</span><span class="number">.4</span><span class="number">.10</span>
sh jn<span class="preprocessor">.sh</span> hadoop-jn3 dc05<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span> <span class="number">192.168</span><span class="number">.4</span><span class="number">.11</span>
<span class="preprocessor"># 3 datanoe</span>
sh dn<span class="preprocessor">.sh</span> hadoop-dn1 dc00<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span> <span class="number">192.168</span><span class="number">.4</span><span class="number">.12</span>
sh dn<span class="preprocessor">.sh</span> hadoop-dn2 dc04<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span> <span class="number">192.168</span><span class="number">.4</span><span class="number">.13</span>
sh dn<span class="preprocessor">.sh</span> hadoop-dn3 dc05<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span> <span class="number">192.168</span><span class="number">.4</span><span class="number">.14</span>
</pre></td></tr></table></figure>

<p>注意,为了与生产坏境部署一致，我们这里了固定ip的做法，实际上docker的overlay网络是不需要设定固定ip的，通过容器名可以直接进行服务发<br>现。</p>
<h3 id="2-_启动hadoop集群">2. 启动hadoop集群</h3>
<h4 id="2-1_格式化_ZooKeeper_集群,在任意的_namenode_上都可以执行">2.1 格式化 ZooKeeper 集群,在任意的 namenode 上都可以执行</h4>
<p>宿主机登陆nn1容器</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>sdocker exec <span class="attribute">-it</span> hadoop<span class="attribute">-nn1</span> bash
</pre></td></tr></table></figure>

<p>格式化ZooKeeper</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>$HADOOP_HDFS_HOME/bin/hdfs zkfc -formatZK

<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">27</span> INFO ha<span class="preprocessor">.ActiveStandbyElector</span>: Session connected.
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">27</span> INFO ha<span class="preprocessor">.ActiveStandbyElector</span>: Successfully created /hadoop-ha/cluster <span class="keyword">in</span> ZK.
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">27</span> INFO zookeeper<span class="preprocessor">.ZooKeeper</span>: Session: <span class="number">0x30010fe11d90001</span> closed
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">27</span> INFO zookeeper<span class="preprocessor">.ClientCnxn</span>: EventThread shut down
</pre></td></tr></table></figure>

<h4 id="2-2_启动_journalnode_结点">2.2  启动 journalnode 结点</h4>
<p>宿主机上执行</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>sdocker exec <span class="attribute">-it</span> hadoop<span class="attribute">-jn1</span> /usr/<span class="built_in">local</span>/hadoop/sbin/hadoop<span class="attribute">-daemon</span><span class="built_in">.</span>sh start journalnode
sdocker exec <span class="attribute">-it</span> hadoop<span class="attribute">-jn2</span> /usr/<span class="built_in">local</span>/hadoop/sbin/hadoop<span class="attribute">-daemon</span><span class="built_in">.</span>sh start journalnode
sdocker exec <span class="attribute">-it</span> hadoop<span class="attribute">-jn3</span> /usr/<span class="built_in">local</span>/hadoop/sbin/hadoop<span class="attribute">-daemon</span><span class="built_in">.</span>sh start journalnode
</pre></td></tr></table></figure>

<p>宿主机上登录验证</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>sdocker exec <span class="attribute">-it</span> hadoop<span class="attribute">-jn3</span> bash
</pre></td></tr></table></figure>

<p>容器内查看运行日志</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>tail /usr/local/hadoop/logs/hadoop-root-journalnode-hadoop-jn3<span class="preprocessor">.log</span>
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">15</span>:<span class="number">58</span>,<span class="number">312</span> INFO org<span class="preprocessor">.mortbay</span><span class="preprocessor">.log</span>: Started HttpServer2$SelectChannelConnectorWithSafeStartup<span class="localvars">@0</span><span class="number">.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8480</span>
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">16</span>:<span class="number">08</span>,<span class="number">443</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ipc</span><span class="preprocessor">.CallQueueManager</span>: Using callQueue class java<span class="preprocessor">.util</span><span class="preprocessor">.concurrent</span><span class="preprocessor">.LinkedBlockingQueue</span>
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">16</span>:<span class="number">08</span>,<span class="number">460</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ipc</span><span class="preprocessor">.Server</span>: Starting Socket Reader <span class="preprocessor">#1 for port 8485</span>
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">16</span>:<span class="number">08</span>,<span class="number">495</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ipc</span><span class="preprocessor">.Server</span>: IPC Server Responder: starting
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">16</span>:<span class="number">08</span>,<span class="number">495</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ipc</span><span class="preprocessor">.Server</span>: IPC Server listener on <span class="number">8485</span>: starting
</pre></td></tr></table></figure>

<h4 id="2-3_格式化集群的_NameNode_并启动刚格式化的_NameNode">2.3 格式化集群的 NameNode 并启动刚格式化的 NameNode</h4>
<p>nn1 容器内</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="variable">$HADOOP_PREFIX</span>/bin/hadoop namenode -<span class="keyword">format</span>
</pre></td></tr></table></figure>

<p>运行情况</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">19</span>:<span class="number">55</span> WARN ssl.FileBasedKeyStoresFactory: The <span class="keyword">property</span> <span class="string">'ssl.client.truststore.location'</span> <span class="keyword">has</span> <span class="keyword">not</span> been <span class="keyword">set</span>, no TrustStore will be loaded
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">19</span>:<span class="number">55</span> INFO namenode.FSImage: Allocated <span class="keyword">new</span> BlockPoolId: BP-<span class="number">305947057</span>-<span class="number">192.168</span>.<span class="number">4.7</span>-<span class="number">1459415995773</span>
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">19</span>:<span class="number">55</span> INFO common.Storage: Storage directory /mnt/hadoop/dfs/name <span class="keyword">has</span> been successfully formatted.
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">19</span>:<span class="number">56</span> INFO namenode.NNStorageRetentionManager: Going <span class="keyword">to</span> retain <span class="number">1</span> images <span class="keyword">with</span> txid &gt;= <span class="number">0</span>
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">19</span>:<span class="number">56</span> INFO util.ExitUtil: Exiting <span class="keyword">with</span> status <span class="number">0</span>
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">19</span>:<span class="number">56</span> INFO namenode.NameNode: SHUTDOWN_MSG:
</pre></td></tr></table></figure>

<p>格式化成功, 启动该namenode</p>
<p>nn1 容器内执行</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="variable">$HADOOP_PREFIX</span>/sbin/hadoop<span class="attribute">-daemon</span><span class="built_in">.</span>sh start namenode
</pre></td></tr></table></figure>

<p>检查上面运行的日志</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre>tail /usr/local/hadoop/logs/hadoop-root-namenode-hadoop-nn1<span class="preprocessor">.log</span>

<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">22</span>:<span class="number">44</span>,<span class="number">491</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ipc</span><span class="preprocessor">.Server</span>: IPC Server Responder: starting
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">22</span>:<span class="number">44</span>,<span class="number">491</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ipc</span><span class="preprocessor">.Server</span>: IPC Server listener on <span class="number">8020</span>: starting
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">22</span>:<span class="number">44</span>,<span class="number">492</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.namenode</span><span class="preprocessor">.NameNode</span>: NameNode RPC up at: hadoop-nn1/<span class="number">192.168</span><span class="number">.4</span><span class="number">.7</span>:<span class="number">8020</span>
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">22</span>:<span class="number">44</span>,<span class="number">492</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.namenode</span><span class="preprocessor">.FSNamesystem</span>: Starting services required for standby state
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">22</span>:<span class="number">44</span>,<span class="number">494</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.namenode</span><span class="preprocessor">.ha</span><span class="preprocessor">.EditLogTailer</span>: Will roll logs on active node at hadoop-nn2/<span class="number">192.168</span><span class="number">.4</span><span class="number">.8</span>:<span class="number">8020</span> every <span class="number">120</span> seconds.
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">22</span>:<span class="number">44</span>,<span class="number">498</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.namenode</span><span class="preprocessor">.ha</span><span class="preprocessor">.StandbyCheckpointer</span>: Starting standby checkpoint thread...
Checkpointing active NN at http://hadoop-nn2:<span class="number">50070</span>
Serving checkpoints at http://hadoop-nn1:<span class="number">50070</span>
</pre></td></tr></table></figure>

<p>开启nn1上 zookeeper 进程</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre>$HADOOP_PREFIX/sbin/hadoop-daemon<span class="preprocessor">.sh</span> start zkfc

tail /usr/local/hadoop/logs/hadoop-root-zkfc-hadoop-nn1<span class="preprocessor">.log</span>

<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">27</span>:<span class="number">20</span>,<span class="number">495</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ha</span><span class="preprocessor">.ActiveStandbyElector</span>: Checking for any old active which needs to be fenced...
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">27</span>:<span class="number">20</span>,<span class="number">502</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ha</span><span class="preprocessor">.ActiveStandbyElector</span>: No old node to fence
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">27</span>:<span class="number">20</span>,<span class="number">502</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ha</span><span class="preprocessor">.ActiveStandbyElector</span>: Writing znode /hadoop-ha/cluster/ActiveBreadCrumb to indicate that the local node is the most recent active...
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">27</span>:<span class="number">20</span>,<span class="number">514</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ha</span><span class="preprocessor">.ZKFailoverController</span>: Trying to make NameNode at hadoop-nn1/<span class="number">192.168</span><span class="number">.4</span><span class="number">.7</span>:<span class="number">8020</span> active...
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">27</span>:<span class="number">21</span>,<span class="number">083</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ha</span><span class="preprocessor">.ZKFailoverController</span>: Successfully transitioned NameNode at hadoop-nn1/<span class="number">192.168</span><span class="number">.4</span><span class="number">.7</span>:<span class="number">8020</span> to active state
</pre></td></tr></table></figure>

<h4 id="2-4_同步_NameNode1_元数据到_NameNode2_上">2.4 同步 NameNode1 元数据到 NameNode2 上</h4>
<p>宿主机登录到nn2容器内</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>sdocker exec <span class="attribute">-it</span> hadoop<span class="attribute">-nn2</span> bash
</pre></td></tr></table></figure>

<p>nn2 执行bootstrapStandby</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre>$HADOOP_PREFIX/bin/hadoop namenode -bootstrapStandby

<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">25</span>:<span class="number">09</span> INFO namenode.TransferFsImage: Opening connection <span class="built_in">to</span> <span class="keyword">http</span>://hadoop-nn1:<span class="number">50070</span>/imagetransfer?getimage=<span class="number">1</span>&txid=<span class="number">0</span>&storageInfo=-<span class="number">57</span>:<span class="number">2142625186</span>:<span class="number">0</span>:CID-<span class="number">22</span>a35ddb-<span class="number">646e-4104</span>-be99-<span class="number">1</span>b7cbc578a83
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">25</span>:<span class="number">09</span> INFO namenode.TransferFsImage: Image Transfer timeout configured <span class="built_in">to</span> <span class="number">60000</span> <span class="built_in">milliseconds</span>
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">25</span>:<span class="number">09</span> INFO namenode.TransferFsImage: Transfer took <span class="number">0.02</span>s <span class="keyword">at</span> <span class="number">0.00</span> KB/s
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">25</span>:<span class="number">09</span> INFO namenode.TransferFsImage: Downloaded <span class="built_in">file</span> fsimage.ckpt_0000000000000000000 size <span class="number">351</span> <span class="keyword">bytes</span>.
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">25</span>:<span class="number">09</span> INFO util.ExitUtil: Exiting <span class="operator">with</span> status <span class="number">0</span>
<span class="number">16</span>/<span class="number">03</span>/<span class="number">31</span> <span class="number">17</span>:<span class="number">25</span>:<span class="number">09</span> INFO namenode.NameNode: SHUTDOWN_MSG:
</pre></td></tr></table></figure>

<p>成功后同上nn1过程启动namenode</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre>$HADOOP_PREFIX/sbin/hadoop-daemon<span class="preprocessor">.sh</span> start namenode
tail /usr/local/hadoop/logs/hadoop-root-namenode-hadoop-nn2<span class="preprocessor">.log</span>

<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">26</span>:<span class="number">25</span>,<span class="number">011</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ipc</span><span class="preprocessor">.Server</span>: IPC Server Responder: starting
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">26</span>:<span class="number">25</span>,<span class="number">011</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ipc</span><span class="preprocessor">.Server</span>: IPC Server listener on <span class="number">8020</span>: starting
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">26</span>:<span class="number">25</span>,<span class="number">013</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.namenode</span><span class="preprocessor">.NameNode</span>: NameNode RPC up at: hadoop-nn2/<span class="number">192.168</span><span class="number">.4</span><span class="number">.8</span>:<span class="number">8020</span>
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">26</span>:<span class="number">25</span>,<span class="number">013</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.namenode</span><span class="preprocessor">.FSNamesystem</span>: Starting services required for standby state
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">26</span>:<span class="number">25</span>,<span class="number">015</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.namenode</span><span class="preprocessor">.ha</span><span class="preprocessor">.EditLogTailer</span>: Will roll logs on active node at hadoop-nn1/<span class="number">192.168</span><span class="number">.4</span><span class="number">.7</span>:<span class="number">8020</span> every <span class="number">120</span> seconds.
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">26</span>:<span class="number">25</span>,<span class="number">019</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.namenode</span><span class="preprocessor">.ha</span><span class="preprocessor">.StandbyCheckpointer</span>: Starting standby checkpoint thread...
Checkpointing active NN at http://hadoop-nn1:<span class="number">50070</span>
Serving checkpoints at http://hadoop-nn2:<span class="number">50070</span>
</pre></td></tr></table></figure>

<p>及zkfc</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>$HADOOP_PREFIX/sbin/hadoop-daemon<span class="preprocessor">.sh</span> start zkfc

tail /usr/local/hadoop/logs/hadoop-root-zkfc-hadoop-nn2<span class="preprocessor">.log</span>
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">28</span>:<span class="number">15</span>,<span class="number">782</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ha</span><span class="preprocessor">.ZKFailoverController</span>: Local service NameNode at hadoop-nn2/<span class="number">192.168</span><span class="number">.4</span><span class="number">.8</span>:<span class="number">8020</span> entered state: SERVICE_HEALTHY
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">28</span>:<span class="number">15</span>,<span class="number">821</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ha</span><span class="preprocessor">.ZKFailoverController</span>: ZK Election indicated that NameNode at hadoop-nn2/<span class="number">192.168</span><span class="number">.4</span><span class="number">.8</span>:<span class="number">8020</span> should become standby
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">28</span>:<span class="number">15</span>,<span class="number">832</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.ha</span><span class="preprocessor">.ZKFailoverController</span>: Successfully transitioned NameNode at hadoop-nn2/<span class="number">192.168</span><span class="number">.4</span><span class="number">.8</span>:<span class="number">8020</span> to standby state
</pre></td></tr></table></figure>

<h4 id="2-5_启动所有datanode">2.5 启动所有datanode</h4>
<p>可在宿主机上启动</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>sdocker exec <span class="attribute">-it</span> hadoop<span class="attribute">-dn1</span> /usr/<span class="built_in">local</span>/hadoop/sbin/hadoop<span class="attribute">-daemon</span><span class="built_in">.</span>sh start datanode
sdocker exec <span class="attribute">-it</span> hadoop<span class="attribute">-dn2</span> /usr/<span class="built_in">local</span>/hadoop/sbin/hadoop<span class="attribute">-daemon</span><span class="built_in">.</span>sh start datanode
sdocker exec <span class="attribute">-it</span> hadoop<span class="attribute">-dn3</span> /usr/<span class="built_in">local</span>/hadoop/sbin/hadoop<span class="attribute">-daemon</span><span class="built_in">.</span>sh start datanode
</pre></td></tr></table></figure>

<p>进入容器内部检查运行日志</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>sdocker exec -it hadoop-dn1 bash

tail /usr/local/hadoop/logs/hadoop-root-datanode-hadoop-dn1<span class="preprocessor">.log</span>

<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">31</span>:<span class="number">23</span>,<span class="number">791</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.datanode</span><span class="preprocessor">.BlockPoolSliceScanner</span>: Periodic Block Verification Scanner initialized with interval <span class="number">504</span> hours for block pool BP-<span class="number">305947057</span>-<span class="number">192.168</span><span class="number">.4</span><span class="number">.7</span>-<span class="number">1459415995773</span>
<span class="number">2016</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">17</span>:<span class="number">31</span>:<span class="number">23</span>,<span class="number">795</span> INFO org<span class="preprocessor">.apache</span><span class="preprocessor">.hadoop</span><span class="preprocessor">.hdfs</span><span class="preprocessor">.server</span><span class="preprocessor">.datanode</span><span class="preprocessor">.DataBlockScanner</span>: Added bpid=BP-<span class="number">305947057</span>-<span class="number">192.168</span><span class="number">.4</span><span class="number">.7</span>-<span class="number">1459415995773</span> to blockPoolScannerMap, new size=<span class="number">1</span>
</pre></td></tr></table></figure>

<p>以上! 文档请移步 !</p>
<p><a href="https://github.com/iofdata/Docker/tree/master/hadoop" target="_blank" rel="external">https://github.com/iofdata/Docker/tree/master/hadoop</a></p>
]]></content>
    
    
      <category term="docker" scheme="http://buttonwood.bitbucket.org/tags/docker/"/>
    
      <category term="hadoop" scheme="http://buttonwood.bitbucket.org/tags/hadoop/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hbase region in transition too long]]></title>
    <link href="http://buttonwood.bitbucket.org/2016/03/31/2016-03-31-hbase-region-in-transition/"/>
    <id>http://buttonwood.bitbucket.org/2016/03/31/2016-03-31-hbase-region-in-transition/</id>
    <published>2016-03-31T11:51:00.000Z</published>
    <updated>2016-03-31T12:22:00.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_问题描述">1. 问题描述</h3>
<p>2016年3月30日晚上10:15左右收到下载量低和爬虫流量低报警，意识到可能hbase存数据可能出问题，打开</p>
<p><a href="119.254.110.32:60010/master-status#baseStats" target="_blank" rel="external">hbase监控页面</a></p>
<p><img src="http://ww3.sinaimg.cn/large/6fbc15dcgw1f2g9oyhxyrj20ui0dxgog.jpg" alt=""></p>
<p>有两个hbase结点宕机, 于是马上登陆相关服务器重启hbase服务。</p>
<h3 id="2-_事后分析">2. 事后分析</h3>
<p>zookeeper 网络抖动导致hhbase01/hbase02 被hbase-master下线。</p>
<p>zookeeper 网络抖动。</p>
<p><img src="http://ww4.sinaimg.cn/large/6fbc15dcgw1f2fz89mwhmj20m10cb0tt.jpg" alt=""></p>
<p>hbase02 不能获取路由。</p>
<p><img src="http://ww4.sinaimg.cn/large/6fbc15dcgw1f2g9togeloj20wx0e4k0m.jpg" alt=""></p>
<p>hbase-master 将其标记为dead node 作下线处理。</p>
<p><img src="http://ww3.sinaimg.cn/large/6fbc15dcgw1f2g9y4nzf3j20z006edjl.jpg" alt=""></p>
<h3 id="3-_附加问题">3. 附加问题</h3>
<p>重启hbase01 和 hbase02的过程中，hbase02与hbase05交互的一个region卡死，导致hbase02不能起来，整个集群无法做blancer， 20160331早上1点15集群崩溃，整个系统瘫痪。 我在早上六点半左右重启了hbase05和hbase02，问题解决。</p>
<p>hbase02 无法起来，大量滚动 hfile.LruBlockCache </p>
<p><img src="http://ww3.sinaimg.cn/large/6fbc15dcgw1f2ga58898xj20z909fjyw.jpg" alt=""></p>
<p>master 无法 running balancer because 1 region(s) in transition</p>
<p><img src="http://ww1.sinaimg.cn/large/6fbc15dcgw1f2ga2h6ozvj20z5089n36.jpg" alt=""></p>
<p>回溯问题，可能断网那个时候, hbase05 该 region 在 in transition 过程中被标记为pending, 但是转移中，连接被重置，接着hbase02掉线重启，hbase02自身的wal记录状态和zookeerper 里面的状态不一致，拿不到该region，起不来服务,进而慢慢影响整个集群。</p>
<p>hbase05 Connection reset by peer<br><img src="http://ww4.sinaimg.cn/large/6fbc15dcgw1f2gaab1d0dj20xe08rq74.jpg" alt=""></p>
]]></content>
    
    
      <category term="hbase" scheme="http://buttonwood.bitbucket.org/tags/hbase/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用docker创建zookeeper集群]]></title>
    <link href="http://buttonwood.bitbucket.org/2016/03/15/2016-03-15-zookeeper-and-docker/"/>
    <id>http://buttonwood.bitbucket.org/2016/03/15/2016-03-15-zookeeper-and-docker/</id>
    <published>2016-03-15T07:51:00.000Z</published>
    <updated>2016-03-25T15:51:36.000Z</updated>
    <content type="html"><![CDATA[<p>参考dynamic-zookeeper-cluster-with-docker[^1]，可用来动态增加zookeeper结点，这里主要稍微修正了时区和id添加的问题。</p>
<h3 id="1-_创建_Dockerfile">1. 创建 Dockerfile</h3>
<p>安装jdk 及 zookeeper</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="code"><pre>FROM ubuntu

<span class="preprocessor"># update time </span>
RUN echo <span class="string">"Asia/Shanghai"</span> &gt; /etc/timezone
RUN dpkg-reconfigure -f noninteractive tzdata

RUN apt-get update
RUN apt-get -<span class="built_in">y</span> install wget bash vim && apt-get clean

<span class="preprocessor"># install java</span>
RUN wget http://<span class="number">119.254</span><span class="number">.110</span><span class="number">.32</span>:<span class="number">8081</span>/download/jdk1<span class="number">.7</span><span class="number">.0</span>_60<span class="preprocessor">.tar</span><span class="preprocessor">.gz</span> \
   && tar -xvzf  jdk1<span class="number">.7</span><span class="number">.0</span>_60<span class="preprocessor">.tar</span><span class="preprocessor">.gz</span> \
   && mv jdk1<span class="number">.7</span><span class="number">.0</span>_60 /usr/share/ \
   && rm -rf /usr/lib/jvm/java-<span class="number">1.7</span>-openjdk \
   && mkdir -p /usr/lib/jvm/ \
   && ln -s /usr/share/jdk1<span class="number">.7</span><span class="number">.0</span>_60 /usr/lib/jvm/java-<span class="number">1.7</span>-openjdk \
   && rm -rf jdk1<span class="number">.7</span><span class="number">.0</span>_60<span class="preprocessor">.tar</span><span class="preprocessor">.gz</span>

ENV JAVA_HOME /usr/lib/jvm/java-<span class="number">1.7</span>-openjdk/

RUN apt-get -<span class="built_in">y</span> install git ant && apt-get clean

<span class="preprocessor"># install zookeeper</span>
RUN mkdir /tmp/zookeeper
WORKDIR /tmp/zookeeper
RUN git clone https://github<span class="preprocessor">.com</span>/apache/zookeeper<span class="preprocessor">.git</span> .
RUN git checkout release-<span class="number">3.5</span><span class="number">.1</span>-rc2
RUN ant jar
RUN <span class="keyword">cp</span> /tmp/zookeeper/conf/zoo_sample<span class="preprocessor">.cfg</span> \
    /tmp/zookeeper/conf/zoo<span class="preprocessor">.cfg</span>
RUN echo <span class="string">"standaloneEnabled=false"</span> &gt;&gt; /tmp/zookeeper/conf/zoo<span class="preprocessor">.cfg</span>
RUN echo <span class="string">"dynamicConfigFile=/tmp/zookeeper/conf/zoo.cfg.dynamic"</span> &gt;&gt; /tmp/zookeeper/conf/zoo<span class="preprocessor">.cfg</span>
<span class="keyword">ADD</span> zk-init<span class="preprocessor">.sh</span> /usr/local/bin/
ENTRYPOINT [<span class="string">"/usr/local/bin/zk-init.sh"</span>]
</pre></td></tr></table></figure>

<p>zookeeper 初始化脚本 <code>zk-init.sh</code></p>
<p>需要指定自己的id和ip以及第一个zookeeper结点的ip。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="code"><pre><span class="shebang">#!/bin/bash
</span>
MYID=<span class="variable">$1</span>
MYIP=<span class="variable">$2</span>
ZK=<span class="variable">$3</span>
IPADDRESS=<span class="variable">$MYIP</span>

<span class="built_in">cd</span> /tmp/zookeeper

<span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$ZK</span>"</span> ];<span class="keyword">then</span>
  output=`./bin/zkCli.sh -server <span class="variable">$ZK</span>:<span class="number">2181</span> \
      get /zookeeper/config | grep ^server`
  <span class="comment">#echo $output &gt;&gt; /tmp/zookeeper/conf/zoo.cfg.dynamic</span>
  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$output</span>; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span> &gt;&gt; /tmp/zookeeper/conf/zoo.cfg.dynamic; <span class="keyword">done</span>
  <span class="built_in">echo</span> <span class="string">"server.<span class="variable">$MYID</span>=<span class="variable">$IPADDRESS</span>:2888:3888:observer;2181"</span> \
      &gt;&gt; /tmp/zookeeper/conf/zoo.cfg.dynamic
  cp /tmp/zookeeper/conf/zoo.cfg.dynamic \
      /tmp/zookeeper/conf/zoo.cfg.dynamic.org
  /tmp/zookeeper/bin/zkServer-initialize.sh \
      --force --myid=<span class="variable">$MYID</span>
  ZOO_LOG_DIR=/var/log
  ZOO_LOG4J_PROP=<span class="string">'INFO,CONSOLE,ROLLINGFILE'</span>
  /tmp/zookeeper/bin/zkServer.sh start
  /tmp/zookeeper/bin/zkCli.sh -server <span class="variable">$ZK</span>:<span class="number">2181</span> reconfig \
      -add <span class="string">"server.<span class="variable">$MYID</span>=<span class="variable">$IPADDRESS</span>:2888:3888:participant;2181"</span>
  /tmp/zookeeper/bin/zkServer.sh stop
  ZOO_LOG_DIR=/var/log
  ZOO_LOG4J_PROP=<span class="string">'INFO,CONSOLE,ROLLINGFILE'</span>
  /tmp/zookeeper/bin/zkServer.sh start-foreground
<span class="keyword">else</span>
  <span class="built_in">echo</span> <span class="string">"server.<span class="variable">$MYID</span>=<span class="variable">$IPADDRESS</span>:2888:3888;2181"</span> \
      &gt;&gt; /tmp/zookeeper/conf/zoo.cfg.dynamic
  /tmp/zookeeper/bin/zkServer-initialize.sh --force --myid=<span class="variable">$MYID</span>
  ZOO_LOG_DIR=/var/log
  ZOO_LOG4J_PROP=<span class="string">'INFO,CONSOLE,ROLLINGFILE'</span>
  /tmp/zookeeper/bin/zkServer.sh start-foreground
<span class="keyword">fi</span>
</pre></td></tr></table></figure>

<h3 id="2-_创建镜像">2. 创建镜像</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>docker build <span class="attribute">-t</span> peony/zk:<span class="number">2</span> <span class="built_in">.</span>
</pre></td></tr></table></figure>

<h3 id="3-_开启容器">3. 开启容器</h3>
<p>测试脚本<code>start-zk-2.sh</code>，启动三个结点</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="comment">docker</span> <span class="comment">rm</span> <span class="literal">-</span><span class="comment">f</span> <span class="comment">zk01</span> <span class="comment">zk02</span> <span class="comment">zk03</span>
<span class="comment">docker</span> <span class="comment">run</span> <span class="literal">-</span><span class="comment">d</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">net=net04</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">name</span> <span class="comment">zk01</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">add</span><span class="literal">-</span><span class="comment">host</span> <span class="comment">\</span>
    <span class="comment">zk01:192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">4</span><span class="string">.</span><span class="comment">2</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">hostname</span> <span class="comment">zk01</span><span class="string">.</span><span class="comment">mudan</span><span class="string">.</span><span class="comment">com</span> <span class="comment">\</span>
    <span class="comment">peony/zk:2</span> <span class="comment">1</span> <span class="comment">192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">4</span><span class="string">.</span><span class="comment">2</span>
<span class="comment">docker</span> <span class="comment">run</span> <span class="literal">-</span><span class="comment">d</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">net=net04</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">name</span> <span class="comment">zk02</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">add</span><span class="literal">-</span><span class="comment">host</span> <span class="comment">\</span>
    <span class="comment">zk02:192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">4</span><span class="string">.</span><span class="comment">3</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">hostname</span> <span class="comment">zk02</span><span class="string">.</span><span class="comment">mudan</span><span class="string">.</span><span class="comment">com</span> <span class="comment">\</span>
    <span class="comment">peony/zk:2</span> <span class="comment">2</span> <span class="comment">192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">4</span><span class="string">.</span><span class="comment">3</span> <span class="comment">192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">4</span><span class="string">.</span><span class="comment">2</span>
<span class="comment">docker</span> <span class="comment">run</span> <span class="literal">-</span><span class="comment">d</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">net=net04</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">name</span> <span class="comment">zk03</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">add</span><span class="literal">-</span><span class="comment">host</span> <span class="comment">\</span>
    <span class="comment">zk03:192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">4</span><span class="string">.</span><span class="comment">4</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">hostname</span> <span class="comment">zk03</span><span class="string">.</span><span class="comment">mudan</span><span class="string">.</span><span class="comment">com</span> <span class="comment">\</span>
    <span class="comment">peony/zk:2</span> <span class="comment">3</span> <span class="comment">192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">4</span><span class="string">.</span><span class="comment">4</span> <span class="comment">192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">4</span><span class="string">.</span><span class="comment">2</span>
</pre></td></tr></table></figure>

<h3 id="4-_参考:">4. 参考:</h3>
<p>[^1]:<a href="http://container-solutions.com/dynamic-zookeeper-cluster-with-docker" target="_blank" rel="external">dynamic zookeeper cluster with docker</a></p>
]]></content>
    
    
      <category term="docker" scheme="http://buttonwood.bitbucket.org/tags/docker/"/>
    
      <category term="zookeeper" scheme="http://buttonwood.bitbucket.org/tags/zookeeper/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[docker consul 服务发现]]></title>
    <link href="http://buttonwood.bitbucket.org/2016/03/10/2016-03-10-docker-consul/"/>
    <id>http://buttonwood.bitbucket.org/2016/03/10/2016-03-10-docker-consul/</id>
    <published>2016-03-10T13:51:00.000Z</published>
    <updated>2016-03-31T12:27:51.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_DC01_192-168-9-8">1. DC01 192.168.9.8</h3>
<p>拉镜像, 起服务</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="char">$ </span>docker pull progrium/consul
<span class="char">$ </span>mkdir ~/consul
<span class="char">$ </span>docker run --rm progrium/consul <span class="method">cmd:</span>run <span class="number">192.168</span><span class="number">.9</span><span class="number">.8</span> -d -v ~/<span class="method">consul:</span>/data
</pre></td></tr></table></figure>

<p>运行上面生成的脚本</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre>docker run --name consul -h $HOSTNAME \
    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.8</span><span class="symbol">:</span><span class="number">8300</span><span class="symbol">:</span><span class="number">8300</span> \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.8</span><span class="symbol">:</span><span class="number">8301</span><span class="symbol">:</span><span class="number">8301</span> \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.8</span><span class="symbol">:</span><span class="number">8301</span><span class="symbol">:</span><span class="number">8301</span>/udp \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.8</span><span class="symbol">:</span><span class="number">8302</span><span class="symbol">:</span><span class="number">8302</span> \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.8</span><span class="symbol">:</span><span class="number">8302</span><span class="symbol">:</span><span class="number">8302</span>/udp \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.8</span><span class="symbol">:</span><span class="number">8400</span><span class="symbol">:</span><span class="number">8400</span> \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.8</span><span class="symbol">:</span><span class="number">8500</span><span class="symbol">:</span><span class="number">8500</span> \
</span>    -<span class="ruby">p <span class="number">172.17</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">53</span><span class="symbol">:</span><span class="number">53</span>  \
</span>    -<span class="ruby">p <span class="number">172.17</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">53</span><span class="symbol">:</span><span class="number">53</span>/udp \
</span>    -<span class="ruby">d -v /home/ubuntu/<span class="symbol">consul:</span>/data \
</span>    progrium/consul -server -advertise 192.168.9.8 -bootstrap-expect 3 -ui-dir /ui
</pre></td></tr></table></figure>

<p>验证本结点信息</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="comment">#$ curl localhost:8500/v1/catalog/nodes</span>
<span class="variable">$ </span>curl <span class="symbol">dc01:</span><span class="number">8500</span>/v1/catalog/nodes
<span class="variable">$ </span>dig <span class="variable">@0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> -p <span class="number">8600</span> node1.node.consul
</pre></td></tr></table></figure>

<h3 id="2-_DC02_192-168-9-253">2. DC02 192.168.9.253</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="char">$ </span>docker pull progrium/consul
<span class="char">$ </span>mkdir ~/consul
<span class="char">$ </span>docker run --rm progrium/consul <span class="method">cmd:</span>run <span class="number">192.168</span><span class="number">.9</span><span class="number">.253</span>::<span class="number">192.168</span><span class="number">.9</span><span class="number">.8</span> -d -v ~/<span class="method">consul:</span>/data
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre>docker run --name consul -h $HOSTNAME 
    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.253</span><span class="symbol">:</span><span class="number">8300</span><span class="symbol">:</span><span class="number">8300</span> \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.253</span><span class="symbol">:</span><span class="number">8301</span><span class="symbol">:</span><span class="number">8301</span> \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.253</span><span class="symbol">:</span><span class="number">8301</span><span class="symbol">:</span><span class="number">8301</span>/udp \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.253</span><span class="symbol">:</span><span class="number">8302</span><span class="symbol">:</span><span class="number">8302</span> \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.253</span><span class="symbol">:</span><span class="number">8302</span><span class="symbol">:</span><span class="number">8302</span>/udp \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.253</span><span class="symbol">:</span><span class="number">8400</span><span class="symbol">:</span><span class="number">8400</span> \
</span>    -<span class="ruby">p <span class="number">192.168</span>.<span class="number">9.253</span><span class="symbol">:</span><span class="number">8500</span><span class="symbol">:</span><span class="number">8500</span> \
</span>    -<span class="ruby">p <span class="number">172.17</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">53</span><span class="symbol">:</span><span class="number">53</span> \
</span>    -<span class="ruby">p <span class="number">172.17</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">53</span><span class="symbol">:</span><span class="number">53</span>/udp \
</span>    -<span class="ruby">d -v /home/ubuntu/<span class="symbol">consul:</span>/data \
</span>    progrium/consul -server -advertise 192.168.9.253 -join 192.168.9.8
</pre></td></tr></table></figure>

<h3 id="3-_DC03_192-168-9-252">3. DC03 192.168.9.252</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="char">$ </span>docker pull progrium/consul
<span class="char">$ </span>mkdir ~/consul
<span class="char">$ </span><span class="char">$(</span>docker run --rm progrium/consul <span class="method">cmd:</span>run <span class="number">192.168</span><span class="number">.9</span><span class="number">.252</span>::<span class="number">192.168</span><span class="number">.9</span><span class="number">.8</span> -d -v ~/<span class="method">consul:</span>/data)
</pre></td></tr></table></figure>

<h3 id="4-_DC01_192-168-9-8_验证">4. DC01 192.168.9.8 验证</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="variable">$ </span>curl <span class="symbol">dc01:</span><span class="number">8500</span>/v1/catalog/nodes
[{<span class="string">"Node"</span><span class="symbol">:<span class="string">"dc01.mudan.com"</span></span>,<span class="string">"Address"</span><span class="symbol">:<span class="string">"192.168.9.8"</span></span>},{<span class="string">"Node"</span><span class="symbol">:<span class="string">"dc02.mudan.com"</span></span>,<span class="string">"Address"</span><span class="symbol">:<span class="string">"192.168.9.253"</span></span>},{<span class="string">"Node"</span><span class="symbol">:<span class="string">"dc03.mudan.com"</span></span>,<span class="string">"Address"</span><span class="symbol">:<span class="string">"192.168.9.252"</span></span>}]
</pre></td></tr></table></figure>

<h4 id="consul_参考资料">consul 参考资料</h4>
<p><a href="https://hub.docker.com/r/progrium/consul/" target="_blank" rel="external">https://hub.docker.com/r/progrium/consul/</a><br><a href="http://jlordiales.me/2015/02/03/registrator/" target="_blank" rel="external">http://jlordiales.me/2015/02/03/registrator/</a><br><a href="http://artplustech.com/docker-consul-dns-registrator/" target="_blank" rel="external">http://artplustech.com/docker-consul-dns-registrator/</a><br><a href="https://www.spirulasystems.com/blog/2015/06/25/building-an-automatic-environment-using-consul-and-docker-part-1/" target="_blank" rel="external">https://www.spirulasystems.com/blog/2015/06/25/building-an-automatic-environment-using-consul-and-docker-part-1/</a><br><a href="https://docs.docker.com/v1.5/swarm/discovery/" target="_blank" rel="external">https://docs.docker.com/v1.5/swarm/discovery/</a><br><a href="http://tonybai.com/2015/07/06/implement-distributed-services-registery-and-discovery-by-consul/" target="_blank" rel="external">http://tonybai.com/2015/07/06/implement-distributed-services-registery-and-discovery-by-consul/</a>        </p>
]]></content>
    
    
      <category term="docker" scheme="http://buttonwood.bitbucket.org/tags/docker/"/>
    
      <category term="consul" scheme="http://buttonwood.bitbucket.org/tags/consul/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[docker registry 搭建]]></title>
    <link href="http://buttonwood.bitbucket.org/2016/03/10/2016-03-10-docker-registry/"/>
    <id>http://buttonwood.bitbucket.org/2016/03/10/2016-03-10-docker-registry/</id>
    <published>2016-03-10T08:51:00.000Z</published>
    <updated>2016-03-31T12:28:02.000Z</updated>
    <content type="html"><![CDATA[<h3 id="DC01-192-168-9-8">DC01-192.168.9.8</h3>
<h4 id="1-_工作目录">1. 工作目录</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="variable">$ </span>mkdir -p /home/ubuntu/registry
<span class="variable">$ </span>cd /home/ubuntu/registry
<span class="comment"># sudo docker run -d -p 5000:5000 -v `pwd`/data:/var/lib/registry --restart=always --name registry registry:2</span>
</pre></td></tr></table></figure>

<h4 id="2-_CA证书">2. CA证书</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>$ mkdir certs
$ openssl req -newkey rsa:<span class="number">2048</span> -nodes -sha256 -keyout certs/registry<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span><span class="preprocessor">.key</span> -x509 -days <span class="number">3650</span> -<span class="keyword">out</span> certs/registry<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span><span class="preprocessor">.crt</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="tag">Country</span> <span class="tag">Name</span> (2 <span class="tag">letter</span> <span class="tag">code</span>) <span class="attr_selector">[AU]</span><span class="pseudo">:CN</span>
<span class="tag">State</span> <span class="tag">or</span> <span class="tag">Province</span> <span class="tag">Name</span> (<span class="tag">full</span> <span class="tag">name</span>) <span class="attr_selector">[Some-State]</span><span class="pseudo">:HB</span>
<span class="tag">Locality</span> <span class="tag">Name</span> (<span class="tag">eg</span>, <span class="tag">city</span>) <span class="attr_selector">[]</span><span class="pseudo">:Wuhan</span>
<span class="tag">Organization</span> <span class="tag">Name</span> (<span class="tag">eg</span>, <span class="tag">company</span>) <span class="attr_selector">[Internet Widgits Pty Ltd]</span><span class="pseudo">:PEONY</span>
<span class="tag">Organizational</span> <span class="tag">Unit</span> <span class="tag">Name</span> (<span class="tag">eg</span>, <span class="tag">section</span>) <span class="attr_selector">[]</span><span class="pseudo">:DATA</span>
<span class="tag">Common</span> <span class="tag">Name</span> (<span class="tag">e</span><span class="class">.g</span>. <span class="tag">server</span> <span class="tag">FQDN</span> <span class="tag">or</span> <span class="tag">YOUR</span> <span class="tag">name</span>) <span class="attr_selector">[]</span><span class="pseudo">:registry</span><span class="class">.mudan</span><span class="class">.com</span>
<span class="tag">Email</span> <span class="tag">Address</span> <span class="attr_selector">[]</span><span class="pseudo">:peony_wh</span><span class="at_rule">@<span class="keyword">163.com</span></span>
</pre></td></tr></table></figure>

<p>重新启动</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre>$ docker stop registry
$ docker rm registry
$ docker run -d -p 5000:5000 --restart=always --name registry \
  -<span class="ruby">v `pwd`/<span class="symbol">data:</span>/var/lib/registry \
</span>  -<span class="ruby">v `pwd`/<span class="symbol">certs:</span>/certs \
</span>  -<span class="ruby">e <span class="constant">REGISTRY_HTTP_TLS_CERTIFICATE</span>=<span class="regexp">/certs/registry</span>.mudan.com.crt \
</span>  -<span class="ruby">e <span class="constant">REGISTRY_HTTP_TLS_KEY</span>=<span class="regexp">/certs/registry</span>.mudan.com.key \
</span>  registry:2
$ sudo vi /etc/hosts
192.168.9.8 registry.mudan.com registry
</pre></td></tr></table></figure>

<p>拷贝证书</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>$ sudo mkdir -p /etc/docker/certs<span class="preprocessor">.d</span>/registry<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span>:<span class="number">5000</span>
$ sudo <span class="keyword">cp</span> certs/registry<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span><span class="preprocessor">.crt</span> /etc/docker/certs<span class="preprocessor">.d</span>/registry<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span>:<span class="number">5000</span>/ca<span class="preprocessor">.crt</span>
$ sudo service docker restart
</pre></td></tr></table></figure>

<p>推送镜像</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>docker pull busybox:latest
docker tag busybox:latest registry<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span>:<span class="number">5000</span>/peony/busybox:latest
docker <span class="keyword">push</span> registry<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span>:<span class="number">5000</span>/peony/busybox
</pre></td></tr></table></figure>

<h4 id="3-_其他节点">3. 其他节点</h4>
<p>DC03 192.168.9.252</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="variable">$ </span>sudo mkdir -p /etc/docker/certs.d/registry.mudan.<span class="symbol">com:</span><span class="number">5000</span>
<span class="variable">$ </span>sudo scp ubuntu<span class="variable">@192</span>.<span class="number">168.9</span>.<span class="number">8</span><span class="symbol">:/home/ubuntu/registry/certs/registry</span>.mudan.com.crt \
    /etc/docker/certs.d/registry.mudan.<span class="symbol">com:</span><span class="number">5000</span>/
<span class="variable">$ </span>docker pull registry.mudan.<span class="symbol">com:</span><span class="number">5000</span>/peony/busybox
<span class="variable">$ </span>docker images
</pre></td></tr></table></figure>

<h4 id="4-_账号登陆，待完成">4. 账号登陆，待完成</h4>
<h4 id="参考资料">参考资料</h4>
<p><a href="https://github.com/docker/distribution/blob/master/docs/deploying.md" target="_blank" rel="external">https://github.com/docker/distribution/blob/master/docs/deploying.md</a></p>
<p><a href="https://github.com/docker/distribution/blob/master/docs/configuration.md#storage" target="_blank" rel="external">https://github.com/docker/distribution/blob/master/docs/configuration.md#storage</a></p>
<p><a href="http://seanlook.com/2014/11/13/deploy-private-docker-registry-with-nginx-ssl/" target="_blank" rel="external">http://seanlook.com/2014/11/13/deploy-private-docker-registry-with-nginx-ssl/</a></p>
<p><a href="http://tonybai.com/" target="_blank" rel="external">http://tonybai.com/</a></p>
]]></content>
    
    
      <category term="docker" scheme="http://buttonwood.bitbucket.org/tags/docker/"/>
    
      <category term="registry" scheme="http://buttonwood.bitbucket.org/tags/registry/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[docker搭建分布式数据库]]></title>
    <link href="http://buttonwood.bitbucket.org/2016/03/05/2016-03-05-docker-mysql-cobar/"/>
    <id>http://buttonwood.bitbucket.org/2016/03/05/2016-03-05-docker-mysql-cobar/</id>
    <published>2016-03-05T07:51:00.000Z</published>
    <updated>2016-03-31T12:34:51.000Z</updated>
    <content type="html"><![CDATA[<p>这是一篇用docker搭建分布式数据库的实验文档,详情请移步如下:</p>
<p><a href="https://github.com/Buttonwood/DOCKER-COBAR/blob/master/README.md" target="_blank" rel="external">docker-mysql-cobar</a></p>
]]></content>
    
    
      <category term="docker" scheme="http://buttonwood.bitbucket.org/tags/docker/"/>
    
      <category term="cobar" scheme="http://buttonwood.bitbucket.org/tags/cobar/"/>
    
      <category term="mysql" scheme="http://buttonwood.bitbucket.org/tags/mysql/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ElasticSearch search queen size is too high]]></title>
    <link href="http://buttonwood.bitbucket.org/2016/02/17/2016-02-17-ElasticSearch-Queen-Too-High/"/>
    <id>http://buttonwood.bitbucket.org/2016/02/17/2016-02-17-ElasticSearch-Queen-Too-High/</id>
    <published>2016-02-17T07:51:00.000Z</published>
    <updated>2016-03-25T14:51:55.000Z</updated>
    <content type="html"><![CDATA[<p>我们有两个ElasticSearch集群用于提供文档索引和搜索服务，其中一个20个结点的大集群用于存储全量数据，一个12个结点的小集群用于存储近一个周数据，ES2即该小集群。</p>
<h3 id="1_问题描述">1 问题描述</h3>
<p>ES2-1 CPU负载偏高，search队列积压，集群查询速度过慢。</p>
<h4 id="1-1_CPU负载偏高，search队列积压">1.1 CPU负载偏高，search队列积压</h4>
<p>ES2-1</p>
<p><img src="http://ww4.sinaimg.cn/large/6fbc15dcgw1f125pb5c93j20xj0dgdi0.jpg" alt="ES2-1"></p>
<p>ES2-1 search queue size较其他节点偏高。<br><img src="http://ww1.sinaimg.cn/large/6fbc15dcgw1f125rajxd7j20y508q76a.jpg" alt="ES2-1-search"></p>
<p>ES2-2</p>
<p><img src="http://ww4.sinaimg.cn/large/6fbc15dcgw1f125qi2jiij20xd0dfgnr.jpg" alt="ES2-2"></p>
<h4 id="1-2_查询速度">1.2 查询速度</h4>
<p>查询在50s以上</p>
<p><img src="http://ww2.sinaimg.cn/large/6fbc15dcgw1f1252a2hzvj21af0bzk35.jpg" alt="186"></p>
<p><img src="http://ww2.sinaimg.cn/large/6fbc15dcgw1f125oeruk0j21a50bm7gg.jpg" alt="187"></p>
<h4 id="1-3_后台日志">1.3 后台日志</h4>
<p>2月4日起，indexing和search slowlog量增大。</p>
<p><img src="http://ww4.sinaimg.cn/large/6fbc15dcgw1f124rtcz3oj20um0csdsg.jpg" alt="slowlog"></p>
<p>es_peony_sindex2_index_indexing_slowlog.log.2016-02-14</p>
<p><img src="http://ww1.sinaimg.cn/large/6fbc15dcgw1f124vgywjjj20ym06yn5p.jpg" alt="indexing_slowlog"></p>
<p>es_peony_sindex2_index_search_slowlog.log.2016-02-14</p>
<p><img src="http://ww4.sinaimg.cn/large/6fbc15dcgw1f124zvcv9vj20yn0iuh80.jpg" alt="index.search.slowlog.query"></p>
<h3 id="2_解决方案">2 解决方案</h3>
<p>下架ES2-1，杀掉该节点ES进程。</p>
<h4 id="2-1_查询速度">2.1 查询速度</h4>
<p><img src="http://ww4.sinaimg.cn/large/6fbc15dcgw1f125tg5wmyj21a209p13u.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/large/6fbc15dcgw1f125xqaa8yj219z0ben8m.jpg" alt=""></p>
<h3 id="3_事后分析">3 事后分析</h3>
<ol>
<li>重启ES2-1不能解决问题，重启后待数据均衡，该节点依然成为瓶颈，故考虑暂时下架处理。</li>
<li>青云表示物理主机cpu负荷正常，系该虚拟主机内部进程有关。</li>
<li>猜测可能与批量新索引创建导致队列阻塞。2月4日后开始出现indexing_slowlog。</li>
</ol>
<h3 id="4_Fixed！">4 Fixed！</h3>
<p>2月17日晨，格式化ES2-1的磁盘，当作全新结点重新启动ES，恢复正常。</p>
<h3 id="参考">参考</h3>
<p><a href="http://kibana.logstash.es/content/elasticsearch/performance/cluster-state.html" target="_blank" rel="external">http://kibana.logstash.es/content/elasticsearch/performance/cluster-state.html</a></p>
]]></content>
    
    
      <category term="ElasticSearch" scheme="http://buttonwood.bitbucket.org/tags/ElasticSearch/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mysql清理分区]]></title>
    <link href="http://buttonwood.bitbucket.org/2016/01/29/2016-01-29-mysql-truncate-partition/"/>
    <id>http://buttonwood.bitbucket.org/2016/01/29/2016-01-29-mysql-truncate-partition/</id>
    <published>2016-01-29T15:51:00.000Z</published>
    <updated>2016-03-26T12:28:26.000Z</updated>
    <content type="html"><![CDATA[<p>问题描述： mysql集群一个结点(appdb05)磁盘满，需要清理分区数据，同时保留部分客户数据。</p>
<p>解决方法： 先停止写入，再导出数据，再清空分区，再导入数据，确认无误后重新刷新写入。</p>
<p>待观察问题： slaver(appdb12)磁盘满，主从复制可能失效，数据可能不一致。</p>
<h3 id="step_1_关掉相关专题刷新">step 1 关掉相关专题刷新</h3>
<p>@5.23</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre>mysql <span class="attribute">-h</span> <span class="number">192.168</span><span class="number">.5</span><span class="number">.23</span> peony_t <span class="attribute">-uroot</span> <span class="attribute">-p</span>
mysql <span class="subst">&gt;</span> update pe_t_subject <span class="built_in">set</span> state <span class="subst">=</span> <span class="number">0</span>,update_time <span class="subst">=</span> now() <span class="keyword">where</span> id <span class="keyword">in</span> <span class="subst">\</span>
(<span class="number">4620</span>,<span class="number">4849</span>,<span class="number">4850</span>,<span class="number">4852</span>,<span class="number">4853</span>,<span class="number">4854</span>,<span class="number">4855</span>,<span class="number">4858</span>,<span class="number">4859</span>,<span class="number">4860</span>,<span class="number">4861</span>,<span class="subst">\</span>
<span class="number">4862</span>,<span class="number">4865</span>,<span class="number">4866</span>,<span class="number">4875</span>,<span class="number">4876</span>,<span class="number">4877</span>,<span class="number">4879</span>,<span class="number">4880</span>,<span class="number">4881</span>,<span class="number">4882</span>,<span class="number">4883</span>,<span class="subst">\</span>
<span class="number">4884</span>,<span class="number">4885</span>,<span class="number">4888</span>,<span class="number">5034</span>,<span class="number">5079</span>,<span class="number">5081</span>,<span class="number">5082</span>,<span class="number">5083</span>,<span class="number">5101</span>,<span class="number">5102</span>,<span class="number">5103</span>,<span class="subst">\</span>
<span class="number">5104</span>,<span class="number">5162</span>);
mysql<span class="subst">&gt;</span> update pe_t_subject <span class="built_in">set</span> state <span class="subst">=</span> <span class="number">0</span>,<span class="subst">\</span>
update_time <span class="subst">=</span> now() <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="number">3418</span>,<span class="number">3419</span>);
</pre></td></tr></table></figure>


<h3 id="step_2_确保数据没有再写入">step 2 确保数据没有再写入</h3>
<p>@5.5</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre>mysql&gt; use peony<span class="emphasis">_m_</span>63;
<span class="header">mysql&gt; select count(*) from  pe_t_subject_page where \ userId=1526 AND publishDate&lt;'2016-01-01';
+----------+</span>
<span class="header">| count(*) |
+----------+</span>
<span class="header">|    53226 |
+----------+</span>
1 row in set (0.05 sec)
[root@i-cphylyv8 ~]# ll -rt /home/mysql3306/peony<span class="emphasis">_m_</span>63
</pre></td></tr></table></figure>

<p><img src="http://ww2.sinaimg.cn/large/6fbc15dcgw1f0jv3sxw05j20q7040n05.jpg" alt=""></p>
<h3 id="step_3_备份数据">step 3 备份数据</h3>
<p>@5.5</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="comment">mysqldump</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">host=192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">5</span><span class="string">.</span><span class="comment">5</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">user=***</span><span class="literal">-</span><span class="literal">-</span><span class="comment">password=***</span> <span class="comment">\</span>
<span class="literal">-</span><span class="literal">-</span><span class="comment">no</span><span class="literal">-</span><span class="comment">create</span><span class="literal">-</span><span class="comment">info</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">where="publishDate</span>&lt;<span class="comment">'2016</span><span class="literal">-</span><span class="comment">01</span><span class="literal">-</span><span class="comment">01'</span> <span class="comment">AND</span> <span class="comment">\</span>
<span class="comment">userId=1526"</span> <span class="comment">peony_m_63</span> <span class="comment">pe_t_subject_page</span> <span class="comment">\</span>
&gt;<span class="comment">1526</span><span class="string">.</span><span class="comment">2016</span><span class="literal">-</span><span class="comment">01</span><span class="literal">-</span><span class="comment">01</span><span class="string">.</span><span class="comment">sql</span>
<span class="comment">mysqldump</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">host=192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">5</span><span class="string">.</span><span class="comment">5</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">user=***</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">password=***</span> <span class="comment">\</span>
<span class="literal">-</span><span class="literal">-</span><span class="comment">no</span><span class="literal">-</span><span class="comment">create</span><span class="literal">-</span><span class="comment">info</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">where="publishDate</span>&lt;<span class="comment">'2016</span><span class="literal">-</span><span class="comment">01</span><span class="literal">-</span><span class="comment">01'</span> <span class="comment">AND</span> <span class="comment">\</span>
<span class="comment">userId=496"</span> <span class="comment">peony_m_63</span> <span class="comment">pe_t_subject_page</span> <span class="comment">\</span>
&gt;<span class="comment">496</span><span class="string">.</span><span class="comment">2016</span><span class="literal">-</span><span class="comment">01</span><span class="literal">-</span><span class="comment">01</span><span class="string">.</span><span class="comment">sql</span>
</pre></td></tr></table></figure>

<h3 id="step_4_清空分区数据并导入保留的专题数据">step 4 清空分区数据并导入保留的专题数据</h3>
<p>@5.5 上清空分区数据并导入保留的专题数据</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre>mysql&gt; alter table pe<span class="emphasis">_t_</span>subject<span class="emphasis">_page truncate partition \
p24_</span>1,p24<span class="emphasis">_2,p25_</span>1,p25<span class="emphasis">_2;
mysql&gt; select count(*) from  pe_</span>t<span class="emphasis">_subject_</span>page where \
<span class="header">userId=1526 AND publishDate&lt;'2016-01-01';
+----------+</span>
<span class="header">| count(*) |
+----------+</span>
<span class="header">|        0 |
+----------+</span>
1 row in set (0.10 sec)
mysql&gt; source 1526.2016-01-01.sql；
mysql&gt; source 496.2016-01-01.sql；
mysql&gt; select count(<span class="strong">*) from  pe_t_subject_page where \
userId=1526 AND publishDate&lt;'2016-01-01';
+----------+
| count(*</span>) |
<span class="code">+----------+</span>
<span class="header">|    53226 |
+----------+</span>
1 row in set (0.04 sec)
</pre></td></tr></table></figure>

<p><img src="http://ww2.sinaimg.cn/large/6fbc15dcgw1f0jv4ti5b9j20er03xjsh.jpg" alt=""></p>
<h3 id="step_5_重新开启专题刷新">step 5 重新开启专题刷新</h3>
<p>@5.23</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">update</span> pe_t_subject <span class="keyword">set</span> state = <span class="number">1</span>,update_time = now() \
<span class="keyword">where</span> id <span class="keyword">in</span>
(<span class="number">4620</span>,<span class="number">4849</span>,<span class="number">4850</span>,<span class="number">4852</span>,<span class="number">4853</span>,<span class="number">4854</span>,<span class="number">4855</span>,<span class="number">4858</span>,<span class="number">4859</span>,<span class="number">4860</span>,\
<span class="number">4861</span>,<span class="number">4862</span>,<span class="number">4865</span>,<span class="number">4866</span>,<span class="number">4875</span>,<span class="number">4876</span>,<span class="number">4877</span>,<span class="number">4879</span>,<span class="number">4880</span>,<span class="number">4881</span>,\
<span class="number">4882</span>,<span class="number">4883</span>,<span class="number">4884</span>,<span class="number">4885</span>,<span class="number">4888</span>,<span class="number">5034</span>,<span class="number">5079</span>,<span class="number">5081</span>,<span class="number">5082</span>,<span class="number">5083</span>,\
<span class="number">5101</span>,<span class="number">5102</span>,<span class="number">5103</span>,<span class="number">5104</span>,<span class="number">5162</span>);</span>
<span class="operator"><span class="keyword">update</span> pe_t_subject <span class="keyword">set</span> state = <span class="number">1</span>,update_time = now() \
<span class="keyword">where</span> id <span class="keyword">in</span> (<span class="number">3418</span>,<span class="number">3419</span>);</span>
</pre></td></tr></table></figure>
]]></content>
    
    
      <category term="git" scheme="http://buttonwood.bitbucket.org/tags/git/"/>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/categories/Tips/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[gitlab使用说明]]></title>
    <link href="http://buttonwood.bitbucket.org/2015/01/16/2015-01-16-gitlab-workflow/"/>
    <id>http://buttonwood.bitbucket.org/2015/01/16/2015-01-16-gitlab-workflow/</id>
    <published>2015-01-16T11:51:00.000Z</published>
    <updated>2016-03-26T11:53:38.000Z</updated>
    <content type="html"><![CDATA[<p>这是gitlab搭建起来后，为团队内部写的简单配置说明。</p>
<h3 id="Step1:_Use_ssh-keygen_to_generate_a_new_pair_of_id_rsa_new_/_id_rsa_new-pub">Step1: Use <code>ssh-keygen</code> to generate a new pair of id_rsa_new / id_rsa_new.pub</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="built_in">cd</span> ~/.ssh
ssh-keygen -t rsa -C <span class="string">"tanhao2013@foxmail.com"</span> <span class="comment"># your email</span>
</pre></td></tr></table></figure>

<p><img src="http://ww1.sinaimg.cn/large/6fbc15dcjw1enxr1dp2asj20hw0blmz5.jpg" alt="step1"></p>
<h3 id="Step2:_Add_the_ssh_key_to_the_gitlab">Step2: Add the ssh key to the gitlab</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>cat gitlab_rsa.<span class="keyword">pub</span>
</pre></td></tr></table></figure>

<p><img src="http://ww3.sinaimg.cn/large/6fbc15dcgw1f2aib0m5kpj20uw06nwgq.jpg" alt="step2"></p>
<h3 id="Step3:_Modify_youy_~/-ssh/config">Step3: Modify youy <code>~/.ssh/config</code></h3>
<p><img src="http://ww2.sinaimg.cn/large/6fbc15dcgw1f2aidrh5o6j20at042dgh.jpg" alt="step3"></p>
<h3 id="Step4:_Testing">Step4: Testing</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>ssh-agent bash
ssh-<span class="keyword">add</span> ~/<span class="preprocessor">.ssh</span>/gitlab_rsa
<span class="preprocessor"># Input the password you set at step1</span>
<span class="preprocessor"># Enter passphrase for /root/.ssh/gitlab_rsa:</span>
<span class="preprocessor"># Identity added: /root/.ssh/gitlab_rsa (/root/.ssh/gitlab_rsa)</span>
ssh -T git@gitlab<span class="preprocessor">.mudan</span><span class="preprocessor">.com</span>
</pre></td></tr></table></figure>


<h3 id="Step5：_Use_it">Step5： Use it</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>cd workdir
git config --<span class="keyword">global</span> user.name <span class="string">"tanhao"</span>
git config --<span class="keyword">global</span> user.email <span class="string">"tanhao2013@foxmail.com"</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre>mkdir test
cd test
git init
touch README<span class="preprocessor">.md</span>
git <span class="keyword">add</span> README<span class="preprocessor">.md</span>
git commit -m <span class="string">"first commit"</span>
git remote <span class="keyword">add</span> origin ssh://git@*.*.*.*:<span class="number">1020</span>/tanhao/test<span class="preprocessor">.git</span>
git <span class="keyword">push</span> -u origin master
</pre></td></tr></table></figure>


<h3 id="Step6：_Windows_下使用方法">Step6： Windows 下使用方法</h3>
<p><a href="http://www.showerlee.com/archives/1300" target="_blank" rel="external">http://www.showerlee.com/archives/1300</a>        </p>
<h3 id="Step7：Eclipes_使用方法">Step7：Eclipes 使用方法</h3>
<p><a href="http://blog.csdn.net/luckarecs/article/details/7427605" target="_blank" rel="external">http://blog.csdn.net/luckarecs/article/details/7427605</a>        </p>
<h3 id="Step8：_多人协作及WorkFlow">Step8： 多人协作及WorkFlow</h3>
<p><a href="http://herry2013git.blog.163.com/blog/static/219568011201341111240751/" target="_blank" rel="external">http://herry2013git.blog.163.com/blog/static/219568011201341111240751/</a><br><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013760174128707b935b0be6fc4fc6ace66c4f15618f8d000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013760174128707b935b0be6fc4fc6ace66c4f15618f8d000</a></p>
<h3 id="References">References</h3>
<p><a href="http://www.kuqin.com/shuoit/20141213/343854.html" target="_blank" rel="external">http://www.kuqin.com/shuoit/20141213/343854.html</a><br><a href="http://www.2cto.com/os/201402/281792.html" target="_blank" rel="external">http://www.2cto.com/os/201402/281792.html</a><br><a href="http://www.cnblogs.com/BeginMan/p/3548139.html" target="_blank" rel="external">http://www.cnblogs.com/BeginMan/p/3548139.html</a><br><a href="http://my.oschina.net/csensix/blog/184434" target="_blank" rel="external">http://my.oschina.net/csensix/blog/184434</a></p>
]]></content>
    
    
      <category term="git" scheme="http://buttonwood.bitbucket.org/tags/git/"/>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/categories/Tips/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Writing idiomatic python]]></title>
    <link href="http://buttonwood.bitbucket.org/2015/01/14/Writing-idiomatic-python/"/>
    <id>http://buttonwood.bitbucket.org/2015/01/14/Writing-idiomatic-python/</id>
    <published>2015-01-14T11:43:00.000Z</published>
    <updated>2015-01-15T13:39:37.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_if_Statements">1.  <code>if</code> Statements</h3>
<h4 id="1-1-_Chain_comparisons_to_make_if_statements_more_concise">1.1. Chain comparisons to make <code>if</code> statements more concise</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">if</span> x &lt;= y <span class="keyword">and</span> y &lt;= <span class="symbol">z:</span>
    <span class="keyword">return</span> <span class="constant">Ture</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">if</span> <span class="number">1</span> &lt; x &lt; <span class="number">6</span>:
    <span class="built_in">print</span> <span class="string">'python'</span>
</pre></td></tr></table></figure>

<h4 id="1-2-_Avoid_placing_conditional_branch_code_on_the_same_line_as_the_colon">1.2. Avoid placing conditional branch code on the same line as the colon</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>name = <span class="string">'Tom'</span>
address = <span class="string">"NY"</span>
<span class="keyword">if</span> name: <span class="built_in">print</span>(name)
<span class="built_in">print</span>(address)
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>name = <span class="string">'Tom'</span>
address = <span class="string">"NY"</span>
<span class="keyword">if</span> name:
    <span class="built_in">print</span>(name)
<span class="built_in">print</span>(address)
</pre></td></tr></table></figure>

<h4 id="1-3-_Avoid_repeating_variable_name_in_compound_if_statement">1.3. Avoid repeating variable name in compound <code>if</code> statement</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>is_generic_name=<span class="keyword">False</span>
name=<span class="string">'Tom'</span>
<span class="keyword">if</span> name==<span class="string">'Tom'</span> <span class="keyword">or</span> name==<span class="string">'Dick'</span> <span class="keyword">or</span> name==<span class="string">'Harry'</span>:
    is_generic_name=<span class="keyword">True</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>name=<span class="string">'Tom'</span>
is_generic_name = name <span class="keyword">in</span> (<span class="string">'Tom'</span>,<span class="string">'Dick'</span>,<span class="string">'Harry'</span>)
</pre></td></tr></table></figure>

<h4 id="1-4-_Avoid_comparing_directly_to_True,False,or_None">1.4. Avoid comparing directly to <code>True</code>,<code>False</code>,or <code>None</code></h4>
<p>All of the following are considered <code>False</code><br>•<code>None</code><br>•<code>False</code><br>•zero for numeric types<br>•empty sequences<br>•empty dictionaries<br>•a value of <code>0</code> or <code>False</code> returned when either <code>__len__</code> or <code>__nonzero__</code> is called</p>
<p>Don’t</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">if</span> foo == <span class="keyword">True</span>:
    <span class="keyword">pass</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="keyword">if</span> foo:
    <span class="keyword">pass</span>

<span class="function"><span class="keyword">def</span> <span class="title">insert_value</span><span class="params">(value,position=None)</span>:</span>
    <span class="keyword">if</span> position <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:
        <span class="keyword">pass</span>
</pre></td></tr></table></figure>

<h4 id="1-5-_Use_if_and_else_as_a_short_ternary_operator_replacement(三元运算符_?_:)">1.5. Use if and else as a short ternary operator replacement(三元运算符 <code>? :</code>)</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>foo = True
<span class="keyword">value</span> = <span class="number">0</span>
<span class="keyword">if</span> foo:
    <span class="keyword">value</span> = <span class="number">1</span>
print(<span class="keyword">value</span>)
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>foo = True
<span class="keyword">value</span> = <span class="number">1</span> <span class="keyword">if</span> foo <span class="keyword">else</span> <span class="number">0</span>
print(<span class="keyword">value</span>)
</pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="2-_for_Loops">2.  <code>for</code> Loops</h3>
<h4 id="2-1-_enumerate_function_in_loops_instead_of_creating_an_index_variable">2.1.  <code>enumerate</code> function in loops instead of creating an index variable</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>my_container = [<span class="string">'Larry'</span>, <span class="string">'Moe'</span>, <span class="string">'Curly'</span>]
<span class="keyword">index</span> = <span class="number">0</span>
<span class="keyword">for</span> element in my_container:
    <span class="keyword">print</span> (<span class="string">'{} {}'</span>.<span class="keyword">format</span>(<span class="keyword">index</span>, element))
    <span class="keyword">index</span> += <span class="number">1</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>my_container = [<span class="string">'Larry'</span>, <span class="string">'Moe'</span>, <span class="string">'Curly'</span>]
<span class="keyword">for</span> index, <span class="keyword">element</span> <span class="operator">in</span> enumerate(my_container):
    print (<span class="string">'{} {}'</span>.<span class="built_in">format</span>(index, <span class="keyword">element</span>))
</pre></td></tr></table></figure>

<h4 id="2-2-_Use_the_in_keywords_to_iterate_over_an_iterable">2.2. Use the <code>in</code> keywords to iterate over an iterable</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>my_container = [<span class="string">'Larry'</span>, <span class="string">'Moe'</span>, <span class="string">'Curly'</span>]
<span class="keyword">index</span> = <span class="number">0</span>
<span class="keyword">while</span> <span class="keyword">index</span> &lt; len(my_container):
    <span class="keyword">print</span> (my_container[<span class="keyword">index</span>])
    <span class="keyword">index</span> += <span class="number">1</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>my_container = [<span class="string">'Larry'</span>, <span class="string">'Moe'</span>, <span class="string">'Curly'</span>]
<span class="keyword">for</span> ele <span class="keyword">in</span> my_container:
    <span class="built_in">print</span>(ele)
</pre></td></tr></table></figure>

<h4 id="2-3-_Use_else_to_execute_code_after_a_for_loop_concludes">2.3. Use <code>else</code> to  execute code after a for loop concludes</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="keyword">for</span> user <span class="keyword">in</span> get_all_users():
    has_malformed_email_address=<span class="keyword">False</span>
    print(<span class="string">'Checking{}'</span>.format(user))
    <span class="keyword">for</span> email_address <span class="keyword">in</span> user.get_all_email_addresses():
        <span class="keyword">if</span> email_is_malformed(email_address):
            has_malformed_email_address=<span class="keyword">True</span>
            print(<span class="string">'Has a malformede mail address!'</span>)
            <span class="keyword">break</span>
    <span class="keyword">if</span> <span class="keyword">not</span> has_malformed_email_address:
        print(<span class="string">'All email addresses are valid!'</span>)
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="keyword">for</span> user <span class="keyword">in</span> get_all_users():
    <span class="keyword">print</span>(<span class="string">'Checking{}'</span>.<span class="keyword">format</span>(user))
    <span class="keyword">for</span> email_address <span class="keyword">in</span> user.get_all_email_addresses():
        <span class="keyword">if</span> email_is_malformed(email_address):
            <span class="keyword">print</span>(<span class="string">'Has a malformede mail address!'</span>)
            <span class="keyword">break</span>
    <span class="keyword">else</span>:
        <span class="keyword">print</span>(<span class="string">'All email addresses are valid!'</span>)
</pre></td></tr></table></figure>

<h3 id="3-_Functions">3. Functions</h3>
<h4 id="3-1-_Avoid_using_a_mutable_object_as_the_default_value_for_a_function_argument">3.1. Avoid using a mutable object as the default value for a function argument</h4>
<p><code>list</code>,<code>dict</code>,<code>set</code> and most <code>class</code> instances are mutable.<br><code>string</code>,<code>int</code>,<code>tuple</code> objects are all immutabled.      </p>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(a,L=[])</span>:</span>
    L.append(a)
    <span class="keyword">return</span> L
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(a,L=None)</span>:</span>
    <span class="keyword">if</span> L <span class="keyword">is</span> <span class="keyword">None</span>:
        L = []
    L.append(a)
    <span class="keyword">return</span> L
</pre></td></tr></table></figure>

<h4 id="3-2-_Use_return_to_evaluate_expressions_in_addition_to_return_values">3.2. Use <code>return</code> to evaluate expressions in addition to return values</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">all_equal</span><span class="params">(a,b,c)</span>:</span>
    result=<span class="keyword">False</span>
    <span class="keyword">if</span> a==b==c:
        result=<span class="keyword">True</span>
    <span class="keyword">return</span> result
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">all_equal</span><span class="params">(a,b,c)</span>:</span>
    <span class="keyword">return</span> a==b==c
</pre></td></tr></table></figure>

<h4 id="3-3-_Learn_to_use_keyword_arguments_properly">3.3. Learn to use keyword arguments properly</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">print_list</span><span class="params">(list_value,sep)</span>:</span>
    print(<span class="string">'{}'</span>.format(sep).join(list_value))

the_list=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]
the_other_list=[<span class="string">'Jeff'</span>,<span class="string">'hates'</span>,<span class="string">'Java'</span>]
print_list(the_list,<span class="string">''</span>)
print_list(the_other_list,<span class="string">''</span>)
print_list(the_other_list,<span class="string">','</span>)
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">print_list</span><span class="params">(list_value,sep=<span class="string">' '</span>)</span>:</span>
    print(<span class="string">'{}'</span>.format(sep).join(list_value))

the_list=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]
the_other_list=[<span class="string">'Jeff'</span>,<span class="string">'hates'</span>,<span class="string">'Java'</span>]
print_list(the_list)
print_list(the_other_list)
print_list(the_other_list,<span class="string">','</span>)
</pre></td></tr></table></figure>

<h4 id="3-4-_Use_*args_and_**kwargs_to_accept_arbitrary_arguments">3.4. Use <code>*args</code> and <code>**kwargs</code> to accept arbitrary arguments</h4>
<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">call</span><span class="params">(foo,bar,baz,*args,**kwargs)</span>:</span>
    baz_coefficient = kwargs[<span class="string">'the_baz'</span>]
    <span class="keyword">return</span> baz_coefficient <span class="keyword">in</span> some_function(args)
</pre></td></tr></table></figure>

<h4 id="3-5-_Learn_to_treat_functions_as_values">3.5. Learn to treat functions as values</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">print_addition_table</span><span class="params">()</span>:</span>
    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">4</span>):
        <span class="keyword">for</span> y <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">4</span>):
            print(str(x+y)+<span class="string">'\n'</span>)

<span class="function"><span class="keyword">def</span> <span class="title">print_subtraction_table</span><span class="params">()</span>:</span>
    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">4</span>):
        <span class="keyword">for</span> y <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">4</span>):
            print(str(x-y)+<span class="string">'\n'</span>)

<span class="function"><span class="keyword">def</span> <span class="title">print_multiplication_table</span><span class="params">()</span>:</span>
    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">4</span>):
        <span class="keyword">for</span> y <span class="keyword">in</span> xrange(<span class="number">0</span>,<span class="number">4</span>):
            print(str(x*y)+<span class="string">'\n'</span>)

<span class="function"><span class="keyword">def</span> <span class="title">print_division_table</span><span class="params">()</span>:</span>
    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">4</span>):
        <span class="keyword">for</span> y <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">4</span>):
            print(str(x/y)+<span class="string">'\n'</span>)

print_addition_table()
print_subtraction_table()
print_multiplication_table()
print_division_table()
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="keyword">import</span> operator <span class="keyword">as</span> op
<span class="function"><span class="keyword">def</span> <span class="title">print_table</span><span class="params">(operator)</span>:</span>
    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">4</span>):
        <span class="keyword">for</span> y <span class="keyword">in</span> xrange(<span class="number">0</span>,<span class="number">4</span>):
            print(operator(x,y)+<span class="string">'\n'</span>)

<span class="keyword">for</span> operator <span class="keyword">in</span> (op.add,op.sub,op.mul,op.div):
    print_table(operator)
</pre></td></tr></table></figure>

<h4 id="3-6-_Use_the_function-based_version_of_print">3.6. Use the function-based version of <code>print</code></h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="built_in">print</span> <span class="number">1</span>,<span class="string">'foo'</span>,__name__
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function
print(<span class="number">1</span>,<span class="string">'foo'</span>,__name__)
</pre></td></tr></table></figure>

<h3 id="4-_Exceptions">4. <code>Exceptions</code></h3>
<h4 id="4-1-_Don’t_be_Afraid_to_Use_Exceptions">4.1. Don’t be Afraid to Use <code>Exceptions</code></h4>
<h4 id="4-2-_Use_Exceptions_to_Write_Code_in_an_“EAFP”_Style">4.2. Use <code>Exceptions</code> to Write Code in an “EAFP” Style</h4>
<p>Code that doesn’t use <code>exceptions</code> is always checking if it’s OK to do something.</p>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">get_log_level</span><span class="params">(config_dict)</span>:</span>
    <span class="keyword">if</span><span class="string">'ENABLE_LOGGING'</span> <span class="keyword">in</span> config_dict:
        <span class="keyword">if</span> config_dict[<span class="string">'ENABLE_LOGGING'</span>] !=<span class="keyword">True</span>:
            <span class="keyword">return</span> <span class="keyword">None</span>
        <span class="keyword">elif</span> <span class="keyword">not</span> <span class="string">'DEFAULT_LOG_LEVEL'</span> <span class="keyword">in</span> config_dict:
            <span class="keyword">return</span> <span class="keyword">None</span>
        <span class="keyword">else</span>:
            <span class="keyword">return</span> config_dict[<span class="string">'DEFAULT_LOG_LEVEL'</span>]
    <span class="keyword">else</span>:
        <span class="keyword">return</span> <span class="keyword">None</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">get_log_level</span><span class="params">(config_dict)</span>:</span>
    <span class="keyword">try</span>:
        <span class="keyword">if</span> config_dict[<span class="string">'ENABLE_LOGGING'</span>]:
            <span class="keyword">return</span> config_dict[<span class="string">'DEFAULT_LOG_LEVEL'</span>]
    <span class="keyword">except</span> KeyError:
        <span class="comment">#if either value wasn't present,a</span>
        <span class="comment">#KeyError will be raised,so</span>
        <span class="comment">#return None</span>
        <span class="keyword">return</span> <span class="keyword">None</span>
</pre></td></tr></table></figure>

<h4 id="4-3-_Avoid_‘’Swallowing’’_Useful_Exceptions_With_Bare_Except_Clauses">4.3. Avoid ‘’Swallowing’’ Useful <code>Exceptions</code> With Bare Except Clauses</h4>
<p>A common mistake made by novices when using <code>exceptions</code> is to feel compelled to catch anye xception code could raise.</p>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="keyword">import</span> requests
<span class="function"><span class="keyword">def</span> <span class="title">get_json_response</span><span class="params">(url)</span>:</span>
    <span class="keyword">try</span>:
        r=requests.get(url)
        <span class="keyword">return</span> r.json()
    <span class="keyword">except</span>:
        print(<span class="string">'Oops,somethingwentwrong!'</span>)
        <span class="keyword">return</span> <span class="keyword">None</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="keyword">import</span> requests
<span class="function"><span class="keyword">def</span> <span class="title">get_json_response</span><span class="params">(url)</span>:</span>
    <span class="keyword">return</span> requests.get(url).json()

<span class="comment">#If we need to make note of the exception,we</span>
<span class="comment">#would write the function this way...</span>
<span class="function"><span class="keyword">def</span> <span class="title">alternate_get_json_response</span><span class="params">(url)</span>:</span>
    <span class="keyword">try</span>:
        r=requests.get(url)
        returnr.json()
    <span class="keyword">except</span>:
        <span class="comment">#do some logging here,but don't handle the exception</span>
        <span class="comment">#...</span>
        <span class="keyword">raise</span>
</pre></td></tr></table></figure>

<h4 id="5-_Data_Structure">5. Data Structure</h4>
<h4 id="5-1_Use_multiple_assignment_to_condense_variables_all_set_to_the_same_value">5.1 Use multiple assignment to condense variables all set to the same value</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="attribute">x </span>=<span class="string"> y = z = 5</span>
</pre></td></tr></table></figure><br>instead of<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="setting">x = <span class="value"><span class="number">5</span></span></span>
<span class="setting">y = <span class="value"><span class="number">5</span></span></span>
<span class="setting">z = <span class="value"><span class="number">5</span></span></span>
</pre></td></tr></table></figure>

<h4 id="5-2-_Avoid_using_a_temporary_variable_when_performing_a_swap_of_two_values">5.2. Avoid using a temporary variable when performing a swap of two values</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="xml"><span class="tag"><span class="attribute">x</span> = <span class="attribute">10</span>
<span class="attribute">y</span> = <span class="attribute">5</span>
# <span class="attribute">tmp</span>=<span class="value">x,</span> <span class="attribute">x</span>=<span class="value">y,</span> <span class="attribute">y</span>=<span class="value">temp</span>
<span class="attribute">x</span>, <span class="attribute">y</span> = <span class="attribute">y</span>, <span class="attribute">x</span></span></span>
</pre></td></tr></table></figure>

<h4 id="5-3-_Chain_string_functions_to_make_a_simple_series_of_transformations_more_clear">5.3. Chain string functions to make a simple series of transformations more clear</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>str1 = <span class="string">'i am a bug!'</span>
str4 = str1.strip().<span class="built_in">upper</span>().<span class="built_in">replace</span>(<span class="string">'!'</span>, <span class="string">'?'</span>)
</pre></td></tr></table></figure>

<h4 id="5-4-_Use_&#39;&#39;-join_when_creating_a_single_string_for_list_elements">5.4. Use <code>&#39;&#39;.join</code> when creating a single string for <code>list</code> elements</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>mylist = [<span class="string">'i'</span>, <span class="string">'am'</span>, <span class="string">'a'</span>, <span class="string">'bug'</span>]
resultStr = <span class="string">''</span>.<span class="keyword">join</span>(mylist)
</pre></td></tr></table></figure>

<h4 id="5-5-_Prefer_the_format_function_for_formatting_strings">5.5. Prefer the <code>format</code> function for formatting strings</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="setting">name = <span class="value"><span class="string">"tony"</span></span></span>
<span class="setting">age = <span class="value"><span class="number">100</span></span></span>
<span class="setting">str2 = <span class="value"><span class="string">"myname : {} my age {}"</span>.format(name, age)</span></span>
</pre></td></tr></table></figure>

<h4 id="5-6-_Usea_list_comprehension_to_create_a_transformed_version_of_an_existing_list">5.6. Usea <code>list</code> comprehension to create a transformed version of an existing <code>list</code></h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>mylist = <span class="keyword">range</span>(<span class="number">20</span>)
odd_list = [e <span class="keyword">for</span> e <span class="keyword">in</span> mylist <span class="keyword">if</span> e % <span class="number">2</span> == <span class="number">1</span>]
last_five_list = mylist[-<span class="number">5</span>:]
</pre></td></tr></table></figure>

<h4 id="5-7-_Prefer_list_comprehensions_to_the_built-in_map()_and_filter()_functions">5.7. Prefer <code>list</code> comprehensions to the built-in <code>map()</code> and <code>filter()</code> functions</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre>the_list=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]

<span class="function"><span class="keyword">def</span> <span class="title">is_odd</span><span class="params">(number)</span>:</span>
    retrun number % <span class="number">2</span> == <span class="number">1</span>

odd_numbers=filter(is_odd,the_list)
odd_numbers_times_two=list(map(lambdax:x*<span class="number">2</span>,odd_numbers))
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>odd_numbers_times_two = [n*<span class="number">2</span> <span class="keyword">for</span> n <span class="keyword">in</span> the_list <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span>]
</pre></td></tr></table></figure>

<h4 id="5-8-_Use_the_built-in_function_sum_to_calculate_the_sum_of_a_list_of_values">5.8. Use the built-in function <code>sum</code> to calculate the sum of a list of values</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="attribute">the_sum </span>=<span class="string"> sum(the_list)</span>
</pre></td></tr></table></figure>

<h4 id="5-9-_Use_all_to_determine_if_all_elements_of_an_iterable_are_True">5.9. Use <code>all</code> to determine if all elements of an iterable are <code>True</code></h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">contains_zero</span><span class="params">(itor)</span>:</span>
    <span class="string">"""all只有在列表中的每个元素都返回True时才会返回True"""</span>
    <span class="keyword">return</span> <span class="keyword">not</span> all(itor)
</pre></td></tr></table></figure>


<h4 id="5-10-_Prefer_xrange_to_range_unless_you_need_the_resulting_list">5.10. Prefer <code>xrange</code> to <code>range</code> unless you need the resulting list</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="keyword">for</span> <span class="keyword">index</span> in xrange(<span class="number">3</span>, <span class="number">1000000000</span>):
    <span class="keyword">if</span> <span class="keyword">index</span> % <span class="number">2</span> == <span class="number">0</span>:
        <span class="keyword">print</span> <span class="keyword">index</span>
</pre></td></tr></table></figure>

<h4 id="5-11-_用dict对象完成_switch…case…_的功能">5.11. 用dict对象完成 switch…case… 的功能</h4>
<h4 id="5-12-_使用dict-get方法可以提供一个默认值">5.12. 使用dict.get方法可以提供一个默认值</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>print mydict.<span class="keyword">get</span>(<span class="string">'b'</span>, <span class="number">2</span>)
</pre></td></tr></table></figure>

<h4 id="5-13-_list/dict/set_comprehension">5.13. <code>list/dict/set</code> comprehension</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>user_list = [{<span class="string">'name'</span>: <span class="string">'lucy'</span>, <span class="string">'email'</span>: <span class="string">'lucy@g.com'</span>}, {<span class="string">'name'</span>: <span class="string">'lily'</span>,\
<span class="string">'email'</span>: <span class="string">'lily@g.com'</span>}]
{user[<span class="string">'name'</span>]: user[<span class="string">'email'</span>] <span class="keyword">for</span> user <span class="keyword">in</span> user_list <span class="keyword">if</span> <span class="string">'email'</span> <span class="keyword">in</span> user}

users_first_names = {user.first_name <span class="keyword">for</span> user <span class="keyword">in</span> users}
</pre></td></tr></table></figure>

<h4 id="5-14-_Use_sets_to_eliminate_duplicate_entries_from_Iterable_containers">5.14. Use <code>sets</code> to eliminate duplicate entries from Iterable containers</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>unique_names = <span class="keyword">set</span>(name_list)
</pre></td></tr></table></figure>

<h4 id="5-15-_Use_collections-namedtuple_to_make_tuple-heavy_code_more_clear">5.15. Use <code>collections.namedtuple</code> to make tuple-heavy code more clear</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre>rows = [(<span class="string">'lily'</span>, <span class="number">20</span>, <span class="number">2000</span>), (<span class="string">'lucy'</span>, <span class="number">19</span>, <span class="number">2500</span>)]
<span class="keyword">for</span> row <span class="keyword">in</span> rows:
    <span class="keyword">print</span> <span class="string">'{}` age is {}, salary is {} '</span>.format(row[<span class="number">0</span>], row[<span class="number">1</span>], row[<span class="number">2</span>])

<span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple
Employee = namedtuple(<span class="string">'Employee'</span>, <span class="string">'name, age, salary'</span>)
<span class="keyword">for</span> row <span class="keyword">in</span> rows:
    employee = Employee._make(row)
    <span class="keyword">print</span> <span class="string">'{}` age is {}, salary is {} '</span>.format(employee.name, employee.age, employee.salary)
</pre></td></tr></table></figure>


<h4 id="5-16-_Use___as_a_placeholder_for_data_in_a_tuple_that_should_be_ignored">5.16. Use <code>_</code> as a placeholder for data in a <code>tuple</code> that should be ignored</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>(<span class="property">name</span>,age,temp,temp2)=get_user_info(user)
<span class="keyword">if</span> age&gt;<span class="number">21</span>:
    output='{<span class="property">name</span>} can drink!'.format(<span class="property">name</span>=<span class="property">name</span>)
<span class="comment">#"Wait,where are temp and temp2 being used?"</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>(<span class="property">name</span>,age,_,_)=get_user_info(user)
<span class="keyword">if</span> age&gt;<span class="number">21</span>:
    output='{<span class="property">name</span>} cand rink!'.format(<span class="property">name</span>=<span class="property">name</span>)
<span class="comment">#"Clearly,only name and age are interesting"</span>
</pre></td></tr></table></figure>

<h4 id="5-17-_Use_tuples_to_unpack_data">5.17. Use <code>tuples</code> to unpack data</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre>list_from_comma_separated_value_file=['dog','Fido',<span class="number">10</span>]
animal=list_from_comma_separated_value_file[<span class="number">0</span>]
<span class="property">name</span>=list_from_comma_separated_value_file[<span class="number">1</span>]
age=list_from_comma_separated_value_file[<span class="number">2</span>]

output=('{<span class="property">name</span>} <span class="keyword">the</span> {animal} <span class="keyword">is</span> {age} years old'.format(\
    animal=animal,<span class="property">name</span>=<span class="property">name</span>,age=age))
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>list_from_comma_separated_value_file=['dog','Fido',<span class="number">10</span>]
(animal,<span class="property">name</span>,age)=list_from_comma_separated_value_file
output=('{<span class="property">name</span>} <span class="keyword">the</span> {animal} <span class="keyword">is</span> {age} years old'.format(\
    animal=animal,<span class="property">name</span>=<span class="property">name</span>,age=age))
</pre></td></tr></table></figure>

<h4 id="5-18-_Use_a_tuple_to_return_multiple_values_from_a_function">5.18. Use a <code>tuple</code> to <code>return</code> multiple values from a function</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="keyword">from</span> collections <span class="keyword">import</span> Counter
<span class="function"><span class="keyword">def</span> <span class="title">calculate_staistics</span><span class="params">(value_list)</span>:</span>
    mean=float(sum(value_list)/len(value_list))
    median=value_list[int(len(value_list)/<span class="number">2</span>)]
    mode=Counter(value_list).most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">0</span>]
    <span class="keyword">return</span>(mean,median,mode)

(mean,median,mode)=calculate_staistics([<span class="number">10</span>,<span class="number">20</span>,<span class="number">20</span>,<span class="number">30</span>])
</pre></td></tr></table></figure>

<h3 id="6-_Classes">6. Classes</h3>
<h4 id="6-1-_Use_the_isinstance_function_to_determine_the_type_of_ano_bject">6.1. Use the <code>isinstance</code> function to determine the type of ano bject</h4>
<p>用<code>isinstance</code>来判断对象的类型</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">get_size</span><span class="params">(some_object)</span>:</span>
    <span class="keyword">if</span> isinstance(some_object, (list, dict, str, tuple)):
        <span class="keyword">return</span> len(some_object)
    <span class="keyword">elif</span> isinstance(some_object, (bool, type(<span class="keyword">None</span>))):
        <span class="keyword">return</span> <span class="number">1</span>
    <span class="keyword">elif</span> isinstance(some_object, (int, float)):
        <span class="keyword">return</span> int(some_object)
</pre></td></tr></table></figure>

<h4 id="6-2-_Use_leading_underscores_in_function_and_variable_names_to_denote">6.2. Use leading underscores in function and variable names to denote</h4>
<p>private attribute<br>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span>   <span class="title">Foo</span><span class="params">(object)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>
        self.id=<span class="number">8</span>
        self.value=self.get_value()

    <span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(self)</span>:</span>
        <span class="keyword">pass</span>

    <span class="function"><span class="keyword">def</span> <span class="title">should_destroy_earth</span><span class="params">(self)</span>:</span>
        <span class="keyword">return</span> self.id==<span class="number">42</span>

<span class="class"><span class="keyword">class</span> <span class="title">Baz</span><span class="params">(Foo)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(self,some_new_parameter)</span>:</span>
        <span class="string">"""Since 'get_value' is called from the base class's __init__ method
        and the base class definition doesn't take a parameter,trying to
        createa Baz instance will fail"""</span>
        <span class="keyword">pass</span>

<span class="class"><span class="keyword">class</span> <span class="title">Qux</span><span class="params">(Foo)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>
        <span class="string">"""We aren't aware of Foo's internals,and we innocently createan
        instance attribute named'id' and set it to 42.This overwrites
        Foo's id attribute and we inadvertently blow up the earth."""</span>
        super(Qux,self).__init__()
        self.id=<span class="number">42</span>

q=Qux()
b=Baz() <span class="comment">#Raises'TypeError'</span>
q.should_destroy_earth()<span class="comment">#returnsTrue</span>
q.id==<span class="number">42</span><span class="comment">#returnsTrue</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">Foo</span><span class="params">(object)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>
        <span class="string">""" Since 'id' is of vital importance to us,we don't want a derived
        class accidentally overwriting it.We'll prepend with double
        underscores to introduce name mangling."""</span>
        self.__id=<span class="number">8</span>
        self.value=self.__get_value() <span class="comment"># call our 'private copy'</span>

    <span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(self)</span>:</span>
        <span class="keyword">pass</span>

    <span class="function"><span class="keyword">def</span> <span class="title">should_destroy_earth</span><span class="params">(self)</span>:</span>
        <span class="keyword">return</span> self.__id==<span class="number">42</span>

    <span class="comment">#Here,we're storing a 'private copy' of get_value,</span>
    <span class="comment">#and assigning it to '__get_value'.Even if aderived</span>
    <span class="comment">#class overrides get_value in a way incompatible with</span>
    <span class="comment">#ours,we're fine</span>
    __get_value=get_value

<span class="class"><span class="keyword">class</span> <span class="title">Baz</span><span class="params">(Foo)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(self,some_new_parameter)</span>:</span>
        <span class="keyword">pass</span>

<span class="class"><span class="keyword">class</span> <span class="title">Qux</span><span class="params">(Foo)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>
        <span class="string">""" Now when we set 'id' to 42,it's not the same 'id' that
        'should_destroy_earth' is concerned with. In fact,if you inspecta
        Qux object,you'll find it doesn't havean __id attribute.So we can't
        mistakenly change Foo's__id attribute even if we wanted to."""</span>
        super(Qux,self).__init__()
        <span class="comment">#No relation to Foo's id,purely coincidental</span>
        self.id=<span class="number">42</span>

q=Qux()
b=Baz() <span class="comment">#Works fine now</span>
q.should_destroy_earth()<span class="comment">#returns False</span>
q.id==<span class="number">42</span> <span class="comment">#returns True</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="code"><pre><span class="comment"># "private" data</span>
<span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(object)</span>:</span>
    __i = <span class="number">1</span>
 
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>
        self._j = <span class="number">2</span>
 
    <span class="function"><span class="keyword">def</span> <span class="title">printJ</span><span class="params">(self)</span>:</span>
        <span class="keyword">return</span> self._j
       
<span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(A)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>
        super(B, self).__init__()
        self._j = <span class="number">3</span>
 
b = B()
<span class="keyword">print</span> b.printJ()
<span class="string">"""比如某一个类属性以下划线(_)
开头，则是显式的的约定该成员是具有私有属性的，最好不要在外部直接调用"""</span>

<span class="string">"""而双下划线(__)开头的成员更具有“私有”的属性，
因为在外部不能直接调用，因为python解译器把这些的成员名称进行变形处理，
使外部不能轻易直接访问。"""</span>
<span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(object)</span>:</span>
    __i = <span class="number">1</span>
 
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>
        self.__j = <span class="number">2</span>
 
    <span class="function"><span class="keyword">def</span> <span class="title">printJ</span><span class="params">(self)</span>:</span>
        <span class="keyword">return</span> self.__j
       
<span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(A)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>
        super(B, self).__init__()
        self.__j = <span class="number">3</span>
 
b = B()
<span class="keyword">print</span> b.printJ()
</pre></td></tr></table></figure>


<h4 id="6-3-_Use_properties_to_“future-proof”_your_class_implementation">6.3. Use properties to “future-proof” your class implementation</h4>
<p>Oftentimes,it is convenient to provide direct access to a class’s data attributes.A Point class,for example,may have x and y attributes rather than using <code>getter</code> and <code>setter</code> functions.<br>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">Product</span>(<span class="title">object</span>):</span>
    default__init_<span class="number">_</span>(<span class="keyword">self</span>,name,price)<span class="symbol">:</span>
        <span class="keyword">self</span>.name=name
        <span class="keyword">self</span>.price =price
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">Product</span><span class="params">(object)</span>:</span>
    default__init__(self,name,price):
        self.name=name
        self.price =price

    <span class="decorator">@property</span>
    <span class="function"><span class="keyword">def</span> <span class="title">price</span><span class="params">(self)</span>:</span>
        <span class="comment">#now if we need to change how price is calculated,we can do it</span>
        <span class="comment">#here(or in the "setter" and __init__)</span>
        retrun self._price * TAX_RATE

    <span class="decorator">@price.setter</span>
    <span class="function"><span class="keyword">def</span> <span class="title">price</span><span class="params">(self,value)</span>:</span>
        <span class="comment">#The "setter" function must have the same name as the property</span>
        self._price=value
</pre></td></tr></table></figure>


<h4 id="6-4-_Use___repr___for_a_machine-readable_representation_of_a_class_and_deﬁne___str___in_a_class_to_show_a_human-readable_representation">6.4. Use <code>__repr__</code> for a machine-readable representation of a class and deﬁne <code>__str__</code> in a class to show a human-readable representation</h4>
<p>While <code>__str__</code> is used for printing a class in a way that a human can read,<code>__repr__</code> is used for machines to read.<br>Don’t</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">Foo</span><span class="params">(object)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,bar=<span class="number">10</span>,baz=<span class="number">12</span>,cache=None)</span>:</span>
        self.bar=bar
        self.baz=baz
        self._cache=cache <span class="keyword">or</span> {}

    def__str__(self):
        <span class="keyword">return</span><span class="string">'Bar is{},Baz is{}'</span>.format(self.bar,self.baz)

<span class="function"><span class="keyword">def</span> <span class="title">log_to_console</span><span class="params">(instance)</span>:</span>
    print(instance)

log_to_console([Foo(),Foo(cache={<span class="string">'x'</span>:<span class="string">'y'</span>})])
</pre></td></tr></table></figure>

<p>Do</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">Foo</span><span class="params">(object)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,bar=<span class="number">10</span>,baz=<span class="number">12</span>,cache=None)</span>:</span>
        self.bar=bar
        self.baz=baz
        self._cache=cache <span class="keyword">or</span> {}

    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span>
        <span class="keyword">return</span> <span class="string">'Bar is{},Baz is{}'</span>.format(self.bar,self.baz)

    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span>
        <span class="keyword">return</span> <span class="string">'Foo({},{},{})'</span>.format(self.bar,self.baz,self._cache)

<span class="function"><span class="keyword">def</span> <span class="title">log_to_console</span><span class="params">(instance)</span>:</span>
    print(instance)

log_to_console([Foo(),Foo(cache={<span class="string">'x'</span>:<span class="string">'y'</span>})])
</pre></td></tr></table></figure>


<h3 id="7-_Context_Managers">7. Context Managers</h3>
<h4 id="7-1-_Use_a_context_manager_to_ensure_resources_are_properly_managed">7.1. Use a context manager to ensure resources are properly managed</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>file_handle=<span class="built_in">open</span>(path_to_file,<span class="string">'r'</span>)
<span class="keyword">for</span> <span class="built_in">line</span> <span class="operator">in</span> file_handle.readlines():
    <span class="keyword">if</span> raise_exception(<span class="built_in">line</span>):
        print(<span class="string">'No!An Exception!'</span>)
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="operator">with</span> <span class="built_in">open</span>(path_to_file,<span class="string">'r'</span>) <span class="keyword">as</span> file_handle:
    <span class="keyword">for</span> <span class="built_in">line</span> <span class="operator">in</span> file_handle:
        <span class="keyword">if</span> raise_exception(<span class="built_in">line</span>):
            print(<span class="string">'No!AnException!'</span>)
</pre></td></tr></table></figure>

<h4 id="8-_Generators">8. Generators</h4>
<h4 id="8-1-_Prefer_a_generator_expression_to_a_list_comprehension_for_simple_iteration">8.1. Prefer a <code>generator</code> expression to a list comprehension for simple iteration</h4>
<p>generator, 用 (…) 代替 [….], 就像用xrange代替range一样        </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">for</span> e <span class="keyword">in</span> (i * <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> oneList):
    <span class="keyword">pass</span>
</pre></td></tr></table></figure>

<h4 id="8-2-_Use_a_generator_to_lazily_load_inﬁnite_sequences">8.2. Use a <code>generator</code> to lazily load inﬁnite sequences</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">get_twitter_stream_for_keyword</span><span class="params">(keyword)</span>:</span>
    imaginary_twitter_api=ImaginaryTwitterAPI()
    <span class="keyword">if</span> imaginary_twitter_api.can_get_stream_data(keyword):
        <span class="keyword">return</span> imaginary_twitter_api.get_stream(keyword)

current_stream=get_twitter_stream_for_keyword(<span class="string">'#jeffknupp'</span>)
<span class="keyword">for</span> tweet <span class="keyword">in</span> current_stream:
    process_tweet(tweet)

<span class="function"><span class="keyword">def</span> <span class="title">get_list_of_incredibly_complex_calculation_results</span><span class="params">(data)</span>:</span>
    <span class="keyword">return</span>  [first_incredibly_long_calculation(data),\
    second_incredibly_long_calculation(data),\
    third_incredibly_long_calculation(data)]
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">get_twitter_stream_for_keyword</span><span class="params">(keyword)</span>:</span>
    imaginary_twitter_api=ImaginaryTwitterAPI()
    <span class="keyword">while</span> imaginary_twitter_api.can_get_stream_data(keyword):
        <span class="keyword">yield</span> imaginary_twitter_api.get_stream(keyword)

<span class="keyword">for</span> tweet <span class="keyword">in</span> get_twitter_stream_for_keyword(<span class="string">'#jeffknupp'</span>):
    <span class="keyword">if</span> got_stop_signal:
        <span class="keyword">break</span>
    process_tweet(tweet)

<span class="function"><span class="keyword">def</span> <span class="title">get_list_of_incredibly_complex_calculation_results</span><span class="params">(data)</span>:</span>
    <span class="keyword">yield</span> first_incredibly_long_calculation(data)
    <span class="keyword">yield</span> second_incredibly_long_calculation(data)
    <span class="keyword">yield</span> third_incredibly_long_calculation(data)
</pre></td></tr></table></figure>


<h3 id="10-_Organizing_Your_Code">10. Organizing Your Code</h3>
<h4 id="10-1-_Use_all_capital_letters_when_declaring_global_constant_values">10.1. Use all capital letters when declaring global constant values</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>SECONDS_IN_A_DAY=<span class="number">60</span><span class="variable">*60</span><span class="variable">*24</span>
</pre></td></tr></table></figure>

<h4 id="10-2-_Avoid_placing_multiple_statements_on_a_single_line">10.2. Avoid placing multiple statements on a single line</h4>
<h4 id="10-3-_Multiple_line_docstring_&quot;&quot;&quot;&quot;&quot;&quot;">10.3. Multiple line docstring  <code>&quot;&quot;&quot;&quot;&quot;&quot;</code></h4>
<h4 id="10-4-_Document_what_something_does,not_how">10.4. Document what something does,not how</h4>
<h4 id="10-5-_Arrange_your_import_statements_in_a_standard_order">10.5. Arrange your <code>import</code> statements in a standard order</h4>
<h4 id="10-6-_Prefer_absolute_imports_to_relative_imports">10.6. Prefer absolute <code>imports</code> to relative <code>imports</code></h4>
<h4 id="10-7-_Do_not_use_from_foo_import_*_to_import_the_contents_of_a_module-">10.7. Do not use <code>from foo import *</code> to import the contents of a module.</h4>
<h4 id="10-8-_Use_the_tuples_to_organizea_long_list_of_modules_to_import">10.8. Use the tuples to organizea long list of modules to import</h4>
<h4 id="10-9-_Make_use_of___init__-py_ﬁles_to_simplify_package_interfaces">10.9. Make use of <code>__init__.py</code> ﬁles to simplify package interfaces</h4>
<h4 id="10-10-_Separate_your_test_code_from_your_application_code">10.10. Separate your test code from your application code</h4>
<h4 id="10-11-_Use_unit_tests_to_aidin_refactoring">10.11. Use <code>unit tests</code> to aidin refactoring</h4>
<h3 id="Refernces">Refernces</h3>
<p><a href="http://wenku.baidu.com/link?url=x9aJ0UOZ4JFw_Te7WlQZMiQbSoLVaQM9Kxl3j-aQwZ-ZLSJ9pPwCg-vWmtHBLNShLbvLstWSjQi7ExwVVxiEgV4u7sI51FRDHXi_ya-U--m" target="_blank" rel="external">1.Writing idiomatic python</a></p>
<p><a href="http://www.cnblogs.com/jcli/p/3629053.html" target="_blank" rel="external">2.Writing idiomatic python in ZH</a></p>
<p><a href="http://jeffknupp.com/blog/2014/01/31/a-python-app-to-see-what-people-are-saying-about-you/" target="_blank" rel="external">http://jeffknupp.com/blog/2014/01/31/a-python-app-to-see-what-people-are-saying-about-you/</a></p>
<p><a href="http://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/" target="_blank" rel="external">http://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/</a></p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="1-_if_Statements">1.  <code>if</code> Statements</h3>
<h4 id="1-1-_Chain_comparisons_to_make_if_statements_more_concise">1.1. Chain comparisons to make <code>if</code> statements more concise</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">if</span> x &lt;= y <span class="keyword">and</span> y &lt;= <span class="symbol">z:</span>
    <span class="keyword">return</span> <span class="constant">Ture</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">if</span> <span class="number">1</span> &lt; x &lt; <span class="number">6</span>:
    <span class="built_in">print</span> <span class="string">'python'</span>
</pre></td></tr></table></figure>

<h4 id="1-2-_Avoid_placing_conditional_branch_code_on_the_same_line_as_the_colon">1.2. Avoid placing conditional branch code on the same line as the colon</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>name = <span class="string">'Tom'</span>
address = <span class="string">"NY"</span>
<span class="keyword">if</span> name: <span class="built_in">print</span>(name)
<span class="built_in">print</span>(address)
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>name = <span class="string">'Tom'</span>
address = <span class="string">"NY"</span>
<span class="keyword">if</span> name:
    <span class="built_in">print</span>(name)
<span class="built_in">print</span>(address)
</pre></td></tr></table></figure>

<h4 id="1-3-_Avoid_repeating_variable_name_in_compound_if_statement">1.3. Avoid repeating variable name in compound <code>if</code> statement</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>is_generic_name=<span class="keyword">False</span>
name=<span class="string">'Tom'</span>
<span class="keyword">if</span> name==<span class="string">'Tom'</span> <span class="keyword">or</span> name==<span class="string">'Dick'</span> <span class="keyword">or</span> name==<span class="string">'Harry'</span>:
    is_generic_name=<span class="keyword">True</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>name=<span class="string">'Tom'</span>
is_generic_name = name <span class="keyword">in</span> (<span class="string">'Tom'</span>,<span class="string">'Dick'</span>,<span class="string">'Harry'</span>)
</pre></td></tr></table></figure>

<h4 id="1-4-_Avoid_comparing_directly_to_True,False,or_None">1.4. Avoid comparing directly to <code>True</code>,<code>False</code>,or <code>None</code></h4>
<p>All of the following are considered <code>False</code><br>•<code>None</code><br>•<code>False</code><br>•zero for numeric types<br>•empty sequences<br>•empty dictionaries<br>•a value of <code>0</code> or <code>False</code> returned when either <code>__len__</code> or <code>__nonzero__</code> is called</p>
<p>Don’t</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">if</span> foo == <span class="keyword">True</span>:
    <span class="keyword">pass</span>
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="keyword">if</span> foo:
    <span class="keyword">pass</span>

<span class="function"><span class="keyword">def</span> <span class="title">insert_value</span><span class="params">(value,position=None)</span>:</span>
    <span class="keyword">if</span> position <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:
        <span class="keyword">pass</span>
</pre></td></tr></table></figure>

<h4 id="1-5-_Use_if_and_else_as_a_short_ternary_operator_replacement(三元运算符_?_:)">1.5. Use if and else as a short ternary operator replacement(三元运算符 <code>? :</code>)</h4>
<p>Don’t:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>foo = True
<span class="keyword">value</span> = <span class="number">0</span>
<span class="keyword">if</span> foo:
    <span class="keyword">value</span> = <span class="number">1</span>
print(<span class="keyword">value</span>)
</pre></td></tr></table></figure>

<p>Do:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>foo = True
<span class="keyword">value</span> = <span class="number">1</span> <span class="keyword">if</span> foo <span class="keyword">else</span> <span class="number">0</span>
print(<span class="keyword">value</span>)
</pre></td></tr></table></figure>

]]></summary>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/tags/Tips/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/tags/Python/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用gitlab搭建代码仓库]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/12/31/2014-12-31-gitlab/"/>
    <id>http://buttonwood.bitbucket.org/2014/12/31/2014-12-31-gitlab/</id>
    <published>2014-12-31T02:51:00.000Z</published>
    <updated>2016-03-26T11:53:44.000Z</updated>
    <content type="html"><![CDATA[<p>我来之前，公司一直用windows server搭建的svn托管代码，每次都要手动远程登陆到服务器然后后台授权。我看网上很多类github的平台，于是选了gitlab实验推荐大家迁移到git上来。</p>
<h3 id="1-_搭建脚本很简单，下载安装包，启动即可。">1. 搭建脚本很简单，下载安装包，启动即可。</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre>curl -O https://downloads-packages<span class="preprocessor">.s</span>3<span class="preprocessor">.amazonaws</span><span class="preprocessor">.com</span>/centos-<span class="number">6.6</span>/gitlab-<span class="number">7.6</span><span class="number">.1</span>_omnibus<span class="number">.5</span><span class="number">.3</span><span class="number">.0</span><span class="preprocessor">.ci</span><span class="number">.1</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>

yum install openssh-server postfix cronie

service postfix start && chkconfig postfix on

rpm -i gitlab-<span class="number">7.6</span><span class="number">.1</span>_omnibus<span class="number">.5</span><span class="number">.3</span><span class="number">.0</span><span class="preprocessor">.ci</span><span class="number">.1</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
</pre></td></tr></table></figure>

<p>然后按说明配置一下gitlab.rb，启动服务即可。注意8080端口和ssh端口转发。</p>
<h3 id="2-_用docker来更新最新版本的gitlab">2. 用docker来更新最新版本的gitlab</h3>
<p>Updated 2016-03-24 </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre>## 修改防火墙
iptables -A INPUT -m state --state NEW -p tcp --dport 10022 -j ACCEPT
iptables -A INPUT -m state --state NEW -p tcp --dport 8080 -j ACCEPT
service iptables save
service iptables status
service iptables restart
iptables -L

service docker restart
docker run --detach \
    -<span class="ruby">-hostname gitlab.example.com \
</span>    -<span class="ruby">-env <span class="constant">GITLAB_OMNIBUS_CONFIG</span>=<span class="string">"external_url 'http://119.*.*.*/'; gitlab_rails['lfs_enabled'] = true;"</span> \
</span>    -<span class="ruby">p <span class="number">443</span><span class="symbol">:</span><span class="number">443</span> -p <span class="number">8080</span><span class="symbol">:</span><span class="number">80</span> -p <span class="number">10022</span><span class="symbol">:</span><span class="number">22</span> \
</span>    -<span class="ruby">-name gitlab \
</span>    -<span class="ruby">-restart always \
</span>    -<span class="ruby">-volume /srv/gitlab/<span class="symbol">config:</span>/etc/gitlab \
</span>    -<span class="ruby">-volume /srv/gitlab/<span class="symbol">logs:</span>/var/log/gitlab \
</span>    -<span class="ruby">-volume /srv/gitlab/<span class="symbol">data:</span>/var/opt/gitlab \
</span>    gitlab/gitlab-ce:latest
</pre></td></tr></table></figure>]]></content>
    
    
      <category term="git" scheme="http://buttonwood.bitbucket.org/tags/git/"/>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/categories/Tips/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rChart and morris.js]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/12/15/2014-12-15-rChart/"/>
    <id>http://buttonwood.bitbucket.org/2014/12/15/2014-12-15-rChart/</id>
    <published>2014-12-15T03:51:00.000Z</published>
    <updated>2015-01-01T08:13:20.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_Using_rChart_and_morris-js_for_time_series_visualization">1. Using <code>rChart</code> and <code>morris.js</code> for time series visualization</h3>
<p>Here are the codes!</p>
<pre><code>library(<span class="string">'rCharts'</span>, <span class="string">'ramnathv'</span>)
df &lt;- <span class="built_in">read</span>.csv(<span class="string">"type.1h.csv"</span>,header=<span class="constant">FALSE</span>,stringsAsFactors=<span class="constant">FALSE</span>)
colnames(df) &lt;- c(<span class="string">"date"</span>,<span class="string">"1"</span>, <span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>)
transform(df, <span class="built_in">date</span> = <span class="keyword">as</span>.<span class="keyword">character</span>(<span class="built_in">date</span>))
m1 &lt;- mPlot(x = <span class="string">"date"</span>, y = c(<span class="string">"1"</span>, <span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>), type = <span class="string">"Line"</span>, data = df)
m1$<span class="built_in">set</span>(pointSize = <span class="number">0</span>, lineWidth = <span class="number">1</span>)
m1$print(<span class="string">"chart2"</span>)
m1
<span class="comment">#base64enc</span>
<span class="comment"># install.packages("base64enc")</span>
library(<span class="string">"base64enc"</span>)
m1$save(<span class="string">'graph1.html'</span>, <span class="string">'inline'</span>, cdn=<span class="constant">TRUE</span>)
<span class="comment">#m1$save('graph1.html', 'inline', standalone=TRUE)</span>
</code></pre><h4 id="2-_Graph">2. Graph</h4>
<p>Here, we can see this is a test graph!</p>
<p>Here is a test image!<br><img src="http://ww3.sinaimg.cn/mw690/6fbc15dcgw1enahmlkcp1j20n20b941c.jpg" alt=""></p>
<p>Here is a test page!<br><a href="../../../../fish/graph1.html">graph1.html</a></p>
]]></content>
    
    
      <category term="R" scheme="http://buttonwood.bitbucket.org/tags/R/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python Pocket Reference]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/10/10/python_pocker_reference/"/>
    <id>http://buttonwood.bitbucket.org/2014/10/10/python_pocker_reference/</id>
    <published>2014-10-10T07:43:00.000Z</published>
    <updated>2015-01-16T14:31:10.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>

<p>The Zen of Python</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre>Beautiful <span class="keyword">is</span> better than ugly.
<span class="keyword">Explicit</span> <span class="keyword">is</span> better than implicit.
Simple <span class="keyword">is</span> better than complex.
Complex <span class="keyword">is</span> better than complicated.
Flat <span class="keyword">is</span> better than nested.
Sparse <span class="keyword">is</span> better than dense.
Readability counts.
Special cases aren<span class="comment">'t special enough to break the rules.</span>
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
</pre></td></tr></table></figure>

<p>Packages</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>package/
    __init__<span class="preprocessor">.py</span>
    module1<span class="preprocessor">.py</span>
    subpackage/
        __init__<span class="preprocessor">.py</span>
        module2<span class="preprocessor">.py</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="keyword">import</span> package.module1
<span class="keyword">from</span> packages.subpackage <span class="keyword">import</span> module2
<span class="keyword">from</span> packages.subpackage.module2 <span class="keyword">import</span> name
</pre></td></tr></table></figure>


<h3 id="References">References</h3>
<p><a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="external">https://www.python.org/dev/peps/pep-0008/</a><br>“Python Objects”, Fredrik Lundh, <a href="http://www.effbot.org/zone/python-objects.htm" target="_blank" rel="external">http://www.effbot.org/zone/python-objects.htm</a><br>“How to think like a Pythonista”, Mark Hammond, <a href="http://python.net/crew/mwh/hacks/objectthink.html" target="_blank" rel="external">http://python.net/crew/mwh/hacks/objectthink.html</a><br>“Python main() functions”, Guido van Rossum, <a href="http://www.artima.com/weblogs/viewpost.jsp?thread=4829" target="_blank" rel="external">http://www.artima.com/weblogs/viewpost.jsp?thread=4829</a><br>“Python Idioms and Efficiency”, <a href="http://jaynes.colorado.edu/PythonIdioms.html" target="_blank" rel="external">http://jaynes.colorado.edu/PythonIdioms.html</a><br>“Python track: python idioms”, <a href="http://www.cs.caltech.edu/courses/cs11/material/python/misc/python_idioms.html" target="_blank" rel="external">http://www.cs.caltech.edu/courses/cs11/material/python/misc/python_idioms.html</a><br>“Be Pythonic”, Shalabh Chaturvedi, <a href="http://shalabh.infogami.com/Be_Pythonic2" target="_blank" rel="external">http://shalabh.infogami.com/Be_Pythonic2</a><br>“Python Is Not Java”, Phillip J. Eby, <a href="http://dirtsimple.org/2004/12/python-is-not-java.html" target="_blank" rel="external">http://dirtsimple.org/2004/12/python-is-not-java.html</a><br>“What is Pythonic?”, Martijn Faassen, <a href="http://faassen.n--tree.net/blog/view/weblog/2005/08/06/0" target="_blank" rel="external">http://faassen.n--tree.net/blog/view/weblog/2005/08/06/0</a><br>“Sorting Mini-HOWTO”, Andrew Dalke, <a href="http://wiki.python.org/moin/HowTo/Sorting" target="_blank" rel="external">http://wiki.python.org/moin/HowTo/Sorting</a><br>“Python Idioms”, <a href="http://www.gungfu.de/facts/wiki/Main/PythonIdioms" target="_blank" rel="external">http://www.gungfu.de/facts/wiki/Main/PythonIdioms</a><br>“Python FAQs”, <a href="http://www.python.org/doc/faq/" target="_blank" rel="external">http://www.python.org/doc/faq/</a></p>
]]></content>
    
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/tags/Tips/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/tags/Python/"/>
    
      <category term="Python" scheme="http://buttonwood.bitbucket.org/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[刷新时间检测]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/08/27/2014-08-27-time-monitoring/"/>
    <id>http://buttonwood.bitbucket.org/2014/08/27/2014-08-27-time-monitoring/</id>
    <published>2014-08-27T11:51:00.000Z</published>
    <updated>2016-03-26T11:58:01.000Z</updated>
    <content type="html"><![CDATA[<p>小伙伴后台跑的java程序总是莫名其妙卡死，于是帮他写了个脚本定时检查日志文件有没有更新，没有更新的话重启程序。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre><span class="shebang">#!/bin/bash </span>
today=`date +%Y-%m-%d`
logfi=<span class="string">'analysis'</span><span class="variable">$today</span><span class="string">'.log'</span>
otime=`stat -c %y /home/AnalysisLog/<span class="variable">$logfi</span>|awk <span class="string">'{print $2}'</span>`

<span class="keyword">while</span> ; <span class="keyword">do</span>
    ctime=`stat -c %y /home/AnalysisLog/<span class="variable">$logfi</span>|awk <span class="string">'{print $2}'</span>`
    <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$otime</span>"</span> == <span class="string">"<span class="variable">$ctime</span>"</span>  ]]; <span class="keyword">then</span>
        `ps aux |grep <span class="variable">$cmp</span> |grep  -v <span class="string">"grep"</span> |awk <span class="string">'{print "kill -9\t"$2}'</span> |sh`
        `nohup /bin/sh /root/run/analysis/newAnalysis.bat &`
        sleep(<span class="number">30</span>) <span class="comment"># 等待重启 30s</span>
        today=`date +%Y-%m-%d`
        logfi=<span class="string">'analysis'</span><span class="variable">$today</span><span class="string">'.log'</span>
        otime=`stat -c %y /home/AnalysisLog/<span class="variable">$logfi</span>|awk <span class="string">'{print $2}'</span>`
        sleep(<span class="number">3600</span>) <span class="comment"># 一个小时以后再检查 </span>
    <span class="keyword">else</span>
        <span class="built_in">echo</span> <span class="string">"It is keeping updating!"</span>
    <span class="keyword">fi</span>  
    <span class="comment"># 时间更新</span>
    now=`date +%Y-%m-%d`
    today=<span class="variable">$now</span>
    logfi=<span class="string">'analysis'</span><span class="variable">$today</span><span class="string">'.log'</span>
    otime=`stat -c %y /home/AnalysisLog/<span class="variable">$logfi</span>|awk <span class="string">'{print $2}'</span>`
<span class="keyword">done</span>
</pre></td></tr></table></figure>]]></content>
    
    
      <category term="git" scheme="http://buttonwood.bitbucket.org/tags/git/"/>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/categories/Tips/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[服务器重装centOS设定静态ip]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/08/22/2014-08-22-centOS-reinstall/"/>
    <id>http://buttonwood.bitbucket.org/2014/08/22/2014-08-22-centOS-reinstall/</id>
    <published>2014-08-22T02:51:00.000Z</published>
    <updated>2016-03-26T11:30:12.000Z</updated>
    <content type="html"><![CDATA[<p>电信机房5台托管服务器被攻击，为安全起见，老板令我需要重装系统。可采用光盘刻录或u盘安装方法(过程从略)。</p>
<h3 id="1-_重装系统">1. 重装系统</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="code"><pre>reboot(crtl+allt+delete) 
-<span class="ruby">&gt; 
</span>F2(system manage) 
-<span class="ruby">&gt; 
</span>F11(BIOS Menu) 
-<span class="ruby">&gt; 
</span>BIOS Boot Setting 
-<span class="ruby">&gt;
</span>Boot Sequence 
-<span class="ruby">&gt; 
</span># 光盘或U盘
COD(DVD or U Driver) 
-<span class="ruby">&gt; 
</span>OK 
-<span class="ruby">&gt; 
</span>Install from video / U Driver
-<span class="ruby">&gt; 
</span>No Test 
-<span class="ruby">&gt; 
</span>Basic 
-<span class="ruby">&gt; 
</span>Fresh 
-<span class="ruby">&gt; 
</span>Use All 
-<span class="ruby">&gt; 
</span>Basic Server 
-<span class="ruby">&gt; 
</span>reboot
</pre></td></tr></table></figure>

<h3 id="2-_设置固定IP上网">2. 设置固定IP上网</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="code"><pre><span class="comment">#### 内网或外网ip</span>
IPADDR=<span class="number">192.168</span>.<span class="number">1.201</span>

<span class="comment">#### 2.1 网关配置</span>
cp /etc/sysconfig/network /etc/sysconfig/network.bak
<span class="built_in">echo</span> <span class="string">"
NETWORKING=yes
NETWORKING_IPV6=yes
GATEWAY=192.168.1.1
"</span> &gt;&gt; /etc/sysconfig/network

<span class="comment">#### 2.2 网卡配置 </span>
cp /etc/sysconfig/network-scripts/ifcfg-em1 /etc/sysconfig/network-scripts/ifcfg-em1.bak
sed -i <span class="string">'s/BOOTPROTO=dhcp/BOOTPROTO=none/'</span> /etc/sysconfig/network-scripts/ifcfg-em1
sed -i <span class="string">'s/ONBOOT=no/ONBOOT=yes/'</span> /etc/sysconfig/network-scripts/ifcfg-em1

<span class="built_in">echo</span> <span class="string">"
BROADCAST=192.168.1.255
IPADDR=<span class="variable">$IPADDR</span>
NETWORK=192.168.1.0
"</span> &gt;&gt;/etc/sysconfig/network-scripts/ifcfg-em1

<span class="comment">#### 2.3 DNS解析</span>
<span class="built_in">echo</span> <span class="string">"nameserver 202.103.24.68"</span> &gt;/etc/resolv.conf

<span class="comment">#### 2.4 测试</span>
chkconfig | grep network
service network restart
ping www.baidu.com
</pre></td></tr></table></figure>

<h3 id="3-_参考">3. 参考</h3>
<p><a href="http://blog.51yip.com/linux/1120.html" target="_blank" rel="external">http://blog.51yip.com/linux/1120.html</a><br><a href="https://github.com/iofdata/DM/issues/8" target="_blank" rel="external">https://github.com/iofdata/DM/issues/8</a></p>
]]></content>
    
    
      <category term="centOS" scheme="http://buttonwood.bitbucket.org/tags/centOS/"/>
    
      <category term="network" scheme="http://buttonwood.bitbucket.org/tags/network/"/>
    
      <category term="Tips" scheme="http://buttonwood.bitbucket.org/categories/Tips/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Sysbench for MySQL Testing]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/25/2014-07-25-sysbench-mysql/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/25/2014-07-25-sysbench-mysql/</id>
    <published>2014-07-25T15:51:00.000Z</published>
    <updated>2014-07-25T16:37:04.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_For_whole_testing_scripts">1. For whole testing scripts</h3>
<pre><code>    host<span class="subst">=</span>localhost
    port<span class="subst">=</span><span class="number">3306</span>
    socket<span class="subst">=</span>/home/<span class="built_in">data</span>/mysql/mysql<span class="built_in">.</span>sock
    user<span class="subst">=</span>root
    password<span class="subst">=</span><span class="number">123456</span>

    resultsdir<span class="subst">=</span><span class="built_in">.</span>/results<span class="attribute">-thread</span>

    threads<span class="subst">=</span><span class="string">"8 16 32 64 128"</span>

    sizes<span class="subst">=</span><span class="string">"1000000 5000000 10000000 15000000 20000000 25000000 30000000"</span>


    printf <span class="string">"sizes,threads,transactions,trns p/s,deadlocks, dls p/s,read/write requests,r/w reqs p/s,min,avg,max,99 percentile \n"</span> <span class="subst">&gt;&gt;</span> stat<span class="built_in">.</span>txt

    mkdir <span class="attribute">-p</span> <span class="variable">$resultsdir</span>

    for <span class="keyword">thread</span> <span class="keyword">in</span> <span class="variable">$threads</span>;<span class="keyword">do</span>
        mkdir <span class="variable">$resultsdir</span>/<span class="keyword">thread</span><span class="subst">-</span><span class="variable">$thread</span>
        for size <span class="keyword">in</span> <span class="variable">$sizes</span>; <span class="keyword">do</span>
            sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-table</span><span class="attribute">-engine</span><span class="subst">=</span>innodb <span class="subst">\</span>
            <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-size</span><span class="subst">=</span><span class="variable">$size</span>  <span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span><span class="variable">$socket</span> <span class="subst">\</span>
            <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span><span class="variable">$user</span> <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span><span class="variable">$host</span> <span class="subst">\</span>
            <span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="variable">$password</span> <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">\</span>
            <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test<span class="variable">$size</span> prepare;
            sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-table</span><span class="attribute">-engine</span><span class="subst">=</span>innodb <span class="subst">\</span>
            <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-size</span><span class="subst">=</span><span class="variable">$size</span> <span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span><span class="variable">$socket</span> <span class="subst">\</span>
            <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span><span class="variable">$user</span> <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span><span class="variable">$host</span> <span class="subst">\</span>
            <span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="variable">$password</span> <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">\</span>
            <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test<span class="variable">$size</span>  <span class="subst">--</span><span class="keyword">max</span><span class="attribute">-requests</span><span class="subst">=</span><span class="number">1000</span> <span class="subst">\</span>
            <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="variable">$thread</span> run <span class="subst">|</span> <span class="subst">\</span> 
            tee <span class="attribute">-a</span> <span class="variable">$resultsdir</span>/<span class="keyword">thread</span><span class="subst">-</span><span class="variable">$thread</span>/sysbench<span class="built_in">.</span><span class="variable">$thread.</span><span class="variable">$size.report</span>;
            sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span><span class="variable">$host</span>  <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span><span class="variable">$user</span> <span class="subst">\</span>
            <span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="variable">$password</span> <span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span><span class="variable">$socket</span> <span class="subst">\</span>
            <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test<span class="variable">$size</span>  cleanup;

            cat <span class="variable">$resultsdir</span>/<span class="keyword">thread</span><span class="subst">-</span><span class="variable">$thread</span>/sysbench<span class="built_in">.</span><span class="variable">$thread.</span><span class="variable">$size.report</span> <span class="subst">|</span> <span class="subst">\</span>
            egrep <span class="string">"cat|threads:|transactions:|deadlocks|
            read/write|min:|avg:|max:|percentile:"</span> <span class="subst">|</span> <span class="subst">\</span>
            sed  <span class="attribute">-e</span> <span class="string">'1 s/Number of threads: //'</span> <span class="subst">|</span> <span class="subst">\</span>
            tr <span class="attribute">-d</span> <span class="string">"\n"</span> <span class="subst">|</span> <span class="subst">\</span>
            sed <span class="attribute">-e</span> <span class="string">'s/Number of threads: /\n/g'</span> <span class="subst">\</span>
            <span class="attribute">-e</span> <span class="string">'s/[A-Za-z\/]\{1,\}://g'</span> <span class="subst">\</span>
            <span class="attribute">-e</span> <span class="string">'s/read\/write//g'</span> <span class="subst">\</span>
            <span class="attribute">-e</span> <span class="string">'s/approx\.  95//g'</span> <span class="subst">\</span>
            <span class="attribute">-e</span> <span class="string">'s/per sec.)//g'</span> <span class="subst">\</span>
            <span class="attribute">-e</span> <span class="string">'s/ms//g'</span> <span class="subst">\</span>
            <span class="attribute">-e</span> <span class="string">'s/(//g'</span>  <span class="subst">\</span>
            <span class="attribute">-e</span> <span class="string">'s/  */,/g'</span> <span class="subst">|</span> awk <span class="attribute">-v</span> d<span class="subst">=</span><span class="variable">$size</span> <span class="string">'{$0=d","$0}1'</span> <span class="subst">&gt;&gt;</span> stat<span class="built_in">.</span>txt
        done
    done
</code></pre><h3 id="2-_Results">2. Results</h3>
<pre><code>SIZES,THREADS,TRANSACTIONS,TRNS P/S,DEADLOCKS,DLS P/S,READ/WRITE REQUESTS,R/W REQS P/S,<span class="keyword">MIN</span>,AVG,<span class="keyword">MAX</span>,<span class="number">99</span> PERCENTILE
<span class="number">1000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">236.13</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4486.45</span>,<span class="number">7.16</span>,<span class="number">33.66</span>,<span class="number">118.17</span>,<span class="number">59.32</span>
<span class="number">5000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">265.81</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5050.47</span>,<span class="number">6.35</span>,<span class="number">29.99</span>,<span class="number">99.14</span>,<span class="number">46.96</span>
<span class="number">10000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">379.46</span>,<span class="number">127</span>,<span class="number">48.19</span>,<span class="number">21413</span>,<span class="number">8125.43</span>,<span class="number">3.54</span>,<span class="number">21.01</span>,<span class="number">306.08</span>,<span class="number">34.70</span>
<span class="number">15000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">202.33</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3844.31</span>,<span class="number">8.76</span>,<span class="number">39.36</span>,<span class="number">113.15</span>,<span class="number">62.77</span>
<span class="number">20000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">185.34</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3521.38</span>,<span class="number">10.48</span>,<span class="number">43.05</span>,<span class="number">111.56</span>,<span class="number">66.92</span>
<span class="number">25000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">171.11</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3251.01</span>,<span class="number">7.46</span>,<span class="number">46.69</span>,<span class="number">506.47</span>,<span class="number">74.60</span>
<span class="number">30000000</span>,<span class="number">8</span>,<span class="number">1000</span>,<span class="number">163.24</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3101.55</span>,<span class="number">14.49</span>,<span class="number">48.91</span>,<span class="number">504.90</span>,<span class="number">77.21</span>
<span class="number">1000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">288.82</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5487.51</span>,<span class="number">7.82</span>,<span class="number">54.95</span>,<span class="number">168.84</span>,<span class="number">89.33</span>
<span class="number">5000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">270.04</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5130.82</span>,<span class="number">19.13</span>,<span class="number">59.02</span>,<span class="number">323.48</span>,<span class="number">92.27</span>
<span class="number">10000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">231.99</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4407.90</span>,<span class="number">5.73</span>,<span class="number">68.45</span>,<span class="number">329.40</span>,<span class="number">112.02</span>
<span class="number">15000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">230.78</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4384.76</span>,<span class="number">8.29</span>,<span class="number">69.03</span>,<span class="number">233.97</span>,<span class="number">124.21</span>
<span class="number">20000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">170.32</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3236.17</span>,<span class="number">9.48</span>,<span class="number">93.60</span>,<span class="number">799.09</span>,<span class="number">158.71</span>
<span class="number">25000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">164.44</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3124.34</span>,<span class="number">5.68</span>,<span class="number">96.44</span>,<span class="number">633.64</span>,<span class="number">165.06</span>
<span class="number">30000000</span>,<span class="number">16</span>,<span class="number">1000</span>,<span class="number">174.87</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3322.48</span>,<span class="number">9.50</span>,<span class="number">90.89</span>,<span class="number">520.92</span>,<span class="number">151.65</span>
<span class="number">1000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">316.29</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">6009.43</span>,<span class="number">7.72</span>,<span class="number">99.23</span>,<span class="number">346.24</span>,<span class="number">172.95</span>
<span class="number">5000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">248.03</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4712.60</span>,<span class="number">23.21</span>,<span class="number">125.06</span>,<span class="number">383.60</span>,<span class="number">208.35</span>
<span class="number">10000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">229.40</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4358.52</span>,<span class="number">5.39</span>,<span class="number">138.82</span>,<span class="number">598.64</span>,<span class="number">350.74</span>
<span class="number">15000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">211.46</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4017.80</span>,<span class="number">13.27</span>,<span class="number">150.13</span>,<span class="number">501.56</span>,<span class="number">284.44</span>
<span class="number">20000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">198.36</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3768.77</span>,<span class="number">8.54</span>,<span class="number">159.58</span>,<span class="number">822.41</span>,<span class="number">252.87</span>
<span class="number">25000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">181.85</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3455.19</span>,<span class="number">21.85</span>,<span class="number">174.35</span>,<span class="number">891.91</span>,<span class="number">271.78</span>
<span class="number">30000000</span>,<span class="number">32</span>,<span class="number">1000</span>,<span class="number">156.00</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2964.03</span>,<span class="number">9.45</span>,<span class="number">204.21</span>,<span class="number">811.06</span>,<span class="number">339.07</span>
<span class="number">1000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">311.37</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5916.07</span>,<span class="number">19.86</span>,<span class="number">198.48</span>,<span class="number">562.27</span>,<span class="number">369.82</span>
<span class="number">5000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">287.12</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5455.27</span>,<span class="number">29.12</span>,<span class="number">216.80</span>,<span class="number">843.55</span>,<span class="number">338.67</span>
<span class="number">10000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">222.90</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4235.16</span>,<span class="number">13.82</span>,<span class="number">285.81</span>,<span class="number">975.70</span>,<span class="number">773.48</span>
<span class="number">15000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">193.57</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3677.74</span>,<span class="number">12.19</span>,<span class="number">327.30</span>,<span class="number">1143.78</span>,<span class="number">846.66</span>
<span class="number">20000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">170.73</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3243.88</span>,<span class="number">55.67</span>,<span class="number">370.57</span>,<span class="number">1217.91</span>,<span class="number">1092.95</span>
<span class="number">25000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">157.72</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2996.74</span>,<span class="number">11.59</span>,<span class="number">401.83</span>,<span class="number">1680.79</span>,<span class="number">1306.81</span>
<span class="number">30000000</span>,<span class="number">64</span>,<span class="number">1000</span>,<span class="number">158.19</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3005.66</span>,<span class="number">19.20</span>,<span class="number">401.41</span>,<span class="number">1304.60</span>,<span class="number">1107.11</span>
<span class="number">1000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">302.16</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">5741.04</span>,<span class="number">52.05</span>,<span class="number">408.05</span>,<span class="number">1041.78</span>,<span class="number">772.32</span>
<span class="number">5000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">251.01</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">4769.20</span>,<span class="number">26.99</span>,<span class="number">489.92</span>,<span class="number">1724.37</span>,<span class="number">781.39</span>
<span class="number">10000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">207.77</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">3947.55</span>,<span class="number">102.64</span>,<span class="number">604.39</span>,<span class="number">1577.85</span>,<span class="number">1285.85</span>
<span class="number">15000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">149.60</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2842.35</span>,<span class="number">146.68</span>,<span class="number">841.09</span>,<span class="number">3348.05</span>,<span class="number">2764.42</span>
<span class="number">20000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">145.41</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2762.83</span>,<span class="number">132.31</span>,<span class="number">865.04</span>,<span class="number">3247.91</span>,<span class="number">2620.98</span>
<span class="number">25000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">139.95</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2658.97</span>,<span class="number">252.97</span>,<span class="number">896.25</span>,<span class="number">2942.05</span>,<span class="number">2773.54</span>
<span class="number">30000000</span>,<span class="number">128</span>,<span class="number">1000</span>,<span class="number">115.80</span>,<span class="number">0</span>,<span class="number">0.00</span>,<span class="number">19000</span>,<span class="number">2200.18</span>,<span class="number">221.51</span>,<span class="number">1089.31</span>,<span class="number">4408.08</span>,<span class="number">4141.01</span> 
</code></pre><h3 id="3-_Visulization">3. Visulization</h3>
<pre><code><span class="function"><span class="title">library</span><span class="params">(<span class="string">"ggplot2"</span>)</span>
<span class="title">df</span> &lt;- <span class="title">read</span>.<span class="title">csv</span><span class="params">(<span class="string">"C:\\Users\\tanhao\\Documents\\GitHub\\DM\\mysql\\work\\stat.csv"</span>,head=<span class="variable">TRUE</span>)</span>
<span class="title">ggplot</span><span class="params">(df, <span class="function_name">aes</span>(x = <span class="function_name">factor</span>(sizes), y = trns.p.s, fill=<span class="function_name">factor</span>(threads)))</span> + <span class="title">geom_bar</span><span class="params">(stat = <span class="string">"identity"</span>, position=<span class="string">"dodge"</span>)</span></span>
</code></pre><p><img src="https://cloud.githubusercontent.com/assets/1680943/3700027/1d8dea4a-13db-11e4-9043-31028496d885.png" alt="image"></p>
<p>以上数据为一台1核1G主机的性能测试结果.</p>
<p>欢迎参见<a href="https://github.com/iofdata/DM/issues/5" target="_blank" rel="external">Details</a></p>
]]></content>
    
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/tags/MySQL/"/>
    
      <category term="sysbench" scheme="http://buttonwood.bitbucket.org/tags/sysbench/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/categories/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sysbench testing]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/24/2014-07-24-sysbench-testing/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/24/2014-07-24-sysbench-testing/</id>
    <published>2014-07-24T15:51:00.000Z</published>
    <updated>2014-07-25T15:09:35.000Z</updated>
    <content type="html"><![CDATA[<h3 id="sysbench_测试">sysbench 测试</h3>
<h4 id="1_cpu_性能测试">1 cpu 性能测试</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">sysbench</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">test=cpu</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">cpu</span><span class="literal">-</span><span class="comment">max</span><span class="literal">-</span><span class="comment">prime=20000</span> <span class="comment">run</span>
</pre></td></tr></table></figure><br>cpu测试主要是进行素数的加法运算，在上面的例子中，<br>指定了最大的素数为 20000，自己可以根据机器cpu的性能来适当调整数值。<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">1</span>

Doing CPU performance benchmark

Threads started!

Done.

Maximum prime <span class="built_in">number</span> checked <span class="operator">in</span> CPU test: <span class="number">20000</span>


Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">30.5083</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">10000</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">30.5043</span>
    per-request statistics:
         <span class="built_in">min</span>:                                  <span class="number">2.83</span>ms
         <span class="built_in">avg</span>:                                  <span class="number">3.05</span>ms
         <span class="built_in">max</span>:                                  <span class="number">6.46</span>ms
         approx.  <span class="number">95</span> percentile:               <span class="number">3.48</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">10000.0000</span>/<span class="number">0.00</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">30.5043</span>/<span class="number">0.00</span>
</pre></td></tr></table></figure>

<h4 id="2_线程测试">2 线程测试</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>threads <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">64</span> <span class="subst">--</span><span class="keyword">thread</span><span class="attribute">-yields</span><span class="subst">=</span><span class="number">100</span> <span class="subst">--</span><span class="keyword">thread</span><span class="attribute">-locks</span><span class="subst">=</span><span class="number">2</span> run
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">64</span>

Doing thread subsystem performance test
Thread yields per test: <span class="number">100</span> Locks used: <span class="number">2</span>
Threads started!
Done.


Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">0.6215</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">10000</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">39.3849</span>
    per-request statistics:
         <span class="built_in">min</span>:                                  <span class="number">0.04</span>ms
         <span class="built_in">avg</span>:                                  <span class="number">3.94</span>ms
         <span class="built_in">max</span>:                                 <span class="number">85.26</span>ms
         approx.  <span class="number">95</span> percentile:              <span class="number">30.41</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">156.2500</span>/<span class="number">10.52</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">0.6154</span>/<span class="number">0.00</span>
</pre></td></tr></table></figure>

<h4 id="3_磁盘IO性能测试，随机读写和删除">3 磁盘IO性能测试，随机读写和删除</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>fileio <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">16</span> <span class="subst">--</span>file<span class="attribute">-total</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">3</span>G <span class="subst">--</span>file<span class="attribute">-test</span><span class="attribute">-mode</span><span class="subst">=</span>rndrw prepare
sysbench <span class="subst">--</span>test<span class="subst">=</span>fileio <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">16</span> <span class="subst">--</span>file<span class="attribute">-total</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">3</span>G <span class="subst">--</span>file<span class="attribute">-test</span><span class="attribute">-mode</span><span class="subst">=</span>rndrw run
sysbench <span class="subst">--</span>test<span class="subst">=</span>fileio <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">16</span> <span class="subst">--</span>file<span class="attribute">-total</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">3</span>G <span class="subst">--</span>file<span class="attribute">-test</span><span class="attribute">-mode</span><span class="subst">=</span>rndrw cleanup
</pre></td></tr></table></figure><br>上述参数指定了最大创建16个线程，创建的文件总大小为3G，文件读写模式为随机读。<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">64</span>

Doing thread subsystem performance test
Thread yields per test: <span class="number">100</span> Locks used: <span class="number">2</span>
Threads started!
Done.


Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">0.6215</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">10000</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">39.3849</span>
    per-request statistics:
         <span class="built_in">min</span>:                                  <span class="number">0.04</span>ms
         <span class="built_in">avg</span>:                                  <span class="number">3.94</span>ms
         <span class="built_in">max</span>:                                 <span class="number">85.26</span>ms
         approx.  <span class="number">95</span> percentile:              <span class="number">30.41</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">156.2500</span>/<span class="number">10.52</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">0.6154</span>/<span class="number">0.00</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">16</span>

Extra <span class="built_in">file</span> <span class="built_in">open</span> flags: <span class="number">0</span>
<span class="number">128</span> <span class="built_in">files</span>, <span class="number">24</span>Mb <span class="keyword">each</span>
<span class="number">3</span>Gb total <span class="built_in">file</span> size
Block size <span class="number">16</span>Kb
Number <span class="operator">of</span> <span class="built_in">random</span> requests <span class="keyword">for</span> <span class="built_in">random</span> IO: <span class="number">10000</span>
Read/Write ratio <span class="keyword">for</span> combined <span class="built_in">random</span> IO test: <span class="number">1.50</span>
Periodic FSYNC enabled, calling fsync() <span class="keyword">each</span> <span class="number">100</span> requests.
Calling fsync() <span class="keyword">at</span> <span class="operator">the</span> <span class="function"><span class="keyword">end</span> <span class="title">of</span> <span class="title">test</span>, <span class="title">Enabled</span>.</span>
Using synchronous I/O mode
Doing <span class="built_in">random</span> r/w test
Threads started!
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">3</span> pos: <span class="number">0</span> errno = <span class="number">0</span> (Q?)
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">3</span> pos: <span class="number">6340608</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">13</span> pos: <span class="number">16531456</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">48</span> pos: <span class="number">5537792</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">96</span> pos: <span class="number">8503296</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">26</span> pos: <span class="number">9568256</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">26</span> pos: <span class="number">15794176</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">127</span> pos: <span class="number">18300928</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">9</span> pos: <span class="number">21331968</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">119</span> pos: <span class="number">8421376</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">62</span> pos: <span class="number">17448960</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">87</span> pos: <span class="number">20398080</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">113</span> pos: <span class="number">13156352</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">20</span> pos: <span class="number">10649600</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">17</span> pos: <span class="number">9060352</span> errno = <span class="number">0</span> ()
FATAL: Failed <span class="built_in">to</span> <span class="built_in">read</span> <span class="built_in">file</span>! <span class="built_in">file</span>: <span class="number">16</span> pos: <span class="number">311296</span> errno = <span class="number">0</span> ()
Done.

Operations performed:  <span class="number">0</span> Read, <span class="number">0</span> Write, <span class="number">0</span> Other = <span class="number">0</span> Total
Read <span class="number">0</span>b  Written <span class="number">0</span>b  Total transferred <span class="number">0</span>b  (<span class="number">0</span>b/<span class="built_in">sec</span>)
    <span class="number">0.00</span> Requests/<span class="built_in">sec</span> executed

Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">0.0029</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">0</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">0.0000</span>
    per-request statistics:
         <span class="built_in">min</span>:                            <span class="number">18446744073709.55</span>ms
         <span class="built_in">avg</span>:                                  <span class="number">0.00</span>ms
         <span class="built_in">max</span>:                                  <span class="number">0.00</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">0.0000</span>/<span class="number">0.00</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">0.0000</span>/<span class="number">0.00</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

Removing test <span class="built_in">files</span>...
</pre></td></tr></table></figure>

<h4 id="4_内存测试">4 内存测试</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>sysbench --test=<span class="keyword">memory</span> --<span class="keyword">memory</span>-block-<span class="keyword">size</span>=<span class="number">8</span>k --<span class="keyword">memory</span>-total-<span class="keyword">size</span>=<span class="number">4</span>G run
</pre></td></tr></table></figure><br>上述参数指定了本次测试整个过程是在内存中传输 4G 的数据量，每个 block 大小为 8K。<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="preprocessor"># 无结果,待更新!</span>
</pre></td></tr></table></figure>

<h4 id="5_mysql_性能测试">5 mysql 性能测试</h4>
<h5 id="5-1_prepare_data">5.1 prepare data</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-table</span><span class="attribute">-engine</span><span class="subst">=</span>innodb <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">1000000</span> <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span>/home/<span class="built_in">data</span>/mysql/mysql<span class="built_in">.</span>sock <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span>root <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span>localhost <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="number">123456</span> <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test prepare
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded system evaluation benchmark

No DB drivers specified, using mysql
Creating table <span class="string">'test'</span><span class="keyword">...</span>
Creating <span class="number">1000000</span> records <span class="keyword">in</span> table <span class="string">'test'</span><span class="keyword">...</span>
</pre></td></tr></table></figure>

<h5 id="5-2_run_test">5.2 run test</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-table</span><span class="attribute">-engine</span><span class="subst">=</span>innodb <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-size</span><span class="subst">=</span><span class="number">1000000</span> <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span>/home/<span class="built_in">data</span>/mysql/mysql<span class="built_in">.</span>sock <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span>root <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span>localhost <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="number">123456</span> <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test <span class="subst">\</span>
<span class="subst">--</span><span class="keyword">max</span><span class="attribute">-requests</span><span class="subst">=</span><span class="number">1000</span> <span class="subst">--</span>num<span class="attribute">-threads</span><span class="subst">=</span><span class="number">100</span> run
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="code"><pre>sysbench <span class="number">0.4</span><span class="number">.10</span>:  multi-threaded <span class="keyword">system</span> evaluation benchmark

No DB drivers specified, <span class="keyword">using</span> mysql
WARNING: Preparing <span class="operator">of</span> <span class="string">"BEGIN"</span> is unsupported, <span class="keyword">using</span> emulation
(<span class="keyword">last</span> message repeated <span class="number">99</span> times)
Running <span class="operator">the</span> test <span class="operator">with</span> following options:
Number <span class="operator">of</span> threads: <span class="number">100</span>

Doing OLTP test.
Running mixed OLTP test
Using Special distribution (<span class="number">12</span> iterations,  <span class="number">1</span> pct <span class="operator">of</span> values are returned <span class="operator">in</span> <span class="number">75</span> pct cases)
Using <span class="string">"BEGIN"</span> <span class="keyword">for</span> starting transactions
Using auto_inc <span class="command"><span class="keyword">on</span> <span class="title">the</span> <span class="title">id</span> <span class="title">column</span></span>
Maximum <span class="built_in">number</span> <span class="operator">of</span> requests <span class="keyword">for</span> OLTP test is limited <span class="built_in">to</span> <span class="number">1000</span>
Threads started!
Done.

OLTP test statistics:
    queries performed:
        <span class="built_in">read</span>:                            <span class="number">14000</span>
        <span class="built_in">write</span>:                           <span class="number">5000</span>
        other:                           <span class="number">2000</span>
        total:                           <span class="number">21000</span>
    transactions:                        <span class="number">1000</span>   (<span class="number">276.21</span> per <span class="built_in">sec</span>.)
    deadlocks:                           <span class="number">0</span>      (<span class="number">0.00</span> per <span class="built_in">sec</span>.)
    <span class="built_in">read</span>/<span class="built_in">write</span> requests:                 <span class="number">19000</span>  (<span class="number">5247.91</span> per <span class="built_in">sec</span>.)
    other operations:                    <span class="number">2000</span>   (<span class="number">552.41</span> per <span class="built_in">sec</span>.)

Test execution summary:
    total <span class="built_in">time</span>:                          <span class="number">3.6205</span>s
    total <span class="built_in">number</span> <span class="operator">of</span> events:              <span class="number">1000</span>
    total <span class="built_in">time</span> taken <span class="keyword">by</span> event execution: <span class="number">356.3231</span>
    per-request statistics:
         <span class="built_in">min</span>:                                 <span class="number">55.01</span>ms
         <span class="built_in">avg</span>:                                <span class="number">356.32</span>ms
         <span class="built_in">max</span>:                               <span class="number">1223.34</span>ms
         approx.  <span class="number">95</span> percentile:             <span class="number">764.73</span>ms

Threads fairness:
    events (<span class="built_in">avg</span>/stddev):           <span class="number">10.0000</span>/<span class="number">0.76</span>
    execution <span class="built_in">time</span> (<span class="built_in">avg</span>/stddev):   <span class="number">3.5632</span>/<span class="number">0.03</span>
</pre></td></tr></table></figure>

<h5 id="5-3_clean_data">5.3 clean data</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>sysbench <span class="subst">--</span>test<span class="subst">=</span>oltp <span class="subst">--</span>mysql<span class="attribute">-host</span><span class="subst">=</span>localhost  <span class="subst">--</span>mysql<span class="attribute">-user</span><span class="subst">=</span>root  <span class="subst">--</span>mysql<span class="attribute">-password</span><span class="subst">=</span><span class="number">123456</span> <span class="subst">\</span>
<span class="subst">--</span>mysql<span class="attribute">-socket</span><span class="subst">=</span>/home/<span class="built_in">data</span>/mysql/mysql<span class="built_in">.</span>sock <span class="subst">--</span>mysql<span class="attribute">-db</span><span class="subst">=</span>students <span class="subst">--</span>oltp<span class="attribute">-table</span><span class="attribute">-name</span><span class="subst">=</span>test cleanup
</pre></td></tr></table></figure>

<p>以上测试内容参考 <a href="http://imysql.cn/node/312" target="_blank" rel="external">MySQL 中文网</a>.</p>
<p>本文数据为一台1核1G主机的性能测试结果.</p>
<p>欢迎参见<a href="https://github.com/iofdata/DM/issues/5" target="_blank" rel="external">Details</a></p>
]]></content>
    
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/tags/MySQL/"/>
    
      <category term="sysbench" scheme="http://buttonwood.bitbucket.org/tags/sysbench/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/categories/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sysbench libtool error and mysql testing]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/22/2014-07-22-sysbench-install/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/22/2014-07-22-sysbench-install/</id>
    <published>2014-07-22T13:51:00.000Z</published>
    <updated>2014-07-25T15:15:52.000Z</updated>
    <content type="html"><![CDATA[<h3 id="sysbench_安装">sysbench 安装</h3>
<p><a href="http://blog.163.com/digoal@126/blog/static/16387704020134142151769/" target="_blank" rel="external">http://blog.163.com/digoal@126/blog/static/16387704020134142151769/</a></p>
<h4 id="1_找不到mysql的include和lib文件目录">1 找不到<code>mysql</code>的<code>include</code>和<code>lib</code>文件目录</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre>wget -c http://dev<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/get/Downloads/MySQL-<span class="number">5.6</span>/MySQL-devel-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>/from/http://mysql<span class="preprocessor">.spd</span><span class="preprocessor">.co</span><span class="preprocessor">.il</span>/
rpm -ivh MySQL-devel-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>

wget -c http://dev<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/get/Downloads/MySQL-<span class="number">5.6</span>/MySQL-shared-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>/from/http://mysql<span class="preprocessor">.spd</span><span class="preprocessor">.co</span><span class="preprocessor">.il</span>/
rpm -ivh MySQL-shared-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>

rpm -qa|grep MySQL
rpm -ql MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64

chkconfig --list|grep -i mysql

./configure --with-mysql-includes=/usr/include/mysql --with-mysql-libs=/usr/lib64/mysql/
make
make check
make install
</pre></td></tr></table></figure><br>可惜,仍然不能很好的结果问题,继续艰难摸索中.<br><br>#### 2 最终解决方案<br><br>##### 5-0 版本但是不能测试 <code>oltp</code><br><br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="label">http:</span>//www<span class="preprocessor">.lefred</span><span class="preprocessor">.be</span>/node/<span class="number">154</span>
rpm -ivh sysbench-<span class="number">0.5</span>-<span class="number">2.</span>el6_<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ql sysbench
</pre></td></tr></table></figure>

<h5 id="转回_4-10_版本_解决方案">转回 4.10 版本 解决方案</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
</pre></td><td class="code"><pre>#git clone https://github.com/nettedfish/sysbench_from_percona.git
yum -y install libtool
yum -y install automake*
rm -rf libtool
ln -s /usr/bin/libtool ./

./autogen.sh
./configure
make & make install
ln -s  /usr/local/bin/sysbench /usr/bin/
sysbench --test=oltp help

sysbench 0.4.10:  multi-threaded system evaluation benchmark

oltp options:
  -<span class="ruby">-oltp-test-mode=<span class="constant">STRING</span>         test type to use {simple,complex,nontrx,sp} [complex]
</span>  -<span class="ruby">-oltp-sp-name=<span class="constant">STRING</span>           name of store procedure to call <span class="keyword">in</span> <span class="constant">SP</span> test mode []
</span>  -<span class="ruby">-oltp-read-only=[on|off]       generate only <span class="string">'read'</span> queries (<span class="keyword">do</span> <span class="keyword">not</span> modify database) [off]
</span>  -<span class="ruby">-oltp-skip-trx=[on|off]        skip <span class="constant">BEGIN</span>/<span class="constant">COMMIT</span> statements [off]
</span>  -<span class="ruby">-oltp-range-size=<span class="constant">N</span>             range size <span class="keyword">for</span> range queries [<span class="number">100</span>]
</span>  -<span class="ruby">-oltp-point-selects=<span class="constant">N</span>          number of point selects [<span class="number">10</span>]
</span>  -<span class="ruby">-oltp-simple-ranges=<span class="constant">N</span>          number of simple ranges [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-sum-ranges=<span class="constant">N</span>             number of sum ranges [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-order-ranges=<span class="constant">N</span>           number of ordered ranges [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-distinct-ranges=<span class="constant">N</span>        number of distinct ranges [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-index-updates=<span class="constant">N</span>          number of index update [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-non-index-updates=<span class="constant">N</span>      number of non-index updates [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-nontrx-mode=<span class="constant">STRING</span>       mode <span class="keyword">for</span> non-transactional test {select, update_key, update_nokey, insert, delete} [select]
</span>  -<span class="ruby">-oltp-auto-inc=[on|off]        whether <span class="constant">AUTO_INCREMENT</span> (<span class="keyword">or</span> equivalent) should be used on id column [on]
</span>  -<span class="ruby">-oltp-connect-delay=<span class="constant">N</span>          time <span class="keyword">in</span> microseconds to sleep after connection to database [<span class="number">10000</span>]
</span>  -<span class="ruby">-oltp-user-delay-min=<span class="constant">N</span>         minimum time <span class="keyword">in</span> microseconds to sleep after each request [<span class="number">0</span>]
</span>  -<span class="ruby">-oltp-user-delay-max=<span class="constant">N</span>         maximum time <span class="keyword">in</span> microseconds to sleep after each request [<span class="number">0</span>]
</span>  -<span class="ruby">-oltp-table-name=<span class="constant">STRING</span>        name of test table [sbtest]
</span>  -<span class="ruby">-oltp-table-size=<span class="constant">N</span>             number of records <span class="keyword">in</span> test table [<span class="number">10000</span>]
</span>  -<span class="ruby">-oltp-dist-type=<span class="constant">STRING</span>         random numbers distribution {uniform,gaussian,special} [special]
</span>  -<span class="ruby">-oltp-dist-iter=<span class="constant">N</span>              number of iterations used <span class="keyword">for</span> numbers generation [<span class="number">12</span>]
</span>  -<span class="ruby">-oltp-dist-pct=<span class="constant">N</span>               percentage of values to be treated as <span class="string">'special'</span> (<span class="keyword">for</span> special distribution) [<span class="number">1</span>]
</span>  -<span class="ruby">-oltp-dist-res=<span class="constant">N</span>               percentage of <span class="string">'special'</span> values to use (<span class="keyword">for</span> special distribution) [<span class="number">75</span>]
</span>
General database options:

  -<span class="ruby">-db-driver=<span class="constant">STRING</span>  specifies database driver to use (<span class="string">'help'</span> to get list of available drivers)
</span>  -<span class="ruby">-db-ps-mode=<span class="constant">STRING</span> prepared statements usage mode {auto, disable} [auto]
</span>

Compiled-in database drivers:
  mysql - MySQL driver

mysql options:
  -<span class="ruby">-mysql-host=[<span class="constant">LIST</span>,...]       <span class="constant">MySQL</span> server host [localhost]
</span>  -<span class="ruby">-mysql-port=<span class="constant">N</span>                <span class="constant">MySQL</span> server port [<span class="number">3306</span>]
</span>  -<span class="ruby">-mysql-socket=<span class="constant">STRING</span>         <span class="constant">MySQL</span> socket
</span>  -<span class="ruby">-mysql-user=<span class="constant">STRING</span>           <span class="constant">MySQL</span> user [sbtest]
</span>  -<span class="ruby">-mysql-password=<span class="constant">STRING</span>       <span class="constant">MySQL</span> password []
</span>  -<span class="ruby">-mysql-db=<span class="constant">STRING</span>             <span class="constant">MySQL</span> database name [sbtest]
</span>  -<span class="ruby">-mysql-table-engine=<span class="constant">STRING</span>   storage engine to use <span class="keyword">for</span> the test table {myisam,innodb,bdb,heap,ndbcluster,federated} [innodb]
</span>  -<span class="ruby">-mysql-engine-trx=<span class="constant">STRING</span>     whether storage engine used is transactional <span class="keyword">or</span> <span class="keyword">not</span> {yes,no,auto} [auto]
</span>  -<span class="ruby">-mysql-ssl=[on|off]          use <span class="constant">SSL</span> connections, <span class="keyword">if</span> available <span class="keyword">in</span> the client library [off]
</span>  -<span class="ruby">-myisam-max-rows=<span class="constant">N</span>           max-rows parameter <span class="keyword">for</span> <span class="constant">MyISAM</span> tables [<span class="number">1000000</span>]
</span>  -<span class="ruby">-mysql-create-options=<span class="constant">STRING</span> additional options passed to <span class="constant">CREATE</span> <span class="constant">TABLE</span> []</span>
</pre></td></tr></table></figure>

<p>后续将继续关注数据测试结果.</p>
<h4 id="3_关于libtool错误的其它参考">3 关于<code>libtool</code>错误的其它参考</h4>
<p><a href="http://wenku.baidu.com/link?url=DGlHEoWxiLWq4829Qp_7ngYB9r3glfkk_JOHEVNDedUWDSWJxYRPiv55KWkhSPnkeKPXjn2O2N6n-Xgqi_j4c2j2GIRfqU66l2NlWZ0mHSK" target="_blank" rel="external">http://wenku.baidu.com/link?url=DGlHEoWxiLWq4829Qp_7ngYB9r3glfkk_JOHEVNDedUWDSWJxYRPiv55KWkhSPnkeKPXjn2O2N6n-Xgqi_j4c2j2GIRfqU66l2NlWZ0mHSK</a></p>
<h4 id="4_sysbench-4-12和dbt2官方测试源址">4  <code>sysbench-4.12</code>和<code>dbt2</code>官方测试源址</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>wget http://downloads<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/source/sysbench-<span class="number">0.4</span><span class="number">.12</span><span class="number">.5</span><span class="preprocessor">.tar</span><span class="preprocessor">.gz</span>
gunzip sysbench-<span class="number">0.4</span><span class="number">.12</span><span class="number">.5</span><span class="preprocessor">.tar</span><span class="preprocessor">.gz</span>
tar -xvf sysbench-<span class="number">0.4</span><span class="number">.12</span><span class="number">.5</span><span class="preprocessor">.tar</span>
cd sysbench-<span class="number">0.4</span><span class="number">.12</span><span class="number">.5</span>

wget http://downloads<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/source/dbt2-<span class="number">0.37</span><span class="number">.50</span><span class="number">.3</span><span class="preprocessor">.tar</span><span class="preprocessor">.gz</span>
</pre></td></tr></table></figure>

<p>欢迎参见<a href="https://github.com/iofdata/DM/issues/5" target="_blank" rel="external">Details</a></p>
]]></content>
    
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/tags/MySQL/"/>
    
      <category term="sysbench" scheme="http://buttonwood.bitbucket.org/tags/sysbench/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/categories/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[A First Glance at MySQL]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/22/2014-07-22-mysql-install/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/22/2014-07-22-mysql-install/</id>
    <published>2014-07-22T03:51:00.000Z</published>
    <updated>2014-07-25T15:09:58.000Z</updated>
    <content type="html"><![CDATA[<h3 id="A_安装MySQL">A 安装MySQL</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="code"><pre><span class="preprocessor">##wget http://192.168.2.2:8080/download/MySQL-client-5.6.19-1.el6.x86_64.rpm</span>
<span class="preprocessor">##wget http://192.168.2.2:8080/download/MySQL-server-5.6.19-1.el6.x86_64.rpm</span>
wget -c http://dev<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/get/Downloads/MySQL-<span class="number">5.6</span>/MySQL-*-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>/from/http://mysql<span class="preprocessor">.spd</span><span class="preprocessor">.co</span><span class="preprocessor">.il</span>/

rpm -ivg MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
<span class="preprocessor">## 报错</span>
<span class="preprocessor">## file /usr/share/mysql/czech/errmsg.sys from install of MySQL-server-5.6.19-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.71-1.el6.x86_64</span>

yum remove mysql-libs-<span class="number">5.1</span>.*
rpm -ivh MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ivg MySQL-client-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ivh MySQL-devle-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>

<span class="preprocessor">## check and start MySQL</span>
chkconfig | grep mysql
service mysql start

<span class="preprocessor">## 数据目录</span>
lsof|grep mysql
ll -rt /var/lib/mysql/

<span class="preprocessor">## mysql 配置文件</span>
ll -rt /usr/share/mysql/

<span class="preprocessor">## 相关程序命令</span>
which mysql
/usr/bin/mysql

<span class="preprocessor">## 启动脚本</span>
ll -rt /etc/rc<span class="preprocessor">.d</span>/init<span class="preprocessor">.d</span>/
</pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="B_切换mysql目录到_/home/data">B 切换mysql目录到 /home/data</h3>
<p>参见 <a href="http://database.51cto.com/art/200709/56715.htm" target="_blank" rel="external">http://database.51cto.com/art/200709/56715.htm</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="code"><pre><span class="preprocessor">#### 1 关掉mysql服务并创建备份目录</span>
<span class="title">mysqladmin</span> -u root -p shutdown
<span class="title">mkdir</span> /home/<span class="typedef"><span class="keyword">data</span></span>
<span class="title">cd</span> /home/<span class="typedef"><span class="keyword">data</span></span>

<span class="title">lsof</span>|grep mysql
<span class="preprocessor"># mysql 数据目录</span>
<span class="title">ll</span> -rt /var/lib/mysql
<span class="title">mv</span> /var/lib/mysql ./

<span class="preprocessor">#### 2 编辑MySQL的配置文件/etc/my.cnf</span>
<span class="title">find</span> / -name *.cnf -print
    /home/<span class="typedef"><span class="keyword">data</span>/mysql/auto.cnf</span>
    /usr/share/doc/<span class="type">MySQL</span>-server-<span class="number">5.6</span><span class="number">.19</span>/my-<span class="default"><span class="keyword">default</span>.cnf</span>
    /usr/share/mysql/my-<span class="default"><span class="keyword">default</span>.cnf</span>
    /usr/my.cnf
    /etc/pki/tls/openssl.cnf
<span class="title">cp</span>  /usr/my.cnf /etc/my.cnf
<span class="title">vi</span>   /etc/my.cnf
    #port    =   <span class="number">3306</span>
    socket  =   /home/<span class="typedef"><span class="keyword">data</span>/mysql/mysql.sock</span>
    # 注释掉最后一行

<span class="preprocessor">#### 3 修改MySQL启动脚本/etc/init.d/mysql</span>
<span class="title">vi</span>　/etc/init.d/mysql
    #datadir=/var/lib/mysql(注释此行)
    datadir=/home/<span class="typedef"><span class="keyword">data</span>/mysql <span class="container">(加上此行)</span></span>

<span class="preprocessor">#### 4 reboot</span>
/etc/init.d/mysql restart

<span class="preprocessor">#### 5 socket error 解决</span>
<span class="title">ln</span> -s  /home/<span class="typedef"><span class="keyword">data</span>/mysql/mysql.sock /var/lib/mysql/</span>
</pre></td></tr></table></figure>

<h3 id="C_mysql_常见报错_root@localhost_不能启动的问题">C mysql 常见报错 <code>root@localhost</code> 不能启动的问题</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre>#### <span class="number">1</span> localhost 问题
mysql -u root -p
Enter password:
    ERROR <span class="number">1045</span> (<span class="number">28000</span>): Access denied <span class="keyword">for</span> user <span class="string">'root'</span>@<span class="string">'localhost'</span> (<span class="keyword">using</span> password: YES)

#### <span class="number">2</span> safe 模式重启
service mysql stop
chkconfig
mysqld_safe --<span class="keyword">skip</span>-grant-table

#####
# 参见 http:<span class="comment">//wenku.baidu.com/link?url=ARPOWYE5qWssO6toplKyOFWoaVP57UeA3Lj3IUU00wk3tcP3EGpfEp52uJE8M_Ckio7sieL-8x0gOQ4Epwn8d4eUw_xpMNlGZZeswiPsg93</span>
#####

/etc/init.d/mysql stop
mysqld_safe --user=mysql --<span class="keyword">skip</span>-grant-tables --<span class="keyword">skip</span>-networking &
mysql -u root mysql
#mysql&gt; UPDATE user <span class="keyword">SET</span> Password=<span class="string">'tanhao'</span>  <span class="keyword">where</span> USER=<span class="string">'root'</span>;
mysql&gt;  update mysql.user <span class="keyword">set</span> password=password(<span class="string">'tanhao'</span>) <span class="keyword">where</span> user=<span class="string">'root'</span>;
#mysql&gt; <span class="keyword">select</span> * <span class="keyword">FROM</span> user <span class="keyword">WHERE</span> USER=<span class="string">'root'</span>\G
mysql&gt;<span class="keyword">SELECT</span> host,user,password <span class="keyword">FROM</span> user;
mysql&gt; FLUSH PRIVILEGES;
mysql&gt; quit
/etc/init.d/mysql restart
mysql -uroot -p
# You must <span class="keyword">SET</span> PASSWORD before executing this statement解决
mysql&gt; <span class="keyword">SET</span> PASSWORD = PASSWORD(<span class="string">'123456'</span>); # <span class="keyword">new</span> root key will be <span class="number">123456</span>
</pre></td></tr></table></figure>

<h3 id="D_MySQL_testing">D MySQL testing</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> students;</span>
USE students;

<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> transcripts(
stu_id <span class="keyword">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,
stu_name    <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>,
stu_class     <span class="keyword">char</span>(<span class="number">50</span>)    <span class="keyword">NULL</span>,
stu_grade    <span class="keyword">int</span>    <span class="keyword">NULL</span>,
<span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>(stu_id)
) ENGIN=InnoDB;</span>

<span class="operator"><span class="keyword">SHOW</span> <span class="keyword">TABLE</span> STATUS <span class="keyword">LIKE</span> <span class="string">'transcripts'</span>;</span>
<span class="operator"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> transcripts;</span>
<span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> transcripts <span class="keyword">ADD</span> stu_email <span class="keyword">CHAR</span>(<span class="number">50</span>);</span>

<span class="operator"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> transcripts(stu_id,stu_name,stu_class,stu_grade,stu_email)
<span class="keyword">VALUES</span>
(<span class="number">1</span>, <span class="string">'Jim'</span>,<span class="string">'A'</span>,<span class="number">90</span>,<span class="keyword">NULL</span>),
(<span class="number">2</span>, <span class="string">'Tom'</span>,<span class="string">'B'</span>,<span class="number">95</span>,<span class="keyword">NULL</span>),
(<span class="number">3</span>, <span class="string">'Jhon'</span>,<span class="string">'A'</span>,<span class="number">70</span>,<span class="keyword">NULL</span>),
(<span class="number">4</span>, <span class="string">'Adam'</span>,<span class="string">'B'</span>,<span class="number">65</span>,<span class="keyword">NULL</span>),
(<span class="number">5</span>, <span class="string">'Grace'</span>,<span class="string">'A'</span>,<span class="number">80</span>,<span class="keyword">NULL</span>),
(<span class="number">6</span>, <span class="string">'Ana'</span>,<span class="string">'B'</span>,<span class="number">95</span>,<span class="keyword">NULL</span>),
(<span class="number">7</span>, <span class="string">'Babe'</span>,<span class="string">'A'</span>,<span class="number">80</span>,<span class="keyword">NULL</span>),
(<span class="number">8</span>, <span class="string">'KK'</span>,<span class="string">'B'</span>,<span class="number">85</span>,<span class="keyword">NULL</span>),
(<span class="number">9</span>, <span class="string">'Han'</span>,<span class="string">'A'</span>,<span class="number">70</span>,<span class="keyword">NULL</span>),
(<span class="number">10</span>, <span class="string">'Sun'</span>,<span class="string">'B'</span>,<span class="number">75</span>,<span class="keyword">NULL</span>),
(<span class="number">11</span>, <span class="string">'GG'</span>,<span class="string">'A'</span>,<span class="number">80</span>,<span class="keyword">NULL</span>),
(<span class="number">12</span>, <span class="string">'Dog'</span>,<span class="string">'B'</span>,<span class="number">95</span>,<span class="keyword">NULL</span>),
(<span class="number">13</span>, <span class="string">'Cao'</span>,<span class="string">'A'</span>,<span class="number">60</span>,<span class="keyword">NULL</span>),
(<span class="number">14</span>, <span class="string">'Sky'</span>,<span class="string">'B'</span>,<span class="number">85</span>,<span class="keyword">NULL</span>),
(<span class="number">15</span>, <span class="string">'FF'</span>,<span class="string">'A'</span>,<span class="number">90</span>,<span class="keyword">NULL</span>),
(<span class="number">16</span>, <span class="string">'Dom'</span>,<span class="string">'B'</span>,<span class="number">85</span>,<span class="keyword">NULL</span>);</span>

<span class="operator"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> transcripts;</span>
</pre></td></tr></table></figure>

<p>欢迎参见<a href="https://github.com/iofdata/DM/issues/5" target="_blank" rel="external">Details</a></p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="A_安装MySQL">A 安装MySQL</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="code"><pre><span class="preprocessor">##wget http://192.168.2.2:8080/download/MySQL-client-5.6.19-1.el6.x86_64.rpm</span>
<span class="preprocessor">##wget http://192.168.2.2:8080/download/MySQL-server-5.6.19-1.el6.x86_64.rpm</span>
wget -c http://dev<span class="preprocessor">.mysql</span><span class="preprocessor">.com</span>/get/Downloads/MySQL-<span class="number">5.6</span>/MySQL-*-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>/from/http://mysql<span class="preprocessor">.spd</span><span class="preprocessor">.co</span><span class="preprocessor">.il</span>/

rpm -ivg MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
<span class="preprocessor">## 报错</span>
<span class="preprocessor">## file /usr/share/mysql/czech/errmsg.sys from install of MySQL-server-5.6.19-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.71-1.el6.x86_64</span>

yum remove mysql-libs-<span class="number">5.1</span>.*
rpm -ivh MySQL-server-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ivg MySQL-client-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>
rpm -ivh MySQL-devle-<span class="number">5.6</span><span class="number">.19</span>-<span class="number">1.</span>el6<span class="preprocessor">.x</span>86_64<span class="preprocessor">.rpm</span>

<span class="preprocessor">## check and start MySQL</span>
chkconfig | grep mysql
service mysql start

<span class="preprocessor">## 数据目录</span>
lsof|grep mysql
ll -rt /var/lib/mysql/

<span class="preprocessor">## mysql 配置文件</span>
ll -rt /usr/share/mysql/

<span class="preprocessor">## 相关程序命令</span>
which mysql
/usr/bin/mysql

<span class="preprocessor">## 启动脚本</span>
ll -rt /etc/rc<span class="preprocessor">.d</span>/init<span class="preprocessor">.d</span>/
</pre></td></tr></table></figure>

]]></summary>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/tags/MySQL/"/>
    
      <category term="MySQL" scheme="http://buttonwood.bitbucket.org/categories/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Data Sicence ToolBox]]></title>
    <link href="http://buttonwood.bitbucket.org/2014/07/09/2014-07-09-tools/"/>
    <id>http://buttonwood.bitbucket.org/2014/07/09/2014-07-09-tools/</id>
    <published>2014-07-09T03:51:00.000Z</published>
    <updated>2014-07-25T15:06:00.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1_Download_file">1 Download file</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="code"><pre><span class="keyword">if</span>(!<span class="built_in">file</span>.exists(<span class="string">"data"</span>)){
    dir.creat(<span class="string">"data"</span>)
}
fileurl &lt;- <span class="string">"http://"</span>
download.<span class="built_in">file</span>(fileurl, destfile=<span class="string">"./data/data.csv"</span>, method=<span class="string">"curl"</span>)
list.<span class="built_in">files</span>(<span class="string">"./data"</span>)
dateDownloaded &lt;- <span class="built_in">date</span>()

<span class="built_in">read</span>.table(<span class="string">"./data/data.csv"</span>)
<span class="built_in">read</span>.xlsx(<span class="string">"./data/data.xlsx"</span>, sheetIndex=<span class="number">1</span>, header=<span class="constant">TRUE</span>)

library(XML)
fileurl &lt;- <span class="string">"http://www.w3c.com/xml/simple.xml"</span>
doc &lt;- xmlTreeParse(fileurl, useInternal=<span class="constant">TRUE</span>)
rootNode &lt;- xmlRoot(doc)
xmlName(rootNode)
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode,<span class="comment">"//name",xmlvale)</span>


library(jsonlite)
jsonData &lt;- fromJSON(<span class="string">""</span>)
toJSON()

library(RMySQL)
biocLite(<span class="string">"rhdf5"</span>)
</pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="2_git">2 git</h3>
<p><img src="http://ww3.sinaimg.cn/large/6fbc15dcgw1ei6e0nq397j20b70adgm8.jpg" alt="git cmd 图解        
"></p>
<h4 id="Create_a_new_repository_on_the_command_line">Create a new repository on the command line</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>touch README<span class="preprocessor">.md</span>
git init
git <span class="keyword">add</span> README<span class="preprocessor">.md</span>
git commit -m <span class="string">"first commit"</span>
git remote <span class="keyword">add</span> origin https://github<span class="preprocessor">.com</span>/iofdata/DM<span class="preprocessor">.git</span>
git <span class="keyword">push</span> -u origin master
</pre></td></tr></table></figure>

<h4 id="Push_an_existing_repository_from_the_command_line">Push an existing repository from the command line</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>git remote <span class="keyword">add</span> origin https://github<span class="preprocessor">.com</span>/iofdata/DM<span class="preprocessor">.git</span>
git <span class="keyword">push</span> -u origin master
</pre></td></tr></table></figure>


<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="comment">#### add</span>
git <span class="built_in">add</span> . 
git <span class="built_in">add</span> -u 
git <span class="built_in">add</span> -A

git commit -m <span class="string">'message'</span>

git init
git remote origin <span class="keyword">http</span>://buttonwood.github.io

git push

git checkout -b branchname
git branch
git checkout master
</pre></td></tr></table></figure>

<h3 id="3_R_packages">3 R packages</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>install.packages(<span class="string">"slidify"</span>,<span class="string">"ggplot2"</span>,<span class="string">"devtools"</span>)

<span class="function"><span class="title">source</span><span class="params">(<span class="string">"http://bioconductor/org/bioLite.R"</span>)</span>
<span class="title">bioLite</span><span class="params">()</span>
<span class="title">bioLite</span><span class="params">(<span class="function_name">c</span>(<span class="string">"GenomicFeatures"</span>,<span class="string">"AnnotationDbi"</span>))</span></span>
</pre></td></tr></table></figure>

<h3 id="4_Types_of_Data_Science_Questions[^1]">4 Types of Data Science Questions[^1]</h3>
<ul>
<li>Descriptive</li>
<li>Exploratory</li>
<li>Inferential</li>
<li>Predictive</li>
<li>Causal/Correlation is not causation</li>
<li>Mechanistic</li>
</ul>
<p>[^1]:<a href="https://d396qusza40orc.cloudfront.net/datascitoolbox/lecture_slides/03_01_typesOfQuestions.pdf" target="_blank" rel="external">Types of Data Science Questions</a></p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="1_Download_file">1 Download file</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="code"><pre><span class="keyword">if</span>(!<span class="built_in">file</span>.exists(<span class="string">"data"</span>)){
    dir.creat(<span class="string">"data"</span>)
}
fileurl &lt;- <span class="string">"http://"</span>
download.<span class="built_in">file</span>(fileurl, destfile=<span class="string">"./data/data.csv"</span>, method=<span class="string">"curl"</span>)
list.<span class="built_in">files</span>(<span class="string">"./data"</span>)
dateDownloaded &lt;- <span class="built_in">date</span>()

<span class="built_in">read</span>.table(<span class="string">"./data/data.csv"</span>)
<span class="built_in">read</span>.xlsx(<span class="string">"./data/data.xlsx"</span>, sheetIndex=<span class="number">1</span>, header=<span class="constant">TRUE</span>)

library(XML)
fileurl &lt;- <span class="string">"http://www.w3c.com/xml/simple.xml"</span>
doc &lt;- xmlTreeParse(fileurl, useInternal=<span class="constant">TRUE</span>)
rootNode &lt;- xmlRoot(doc)
xmlName(rootNode)
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode,<span class="comment">"//name",xmlvale)</span>


library(jsonlite)
jsonData &lt;- fromJSON(<span class="string">""</span>)
toJSON()

library(RMySQL)
biocLite(<span class="string">"rhdf5"</span>)
</pre></td></tr></table></figure>

]]></summary>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/tags/Tools/"/>
    
      <category term="Git" scheme="http://buttonwood.bitbucket.org/tags/Git/"/>
    
      <category term="R" scheme="http://buttonwood.bitbucket.org/tags/R/"/>
    
      <category term="Tools" scheme="http://buttonwood.bitbucket.org/categories/Tools/"/>
    
  </entry>
  
</feed>
